name: E2E Tests

on:
  push:
    branches: [ main, staging ]
  pull_request:
    branches: [ main, staging ]

env:
  NODE_VERSION: '18.x'
  PLAYWRIGHT_VERSION: '1.39.0'
  DATABASE_URL: 'postgresql://postgres:postgres@localhost:5432/giver_english_db'

jobs:
  prepare:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Get Test Files
        id: set-matrix
        run: |
          TESTS=$(find tests/e2e -name "*.spec.ts" -type f | jq -R -s -c 'split("\n")[:-1]')
          echo "matrix=${TESTS}" >> $GITHUB_OUTPUT

  e2e-tests:
    needs: prepare
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        test-file: ${{ fromJson(needs.prepare.outputs.matrix) }}
      fail-fast: false
      max-parallel: 4

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: giver_english_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Cache Playwright Browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - name: Install Dependencies
        run: |
          npm ci
          npx playwright install --with-deps chromium
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1

      - name: Cache Build
        uses: actions/cache@v3
        with:
          path: .next
          key: ${{ runner.os }}-nextjs-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-nextjs-build-

      - name: Setup Database
        run: |
          npm run migration:run
          npm run seed:test
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}

      - name: Build Application
        run: npm run build
        env:
          NODE_ENV: test
          DATABASE_URL: ${{ env.DATABASE_URL }}

      - name: Start Services
        run: |
          npm run start:test &
          npx wait-on --timeout 60000 http://localhost:3000

      - name: Run E2E Tests
        run: npx playwright test ${{ matrix.test-file }}
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
          NODE_ENV: test
          CI: true
          DEBUG: pw:api

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report-${{ matrix.test-file }}
          path: playwright-report/
          retention-days: 30

      - name: Upload Test Screenshots
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-screenshots-${{ matrix.test-file }}
          path: test-results/
          retention-days: 7

  report:
    needs: e2e-tests
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Download All Test Results
        uses: actions/download-artifact@v3
        with:
          path: all-test-results

      - name: Generate Combined Report
        run: |
          echo "# 🎭 E2Eテスト実行結果" > test-report.md
          echo "## 📊 テスト概要" >> test-report.md
          echo "- 実行日時: $(date)" >> test-report.md
          echo "- ブランチ: ${{ github.ref }}" >> test-report.md
          echo "- コミット: ${{ github.sha }}" >> test-report.md
          echo "## 📝 テスト結果" >> test-report.md
          
          find all-test-results -name "*.json" -type f | while read -r file; do
            echo "### $(basename $(dirname $file))" >> test-report.md
            jq -r '.suites[] | "- " + .title + ": " + (.specs | length | tostring) + " specs"' "$file" >> test-report.md
          done

      - name: Upload Combined Report
        uses: actions/upload-artifact@v3
        with:
          name: combined-test-report
          path: test-report.md
          retention-days: 30

      - name: Notify Slack
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: |
            ${{ job.status == 'success' && '✅ E2Eテストが成功しました' || '❌ E2Eテストが失敗しました' }}
            詳細はGitHub Actionsを確認してください: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} 