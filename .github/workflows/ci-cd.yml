name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'

jobs:
  # 🔍 品質チェック
  quality-check:
    name: 🔍 品質チェック
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 コードチェックアウト
        uses: actions/checkout@v4
        
      - name: 📦 Node.js セットアップ
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 依存関係インストール
        run: npm ci
        
      - name: 🔧 TypeScript型チェック
        run: npm run type-check
        
      - name: 🔍 ESLint
        run: npm run lint
        
      - name: 🧪 単体テスト
        run: npm run test:unit
        
      - name: 🏗️ ビルドテスト
        run: npm run build
        
      - name: 📊 テストカバレッジ
        run: npm run test:coverage
        
      - name: 📈 カバレッジレポート
        uses: codecov/codecov-action@v3
        if: success()
        with:
          file: ./coverage/lcov.info

  # 🧪 E2Eテスト
  e2e-test:
    name: 🧪 E2Eテスト
    runs-on: ubuntu-latest
    needs: quality-check
    
    steps:
      - name: 📥 コードチェックアウト
        uses: actions/checkout@v4
        
      - name: 📦 Node.js セットアップ
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 依存関係インストール
        run: npm ci
        
      - name: 🎭 Playwright インストール
        run: npm run playwright:install
        
      - name: 🚀 開発サーバー起動 & E2Eテスト
        run: |
          npm run build
          npm run start &
          sleep 10
          npm run test:e2e
        env:
          # テスト用環境変数
          NEXT_PUBLIC_SUPABASE_URL: http://localhost:3003
          NEXT_PUBLIC_SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiJ9.ZopqoUt20nEV9cklpv9jtLgXMv3cJYAYfdv-q2I9t0c
          
      - name: 📋 E2Eテスト結果アップロード
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: playwright-report
          path: playwright-report/

  # 🧪 ステージングデプロイ
  deploy-staging:
    name: 🧪 ステージングデプロイ
    runs-on: ubuntu-latest
    needs: [quality-check, e2e-test]
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    
    environment:
      name: staging
      url: https://staging.shiftwith.app
    
    steps:
      - name: 📥 コードチェックアウト
        uses: actions/checkout@v4
        
      - name: 📦 Node.js セットアップ
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 依存関係インストール
        run: npm ci
        
      - name: 🚀 Vercel ステージングデプロイ
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          scope: ${{ secrets.VERCEL_ORG_ID }}
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.STAGING_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.STAGING_SUPABASE_ANON_KEY }}
          
      - name: 🔍 ステージング環境確認
        run: |
          sleep 30
          curl -I https://staging.shiftwith.app/
          curl -s https://staging.shiftwith.app/api/profiles
          
      - name: 💬 Slack通知（ステージング成功）
        if: success()
        uses: 8398a7/action-slack@v3
        with:
          status: success
          text: '🧪 ステージング環境デプロイ成功！'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  # 🚀 本番デプロイ
  deploy-production:
    name: 🚀 本番デプロイ
    runs-on: ubuntu-latest
    needs: [quality-check, e2e-test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    environment:
      name: production
      url: https://shiftwith-sigma.vercel.app
    
    steps:
      - name: 📥 コードチェックアウト
        uses: actions/checkout@v4
        
      - name: 📦 Node.js セットアップ
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 依存関係インストール
        run: npm ci
        
      - name: 🔒 本番デプロイ前最終チェック
        run: |
          npm run deploy:check
          echo "本番デプロイ準備完了"
          
      - name: 🚀 Vercel 本番デプロイ
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          scope: ${{ secrets.VERCEL_ORG_ID }}
          vercel-args: '--prod'
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.PRODUCTION_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.PRODUCTION_SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.PRODUCTION_SUPABASE_SERVICE_ROLE_KEY }}
          
      - name: 🔍 本番環境確認
        run: |
          sleep 30
          curl -I https://shiftwith-sigma.vercel.app/
          curl -s https://shiftwith-sigma.vercel.app/api/profiles
          
      - name: 🏷️ リリースタグ作成
        if: success()
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag "v$(date +'%Y%m%d-%H%M%S')"
          git push origin --tags
          
      - name: 💬 Slack通知（本番成功）
        if: success()
        uses: 8398a7/action-slack@v3
        with:
          status: success
          text: '🚀 本番環境デプロイ成功！'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          
      - name: 🚨 Slack通知（本番失敗）
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          text: '❌ 本番環境デプロイ失敗！緊急対応が必要です。'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  # 🔍 セキュリティスキャン
  security-scan:
    name: 🔍 セキュリティスキャン
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 📥 コードチェックアウト
        uses: actions/checkout@v4
        
      - name: 📦 Node.js セットアップ
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 依存関係インストール
        run: npm ci
        
      - name: 🔍 npm audit
        run: npm audit --audit-level moderate
        
      - name: 🔒 Snyk セキュリティスキャン
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
