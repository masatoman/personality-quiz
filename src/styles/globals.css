/* 長文コンテンツの最適化 */
.mask-bottom {
  -webkit-mask-image: linear-gradient(to bottom, black 60%, transparent 100%);
  mask-image: linear-gradient(to bottom, black 60%, transparent 100%);
}

.prose {
  will-change: transform;
  contain: content;
  overflow-anchor: none;
}

/* スクロールパフォーマンスの最適化 */
.prose * {
  backface-visibility: hidden;
  -webkit-font-smoothing: antialiased;
}

@media (max-width: 768px) {
  .prose {
    font-size: 0.95rem;
    line-height: 1.6;
  }
}

/* アクセシビリティ: フォーカスリングスタイル */
/* デフォルトのフォーカススタイルをリセット */
*:focus {
  outline: none;
}

/* カスタムフォーカスリング */
.focus-ring {
  outline: none;
}

.focus-ring:focus {
  outline: 2px solid #3b82f6;
  outline-offset: 2px;
}

/* 高コントラストモード対応 */
@media (prefers-contrast: high) {
  .focus-ring:focus {
    outline: 4px solid #facc15;
  }
}

/* モーション削減の設定 */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

/* スクリーンリーダー専用クラス */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* フォーカス時に表示されるスクリーンリーダー専用クラス */
.sr-only-focusable:focus {
  position: static;
  width: auto;
  height: auto;
  padding: inherit;
  margin: inherit;
  overflow: visible;
  clip: auto;
  white-space: normal;
}

/* モバイルファーストUI改善 */
/* タッチフレンドリーなインタラクション */
.touch-manipulation {
  touch-action: manipulation;
  -webkit-tap-highlight-color: transparent;
}

/* モバイル用タップフィードバック */
@media (hover: none) and (pointer: coarse) {
  .active\:scale-95:active {
    transform: scale(0.95);
  }
}

/* スクロール改善 */
.smooth-scroll {
  scroll-behavior: smooth;
  -webkit-overflow-scrolling: touch;
}

/* モバイルレイアウト調整 */
@media (max-width: 768px) {
  .mobile-padding {
    padding-left: 1rem;
    padding-right: 1rem;
  }
  
  .mobile-full-width {
    width: 100vw;
    margin-left: calc(-50vw + 50%);
    margin-right: calc(-50vw + 50%);
  }
}

/* セーフエリア対応 */
@supports (padding: max(0px)) {
  .safe-area-inset {
    padding-left: max(1rem, env(safe-area-inset-left));
    padding-right: max(1rem, env(safe-area-inset-right));
    padding-bottom: max(1rem, env(safe-area-inset-bottom));
  }
} 