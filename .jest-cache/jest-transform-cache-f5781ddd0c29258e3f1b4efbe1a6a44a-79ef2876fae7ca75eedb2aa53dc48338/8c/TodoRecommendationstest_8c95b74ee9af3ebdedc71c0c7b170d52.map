{"version":3,"sources":["/Users/master/Local Sites/testcursor/src/components/features/todo/__tests__/TodoRecommendations.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent, cleanup } from '@testing-library/react';\nimport '@testing-library/jest-dom';\nimport TodoRecommendations from '../TodoRecommendations';\nimport { Task } from '../../../../hooks/useTodoStorage';\n\n// モックのタスクデータ\nconst mockTasks: Task[] = [\n  {\n    id: '1',\n    title: 'テストタスク1',\n    description: 'テスト説明1',\n    points: 5,\n    completed: false,\n    createdAt: new Date(),\n    type: 'custom'\n  },\n  {\n    id: '2',\n    title: 'テストタスク2',\n    description: 'テスト説明2',\n    points: 10,\n    completed: true,\n    createdAt: new Date(),\n    type: 'custom'\n  }\n];\n\ndescribe('TodoRecommendations', () => {\n  // 基本的なレンダリングのテスト\n  test('コンポーネントが正しくレンダリングされる', () => {\n    const mockAddTask = jest.fn();\n    render(\n      <TodoRecommendations \n        currentTasks={mockTasks} \n        onAddRecommendedTask={mockAddTask as any} \n      />\n    );\n    \n    // コンポーネントのタイトルが表示されていることを確認\n    expect(screen.getByText('おすすめタスク')).toBeInTheDocument();\n  });\n\n  // 追加ボタンクリック時の動作テスト\n  test('推奨タスク追加時に正しいプロパティが設定される', () => {\n    const mockAddTask = jest.fn();\n    render(\n      <TodoRecommendations \n        currentTasks={mockTasks} \n        onAddRecommendedTask={mockAddTask as any} \n      />\n    );\n    \n    // 追加ボタンをクリック\n    const addButtons = screen.getAllByText('追加');\n    fireEvent.click(addButtons[0]);\n    \n    // onAddRecommendedTaskが呼ばれたことを確認\n    expect(mockAddTask).toHaveBeenCalled();\n    \n    // 呼ばれた引数をテスト\n    const calledWithArg = mockAddTask.mock.calls[0][0];\n    \n    // 今回追加した「type」と「createdAt」プロパティが存在し、正しい値が設定されていることを確認\n    expect(calledWithArg.type).toBe('suggested');\n    expect(calledWithArg.createdAt).toBeInstanceOf(Date);\n  });\n\n  // 異なるタスク状況でのフィルタリングテスト\n  test('タスクの状況に応じて適切な推奨が表示される', () => {\n    const mockAddTask = jest.fn();\n    \n    // タスクが少ない場合\n    render(\n      <TodoRecommendations \n        currentTasks={[]} \n        onAddRecommendedTask={mockAddTask as any} \n      />\n    );\n    \n    // 組織化タイプの推奨タスクが表示されていることを確認\n    expect(screen.getByText('今日のタスク優先順位付け')).toBeInTheDocument();\n    \n    // クリーンアップ\n    cleanup();\n    \n    // 未完了タスクが多い場合\n    const manyIncompleteTasks = Array(6).fill(null).map((_, i) => ({\n      id: `inc-${i}`,\n      title: `未完了タスク${i}`,\n      description: `説明${i}`,\n      points: 5,\n      completed: false,\n      createdAt: new Date(),\n      type: 'custom' as const\n    }));\n    \n    render(\n      <TodoRecommendations \n        currentTasks={manyIncompleteTasks} \n        onAddRecommendedTask={mockAddTask as any} \n      />\n    );\n    \n    // 時間管理タイプの推奨タスクが表示されていることを確認\n    expect(screen.getByText('ポモドーロテクニックを試す')).toBeInTheDocument();\n  });\n}); "],"names":["mockTasks","id","title","description","points","completed","createdAt","Date","type","describe","test","mockAddTask","jest","fn","render","TodoRecommendations","currentTasks","onAddRecommendedTask","expect","screen","getByText","toBeInTheDocument","addButtons","getAllByText","fireEvent","click","toHaveBeenCalled","calledWithArg","mock","calls","toBe","toBeInstanceOf","cleanup","manyIncompleteTasks","Array","fill","map","_","i"],"mappings":";;;;;8DAAkB;wBACiC;QAC5C;4EACyB;;;;;;AAGhC,aAAa;AACb,MAAMA,YAAoB;IACxB;QACEC,IAAI;QACJC,OAAO;QACPC,aAAa;QACbC,QAAQ;QACRC,WAAW;QACXC,WAAW,IAAIC;QACfC,MAAM;IACR;IACA;QACEP,IAAI;QACJC,OAAO;QACPC,aAAa;QACbC,QAAQ;QACRC,WAAW;QACXC,WAAW,IAAIC;QACfC,MAAM;IACR;CACD;AAEDC,SAAS,uBAAuB;IAC9B,iBAAiB;IACjBC,KAAK,wBAAwB;QAC3B,MAAMC,cAAcC,KAAKC,EAAE;QAC3BC,IAAAA,cAAM,gBACJ,qBAACC,4BAAmB;YAClBC,cAAchB;YACdiB,sBAAsBN;;QAI1B,4BAA4B;QAC5BO,OAAOC,cAAM,CAACC,SAAS,CAAC,YAAYC,iBAAiB;IACvD;IAEA,mBAAmB;IACnBX,KAAK,2BAA2B;QAC9B,MAAMC,cAAcC,KAAKC,EAAE;QAC3BC,IAAAA,cAAM,gBACJ,qBAACC,4BAAmB;YAClBC,cAAchB;YACdiB,sBAAsBN;;QAI1B,aAAa;QACb,MAAMW,aAAaH,cAAM,CAACI,YAAY,CAAC;QACvCC,iBAAS,CAACC,KAAK,CAACH,UAAU,CAAC,EAAE;QAE7B,iCAAiC;QACjCJ,OAAOP,aAAae,gBAAgB;QAEpC,aAAa;QACb,MAAMC,gBAAgBhB,YAAYiB,IAAI,CAACC,KAAK,CAAC,EAAE,CAAC,EAAE;QAElD,sDAAsD;QACtDX,OAAOS,cAAcnB,IAAI,EAAEsB,IAAI,CAAC;QAChCZ,OAAOS,cAAcrB,SAAS,EAAEyB,cAAc,CAACxB;IACjD;IAEA,uBAAuB;IACvBG,KAAK,yBAAyB;QAC5B,MAAMC,cAAcC,KAAKC,EAAE;QAE3B,YAAY;QACZC,IAAAA,cAAM,gBACJ,qBAACC,4BAAmB;YAClBC,cAAc,EAAE;YAChBC,sBAAsBN;;QAI1B,4BAA4B;QAC5BO,OAAOC,cAAM,CAACC,SAAS,CAAC,iBAAiBC,iBAAiB;QAE1D,UAAU;QACVW,IAAAA,eAAO;QAEP,cAAc;QACd,MAAMC,sBAAsBC,MAAM,GAAGC,IAAI,CAAC,MAAMC,GAAG,CAAC,CAACC,GAAGC,IAAO,CAAA;gBAC7DrC,IAAI,CAAC,IAAI,EAAEqC,EAAE,CAAC;gBACdpC,OAAO,CAAC,MAAM,EAAEoC,EAAE,CAAC;gBACnBnC,aAAa,CAAC,EAAE,EAAEmC,EAAE,CAAC;gBACrBlC,QAAQ;gBACRC,WAAW;gBACXC,WAAW,IAAIC;gBACfC,MAAM;YACR,CAAA;QAEAM,IAAAA,cAAM,gBACJ,qBAACC,4BAAmB;YAClBC,cAAciB;YACdhB,sBAAsBN;;QAI1B,6BAA6B;QAC7BO,OAAOC,cAAM,CAACC,SAAS,CAAC,kBAAkBC,iBAAiB;IAC7D;AACF"}