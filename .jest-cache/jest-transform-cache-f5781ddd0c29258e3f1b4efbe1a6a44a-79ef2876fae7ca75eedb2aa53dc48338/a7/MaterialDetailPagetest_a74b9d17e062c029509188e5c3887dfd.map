{"version":3,"sources":["/Users/master/Local Sites/testcursor/src/app/__tests__/MaterialDetailPage.test.tsx"],"sourcesContent":["/// <reference types=\"@testing-library/jest-dom\" />\nimport '@testing-library/jest-dom';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\nimport userEvent from '@testing-library/user-event';\nimport { act } from 'react-dom/test-utils';\nimport React from 'react';\nimport MaterialDetailPage from '../materials/[id]/page';\n\n// useParamsとuseRouterのモック\njest.mock('next/navigation', () => ({\n  useParams: jest.fn(() => ({ id: 'test-material-id' })),\n  useRouter: jest.fn(() => ({\n    back: jest.fn(),\n    push: jest.fn()\n  })),\n}));\n\n// window.alertのモック\nwindow.alert = jest.fn();\n\n// Material型をインポートせずに直接定義（テスト用）\ntype MockMaterial = {\n  id: string;\n  title: string;\n  description: string;\n  content: string;\n  category: string;\n  difficulty: 'beginner' | 'intermediate' | 'advanced';\n  author: {\n    id: string;\n    name: string;\n    avatar: string;\n    giverScore: number;\n    type: 'ギバー' | 'マッチャー' | 'テイカー';\n  };\n  created_at: string;\n  view_count: number;\n  rating: number;\n  is_bookmarked: boolean;\n  is_published: boolean;\n  tags: string[];\n};\n\n// モックデータの設定\nconst mockMaterial: MockMaterial = {\n  id: 'test-material-id',\n  title: 'ビジネス英語：互恵的関係の構築',\n  description: 'ビジネスシーンで互恵的な関係を構築するための英語表現とコミュニケーション戦略を学びます。',\n  content: '<h2>互恵的関係とは</h2><p>互恵的関係（reciprocal relationship）とは、双方が利益を得られる関係性のことです。</p>',\n  category: 'business',\n  difficulty: 'intermediate',\n  author: {\n    id: 'author-id',\n    name: 'ギバー太郎',\n    avatar: '/avatars/giver.png',\n    giverScore: 85,\n    type: 'ギバー'\n  },\n  created_at: '2023-09-15T10:30:00Z',\n  view_count: 234,\n  rating: 4.7,\n  is_bookmarked: false,\n  is_published: true,\n  tags: ['ビジネス英語', '交渉', 'コミュニケーション', '関係構築']\n};\n\nconst mockFeedbacks = [\n  {\n    id: 'f1',\n    user_id: 'user-1',\n    user_name: 'マッチャー花子',\n    user_avatar: '/avatars/matcher.png',\n    rating: 5,\n    comment: 'とても実践的な内容でした！',\n    created_at: '2023-10-05T14:25:00Z'\n  }\n];\n\nconst mockRelatedMaterials = [\n  {\n    id: 'r1',\n    title: 'ポリートレスポンスガイド',\n    category: 'communication',\n    difficulty: 'beginner',\n    rating: 4.8,\n    author_name: 'ギバー太郎'\n  }\n];\n\n// モック関数で使用する型定義\ntype SetStateMock = React.Dispatch<React.SetStateAction<any>>;\n\n// テストスイート\ndescribe('MaterialDetailPage', () => {\n  beforeEach(() => {\n    // モックのリセット\n    jest.clearAllMocks();\n    \n    // fetchMaterial関数のモック実装\n    const originalUseEffect = React.useEffect;\n    jest.spyOn(React, 'useEffect').mockImplementationOnce((f: Function) => {\n      f();\n      return originalUseEffect(f, []);\n    });\n    \n    // useStateのモック\n    jest.spyOn(React, 'useState').mockImplementation((initialValue: any): [any, SetStateMock] => {\n      if (initialValue === null && typeof initialValue === 'object') {\n        return [mockMaterial, jest.fn()];\n      } else if (Array.isArray(initialValue) && initialValue.length === 0) {\n        if (mockFeedbacks && !mockRelatedMaterials) return [mockFeedbacks, jest.fn()];\n        if (mockRelatedMaterials && !mockFeedbacks) return [mockRelatedMaterials, jest.fn()];\n        // デフォルトの空配列を返す\n        return [[], jest.fn()];\n      } else if (initialValue === true) {\n        return [false, jest.fn()];\n      }\n      return [initialValue, jest.fn()];\n    });\n  });\n\n  it('教材のタイトルと説明が表示される', () => {\n    render(<MaterialDetailPage />);\n    \n    expect(screen.getByText('ビジネス英語：互恵的関係の構築')).toBeInTheDocument();\n    expect(screen.getByText('ビジネスシーンで互恵的な関係を構築するための英語表現とコミュニケーション戦略を学びます。')).toBeInTheDocument();\n  });\n\n  it('著者情報が表示される', () => {\n    render(<MaterialDetailPage />);\n    \n    expect(screen.getByText('ギバー太郎')).toBeInTheDocument();\n    expect(screen.getByText('ギバースコア:')).toBeInTheDocument();\n    expect(screen.getByText('85')).toBeInTheDocument();\n  });\n\n  it('教材の難易度とカテゴリが表示される', () => {\n    render(<MaterialDetailPage />);\n    \n    expect(screen.getByText('ビジネス英語')).toBeInTheDocument();\n    expect(screen.getByText('中級')).toBeInTheDocument();\n  });\n\n  it('教材のコンテンツがレンダリングされる', () => {\n    render(<MaterialDetailPage />);\n    \n    // dangerouslySetInnerHTMLでレンダリングされたコンテンツをテスト\n    expect(document.querySelector('.prose')?.innerHTML).toContain('互恵的関係とは');\n  });\n\n  it('タグが表示される', () => {\n    render(<MaterialDetailPage />);\n    \n    mockMaterial.tags.forEach(tag => {\n      expect(screen.getByText(tag)).toBeInTheDocument();\n    });\n  });\n\n  it('フィードバックが表示される', () => {\n    render(<MaterialDetailPage />);\n    \n    expect(screen.getByText('マッチャー花子')).toBeInTheDocument();\n    expect(screen.getByText('とても実践的な内容でした！')).toBeInTheDocument();\n  });\n\n  it('関連教材が表示される', () => {\n    render(<MaterialDetailPage />);\n    \n    expect(screen.getByText('ポリートレスポンスガイド')).toBeInTheDocument();\n  });\n\n  it('ブックマークボタンをクリックするとステートが変わる', async () => {\n    const user = userEvent.setup();\n    \n    render(<MaterialDetailPage />);\n    \n    const bookmarkButton = screen.getByText('ブックマーク');\n    await user.click(bookmarkButton);\n    \n    // toggleBookmark関数の呼び出しを確認（実装の詳細に依存するので、正確な検証は難しい）\n    expect(bookmarkButton).toBeInTheDocument();\n  });\n\n  it('学習完了ボタンをクリックするとalertが表示される', async () => {\n    const user = userEvent.setup();\n    \n    render(<MaterialDetailPage />);\n    \n    const completeButton = screen.getByText('学習完了としてマーク');\n    await user.click(completeButton);\n    \n    expect(window.alert).toHaveBeenCalledWith('学習を完了しました！ポイントが加算されました。');\n  });\n\n  it('評価フォームに入力して送信できる', async () => {\n    const user = userEvent.setup();\n    \n    render(<MaterialDetailPage />);\n    \n    // 星評価をクリック\n    const starButtons = screen.getAllByText('★');\n    await user.click(starButtons[2]); // 3番目の星（index 2）をクリック\n    \n    // コメント入力\n    const commentTextarea = screen.getByPlaceholderText('コメントを入力してください（任意）');\n    await user.type(commentTextarea, 'テストコメント');\n    \n    // 送信ボタンクリック\n    const submitButton = screen.getByText('評価を送信');\n    await user.click(submitButton);\n    \n    // 送信中の状態を確認（実装によって異なる可能性あり）\n    await waitFor(() => {\n      expect(screen.getByText('送信中...')).toBeInTheDocument();\n    });\n  });\n\n  it('戻るボタンが機能する', async () => {\n    const user = userEvent.setup();\n    \n    render(<MaterialDetailPage />);\n    \n    const backButton = screen.getByText('一覧に戻る');\n    await user.click(backButton);\n    \n    // useRouterのbackメソッドが呼ばれたことを確認\n    const { useRouter } = require('next/navigation');\n    expect(useRouter().back).toHaveBeenCalled();\n  });\n}); "],"names":["jest","mock","useParams","fn","id","useRouter","back","push","window","alert","mockMaterial","title","description","content","category","difficulty","author","name","avatar","giverScore","type","created_at","view_count","rating","is_bookmarked","is_published","tags","mockFeedbacks","user_id","user_name","user_avatar","comment","mockRelatedMaterials","author_name","describe","beforeEach","clearAllMocks","originalUseEffect","React","useEffect","spyOn","mockImplementationOnce","f","mockImplementation","initialValue","Array","isArray","length","it","render","MaterialDetailPage","expect","screen","getByText","toBeInTheDocument","document","querySelector","innerHTML","toContain","forEach","tag","user","userEvent","setup","bookmarkButton","click","completeButton","toHaveBeenCalledWith","starButtons","getAllByText","commentTextarea","getByPlaceholderText","submitButton","waitFor","backButton","require","toHaveBeenCalled"],"mappings":"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"}