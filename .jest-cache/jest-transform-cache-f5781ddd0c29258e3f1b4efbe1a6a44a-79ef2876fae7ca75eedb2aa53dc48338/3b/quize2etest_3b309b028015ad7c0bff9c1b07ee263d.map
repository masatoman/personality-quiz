{"version":3,"sources":["/Users/master/Local Sites/testcursor/src/app/__tests__/quiz.e2e.test.ts"],"sourcesContent":["import { test, expect, Page } from '@playwright/test';\n\ntest.describe('英語学習タイプ診断', () => {\n  test('診断フローを完了し、結果を表示できる', async ({ page }: { page: Page }) => {\n    // トップページにアクセス\n    await page.goto('/');\n    \n    // 診断開始ボタンをクリック\n    await page.click('button:has-text(\"診断を開始\")');\n\n    // 全ての質問に回答\n    for (let i = 0; i < 10; i++) {\n      // 選択肢をクリック（ここでは最初の選択肢を選択）\n      await page.click('.option-button >> nth=0');\n      \n      // 次へボタンをクリック\n      await page.click('button:has-text(\"次へ\")');\n    }\n\n    // 結果ページが表示されることを確認\n    await expect(page.locator('h2:has-text(\"あなたの英語学習タイプは\")')).toBeVisible();\n    \n    // 診断結果の要素が表示されることを確認\n    await expect(page.locator('.personality-type')).toBeVisible();\n    await expect(page.locator('.strengths')).toBeVisible();\n    await expect(page.locator('.weaknesses')).toBeVisible();\n    await expect(page.locator('.learning-advice')).toBeVisible();\n  });\n\n  test('前の質問に戻れる', async ({ page }: { page: Page }) => {\n    await page.goto('/');\n    await page.click('button:has-text(\"診断を開始\")');\n\n    // 最初の質問に回答\n    await page.click('.option-button >> nth=0');\n    await page.click('button:has-text(\"次へ\")');\n\n    // 2問目の質問文を保存\n    const secondQuestionText = await page.textContent('.question-text');\n\n    // 前の質問に戻る\n    await page.click('button:has-text(\"戻る\")');\n\n    // 最初の質問に戻っていることを確認\n    const currentQuestionText = await page.textContent('.question-text');\n    expect(currentQuestionText).not.toBe(secondQuestionText);\n  });\n\n  test('エラー状態からの回復', async ({ page }: { page: Page }) => {\n    await page.goto('/');\n    \n    // エラーを発生させる（例：存在しない要素をクリック）\n    await page.evaluate(() => {\n      throw new Error('テストエラー');\n    }).catch(() => {});\n\n    // エラーメッセージが表示されることを確認\n    await expect(page.locator('text=予期せぬエラーが発生しました')).toBeVisible();\n\n    // 再試行ボタンをクリック\n    await page.click('button:has-text(\"再試行する\")');\n\n    // アプリケーションが正常な状態に戻ることを確認\n    await expect(page.locator('button:has-text(\"診断を開始\")')).toBeVisible();\n  });\n}); "],"names":["test","describe","page","goto","click","i","expect","locator","toBeVisible","secondQuestionText","textContent","currentQuestionText","not","toBe","evaluate","Error","catch"],"mappings":";;;;sBAAmC;AAEnCA,UAAI,CAACC,QAAQ,CAAC,aAAa;IACzBD,IAAAA,UAAI,EAAC,sBAAsB,OAAO,EAAEE,IAAI,EAAkB;QACxD,cAAc;QACd,MAAMA,KAAKC,IAAI,CAAC;QAEhB,eAAe;QACf,MAAMD,KAAKE,KAAK,CAAC;QAEjB,WAAW;QACX,IAAK,IAAIC,IAAI,GAAGA,IAAI,IAAIA,IAAK;YAC3B,0BAA0B;YAC1B,MAAMH,KAAKE,KAAK,CAAC;YAEjB,aAAa;YACb,MAAMF,KAAKE,KAAK,CAAC;QACnB;QAEA,mBAAmB;QACnB,MAAME,IAAAA,YAAM,EAACJ,KAAKK,OAAO,CAAC,gCAAgCC,WAAW;QAErE,qBAAqB;QACrB,MAAMF,IAAAA,YAAM,EAACJ,KAAKK,OAAO,CAAC,sBAAsBC,WAAW;QAC3D,MAAMF,IAAAA,YAAM,EAACJ,KAAKK,OAAO,CAAC,eAAeC,WAAW;QACpD,MAAMF,IAAAA,YAAM,EAACJ,KAAKK,OAAO,CAAC,gBAAgBC,WAAW;QACrD,MAAMF,IAAAA,YAAM,EAACJ,KAAKK,OAAO,CAAC,qBAAqBC,WAAW;IAC5D;IAEAR,IAAAA,UAAI,EAAC,YAAY,OAAO,EAAEE,IAAI,EAAkB;QAC9C,MAAMA,KAAKC,IAAI,CAAC;QAChB,MAAMD,KAAKE,KAAK,CAAC;QAEjB,WAAW;QACX,MAAMF,KAAKE,KAAK,CAAC;QACjB,MAAMF,KAAKE,KAAK,CAAC;QAEjB,aAAa;QACb,MAAMK,qBAAqB,MAAMP,KAAKQ,WAAW,CAAC;QAElD,UAAU;QACV,MAAMR,KAAKE,KAAK,CAAC;QAEjB,mBAAmB;QACnB,MAAMO,sBAAsB,MAAMT,KAAKQ,WAAW,CAAC;QACnDJ,IAAAA,YAAM,EAACK,qBAAqBC,GAAG,CAACC,IAAI,CAACJ;IACvC;IAEAT,IAAAA,UAAI,EAAC,cAAc,OAAO,EAAEE,IAAI,EAAkB;QAChD,MAAMA,KAAKC,IAAI,CAAC;QAEhB,4BAA4B;QAC5B,MAAMD,KAAKY,QAAQ,CAAC;YAClB,MAAM,IAAIC,MAAM;QAClB,GAAGC,KAAK,CAAC,KAAO;QAEhB,sBAAsB;QACtB,MAAMV,IAAAA,YAAM,EAACJ,KAAKK,OAAO,CAAC,wBAAwBC,WAAW;QAE7D,cAAc;QACd,MAAMN,KAAKE,KAAK,CAAC;QAEjB,yBAAyB;QACzB,MAAME,IAAAA,YAAM,EAACJ,KAAKK,OAAO,CAAC,6BAA6BC,WAAW;IACpE;AACF"}