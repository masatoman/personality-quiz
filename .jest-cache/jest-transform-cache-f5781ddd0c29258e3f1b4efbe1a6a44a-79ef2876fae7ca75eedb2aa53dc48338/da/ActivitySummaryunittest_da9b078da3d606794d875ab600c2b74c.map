{"version":3,"sources":["/Users/master/Local Sites/testcursor/src/components/__tests__/ActivitySummary.unit.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, waitFor } from '@testing-library/react';\nimport '@testing-library/jest-dom';\nimport ActivitySummary from '../dashboard/ActivitySummary';\n\n// ActivitySummaryコンポーネントのAPIをモック\njest.mock('next/navigation', () => ({\n  useRouter() {\n    return {\n      push: jest.fn(),\n      prefetch: jest.fn(),\n    };\n  },\n}));\n\n// フェッチのモック化\n// @ts-ignore - fetch型の不一致を無視\nglobal.fetch = jest.fn();\n\ndescribe('ActivitySummary Component', () => {\n  const mockUserId = 'test-user-123';\n  \n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  it('ローディング状態が正しく表示されること', async () => {\n    // フェッチがすぐには解決しないようにモック\n    // @ts-ignore\n    global.fetch.mockImplementation(() => new Promise(() => {}));\n    \n    render(<ActivitySummary userId={mockUserId} />);\n    \n    // ローディングインジケータ要素（animate-pulse）が表示されることを確認\n    const loadingElements = document.querySelectorAll('.animate-pulse');\n    expect(loadingElements.length).toBeGreaterThan(0);\n  });\n\n  it('エラー状態が正しく表示されること', async () => {\n    // 失敗するフェッチをモック\n    // @ts-ignore\n    global.fetch.mockRejectedValueOnce(new Error('API error'));\n    \n    render(<ActivitySummary userId={mockUserId} />);\n    \n    // エラーメッセージが表示されるまで待機\n    await waitFor(() => {\n      expect(screen.getByText(/エラーが発生しました/i)).toBeInTheDocument();\n    });\n  });\n\n  it('データが正しく表示されること', async () => {\n    // 成功するフェッチレスポンスをモック\n    const mockData = {\n      createdMaterials: 12,\n      totalPoints: 1250,\n      viewedMaterials: 48,\n      createdMaterialsChange: 2, \n      totalPointsChange: 150,\n      viewedMaterialsChange: -3\n    };\n    \n    // @ts-ignore\n    global.fetch.mockResolvedValueOnce({\n      ok: true,\n      json: async () => mockData,\n    });\n    \n    render(<ActivitySummary userId={mockUserId} />);\n    \n    // データが表示されるまで待機\n    await waitFor(() => {\n      // 各データ項目が表示されていることを確認\n      expect(screen.getByText('12')).toBeInTheDocument();\n      expect(screen.getByText('1250')).toBeInTheDocument();\n      expect(screen.getByText('48')).toBeInTheDocument();\n    });\n    \n    // タイトルが正しく表示されていることを確認\n    expect(screen.getByText('作成した教材')).toBeInTheDocument();\n    expect(screen.getByText('獲得ポイント')).toBeInTheDocument();\n    expect(screen.getByText('閲覧した教材')).toBeInTheDocument();\n    \n    // 前週比の変化が表示されていることを確認\n    await waitFor(() => {\n      // 正の変化\n      const positiveChanges = screen.getAllByText(/2/);\n      expect(positiveChanges.length).toBeGreaterThan(0);\n      \n      // 正の変化\n      const positivePointChanges = screen.getAllByText(/150/);\n      expect(positivePointChanges.length).toBeGreaterThan(0);\n      \n      // 負の変化\n      const negativeChanges = screen.getAllByText(/3/);\n      expect(negativeChanges.length).toBeGreaterThan(0);\n    });\n  });\n\n  it('APIが正しいURLで呼び出されること', async () => {\n    // 成功するフェッチレスポンスをモック\n    // @ts-ignore\n    global.fetch.mockResolvedValueOnce({\n      ok: true,\n      json: async () => ({}),\n    });\n    \n    render(<ActivitySummary userId={mockUserId} />);\n    \n    // APIが正しいURLとパラメータで呼び出されたか確認\n    expect(global.fetch).toHaveBeenCalledWith(`/api/user/activity-summary?userId=${mockUserId}`);\n  });\n  \n  it('データが存在しない場合は代替コンテンツが表示されること', async () => {\n    // 空のレスポンスをモック\n    // @ts-ignore\n    global.fetch.mockResolvedValueOnce({\n      ok: true,\n      json: async () => null,\n    });\n    \n    render(<ActivitySummary userId={mockUserId} />);\n    \n    // ローディングが終了するまで待機\n    await waitFor(() => {\n      // ローディング要素が消えることを確認\n      const loadingElements = document.querySelectorAll('.animate-pulse');\n      expect(loadingElements.length).toBe(0);\n    });\n    \n    // 実際のコンポーネントの実装に合わせてテストを修正\n    // ActivitySummaryがnullを返す代わりに何も表示しない場合\n    // もしくはスケルトンローダーを表示し続ける場合は、\n    // その実装に合わせたアサーションに変更する\n    expect(document.body.textContent).not.toContain('作成した教材');\n    expect(document.body.textContent).not.toContain('獲得ポイント');\n    expect(document.body.textContent).not.toContain('閲覧した教材');\n  });\n}); "],"names":["jest","mock","useRouter","push","fn","prefetch","global","fetch","describe","mockUserId","beforeEach","clearAllMocks","it","mockImplementation","Promise","render","ActivitySummary","userId","loadingElements","document","querySelectorAll","expect","length","toBeGreaterThan","mockRejectedValueOnce","Error","waitFor","screen","getByText","toBeInTheDocument","mockData","createdMaterials","totalPoints","viewedMaterials","createdMaterialsChange","totalPointsChange","viewedMaterialsChange","mockResolvedValueOnce","ok","json","positiveChanges","getAllByText","positivePointChanges","negativeChanges","toHaveBeenCalledWith","toBe","body","textContent","not","toContain"],"mappings":";AAKA,iCAAiC;AACjCA,KAAKC,IAAI,CAAC,mBAAmB,IAAO,CAAA;QAClCC;YACE,OAAO;gBACLC,MAAMH,KAAKI,EAAE;gBACbC,UAAUL,KAAKI,EAAE;YACnB;QACF;IACF,CAAA;;;;;8DAbkB;wBACsB;QACjC;wEACqB;;;;;;AAY5B,YAAY;AACZ,6BAA6B;AAC7BE,OAAOC,KAAK,GAAGP,KAAKI,EAAE;AAEtBI,SAAS,6BAA6B;IACpC,MAAMC,aAAa;IAEnBC,WAAW;QACTV,KAAKW,aAAa;IACpB;IAEAC,GAAG,uBAAuB;QACxB,uBAAuB;QACvB,aAAa;QACbN,OAAOC,KAAK,CAACM,kBAAkB,CAAC,IAAM,IAAIC,QAAQ,KAAO;QAEzDC,IAAAA,cAAM,gBAAC,qBAACC,wBAAe;YAACC,QAAQR;;QAEhC,2CAA2C;QAC3C,MAAMS,kBAAkBC,SAASC,gBAAgB,CAAC;QAClDC,OAAOH,gBAAgBI,MAAM,EAAEC,eAAe,CAAC;IACjD;IAEAX,GAAG,oBAAoB;QACrB,eAAe;QACf,aAAa;QACbN,OAAOC,KAAK,CAACiB,qBAAqB,CAAC,IAAIC,MAAM;QAE7CV,IAAAA,cAAM,gBAAC,qBAACC,wBAAe;YAACC,QAAQR;;QAEhC,qBAAqB;QACrB,MAAMiB,IAAAA,eAAO,EAAC;YACZL,OAAOM,cAAM,CAACC,SAAS,CAAC,gBAAgBC,iBAAiB;QAC3D;IACF;IAEAjB,GAAG,kBAAkB;QACnB,oBAAoB;QACpB,MAAMkB,WAAW;YACfC,kBAAkB;YAClBC,aAAa;YACbC,iBAAiB;YACjBC,wBAAwB;YACxBC,mBAAmB;YACnBC,uBAAuB,CAAC;QAC1B;QAEA,aAAa;QACb9B,OAAOC,KAAK,CAAC8B,qBAAqB,CAAC;YACjCC,IAAI;YACJC,MAAM,UAAYT;QACpB;QAEAf,IAAAA,cAAM,gBAAC,qBAACC,wBAAe;YAACC,QAAQR;;QAEhC,gBAAgB;QAChB,MAAMiB,IAAAA,eAAO,EAAC;YACZ,sBAAsB;YACtBL,OAAOM,cAAM,CAACC,SAAS,CAAC,OAAOC,iBAAiB;YAChDR,OAAOM,cAAM,CAACC,SAAS,CAAC,SAASC,iBAAiB;YAClDR,OAAOM,cAAM,CAACC,SAAS,CAAC,OAAOC,iBAAiB;QAClD;QAEA,uBAAuB;QACvBR,OAAOM,cAAM,CAACC,SAAS,CAAC,WAAWC,iBAAiB;QACpDR,OAAOM,cAAM,CAACC,SAAS,CAAC,WAAWC,iBAAiB;QACpDR,OAAOM,cAAM,CAACC,SAAS,CAAC,WAAWC,iBAAiB;QAEpD,sBAAsB;QACtB,MAAMH,IAAAA,eAAO,EAAC;YACZ,OAAO;YACP,MAAMc,kBAAkBb,cAAM,CAACc,YAAY,CAAC;YAC5CpB,OAAOmB,gBAAgBlB,MAAM,EAAEC,eAAe,CAAC;YAE/C,OAAO;YACP,MAAMmB,uBAAuBf,cAAM,CAACc,YAAY,CAAC;YACjDpB,OAAOqB,qBAAqBpB,MAAM,EAAEC,eAAe,CAAC;YAEpD,OAAO;YACP,MAAMoB,kBAAkBhB,cAAM,CAACc,YAAY,CAAC;YAC5CpB,OAAOsB,gBAAgBrB,MAAM,EAAEC,eAAe,CAAC;QACjD;IACF;IAEAX,GAAG,uBAAuB;QACxB,oBAAoB;QACpB,aAAa;QACbN,OAAOC,KAAK,CAAC8B,qBAAqB,CAAC;YACjCC,IAAI;YACJC,MAAM,UAAa,CAAA,CAAC,CAAA;QACtB;QAEAxB,IAAAA,cAAM,gBAAC,qBAACC,wBAAe;YAACC,QAAQR;;QAEhC,6BAA6B;QAC7BY,OAAOf,OAAOC,KAAK,EAAEqC,oBAAoB,CAAC,CAAC,kCAAkC,EAAEnC,WAAW,CAAC;IAC7F;IAEAG,GAAG,+BAA+B;QAChC,cAAc;QACd,aAAa;QACbN,OAAOC,KAAK,CAAC8B,qBAAqB,CAAC;YACjCC,IAAI;YACJC,MAAM,UAAY;QACpB;QAEAxB,IAAAA,cAAM,gBAAC,qBAACC,wBAAe;YAACC,QAAQR;;QAEhC,kBAAkB;QAClB,MAAMiB,IAAAA,eAAO,EAAC;YACZ,oBAAoB;YACpB,MAAMR,kBAAkBC,SAASC,gBAAgB,CAAC;YAClDC,OAAOH,gBAAgBI,MAAM,EAAEuB,IAAI,CAAC;QACtC;QAEA,2BAA2B;QAC3B,uCAAuC;QACvC,2BAA2B;QAC3B,uBAAuB;QACvBxB,OAAOF,SAAS2B,IAAI,CAACC,WAAW,EAAEC,GAAG,CAACC,SAAS,CAAC;QAChD5B,OAAOF,SAAS2B,IAAI,CAACC,WAAW,EAAEC,GAAG,CAACC,SAAS,CAAC;QAChD5B,OAAOF,SAAS2B,IAAI,CAACC,WAAW,EAAEC,GAAG,CAACC,SAAS,CAAC;IAClD;AACF"}