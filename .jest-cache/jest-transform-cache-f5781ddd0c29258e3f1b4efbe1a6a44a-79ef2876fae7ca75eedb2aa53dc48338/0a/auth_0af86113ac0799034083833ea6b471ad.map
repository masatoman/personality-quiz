{"version":3,"sources":["/Users/master/Local Sites/testcursor/src/lib/auth.ts"],"sourcesContent":["import { createClient } from '@/utils/supabase/server';\nimport { cookies } from 'next/headers';\n\n/**\n * セッション情報を取得する\n * \n * @returns セッション情報、またはnull（未認証の場合）\n */\nexport async function auth() {\n  const cookieStore = cookies();\n  const supabase = createClient();\n  \n  const { data: { session }, error } = await supabase.auth.getSession();\n  \n  if (error || !session) {\n    return null;\n  }\n  \n  // ユーザーの詳細情報を取得（ロール情報など）\n  const { data: userData, error: userError } = await supabase\n    .from('users')\n    .select('role')\n    .eq('id', session.user.id)\n    .single();\n    \n  if (userError) {\n    console.error('ユーザー情報取得エラー:', userError);\n    return session;\n  }\n  \n  // セッション情報にロール情報を追加\n  return {\n    ...session,\n    user: {\n      ...session.user,\n      role: userData?.role || 'user'\n    }\n  };\n}\n\n/**\n * 現在のユーザーが管理者かどうかを確認する\n * \n * @returns 管理者の場合はtrue、それ以外はfalse\n */\nexport async function isAdmin() {\n  const session = await auth();\n  return session?.user?.role === 'admin';\n}\n\n/**\n * ユーザーIDが現在のユーザーと一致するか、または管理者かどうかを確認する\n * \n * @param userId 確認対象のユーザーID\n * @returns 一致または管理者の場合はtrue、それ以外はfalse\n */\nexport async function canAccessUserData(userId: string) {\n  const session = await auth();\n  if (!session) return false;\n  \n  return session.user.id === userId || session.user.role === 'admin';\n}\n\n/**\n * 現在のユーザーの認証情報を取得する\n * \n * @returns 認証されたユーザー情報、または未認証の場合はnull\n */\nexport async function getUserAuth() {\n  const session = await auth();\n  return session ? session.user : null;\n} "],"names":["auth","canAccessUserData","getUserAuth","isAdmin","cookieStore","cookies","supabase","createClient","data","session","error","getSession","userData","userError","from","select","eq","user","id","single","console","role","userId"],"mappings":";;;;;;;;;;;IAQsBA,IAAI;eAAJA;;IAgDAC,iBAAiB;eAAjBA;;IAYAC,WAAW;eAAXA;;IAvBAC,OAAO;eAAPA;;;wBA7CO;yBACL;AAOjB,eAAeH;IACpB,MAAMI,cAAcC,IAAAA,gBAAO;IAC3B,MAAMC,WAAWC,IAAAA,oBAAY;IAE7B,MAAM,EAAEC,MAAM,EAAEC,OAAO,EAAE,EAAEC,KAAK,EAAE,GAAG,MAAMJ,SAASN,IAAI,CAACW,UAAU;IAEnE,IAAID,SAAS,CAACD,SAAS;QACrB,OAAO;IACT;IAEA,wBAAwB;IACxB,MAAM,EAAED,MAAMI,QAAQ,EAAEF,OAAOG,SAAS,EAAE,GAAG,MAAMP,SAChDQ,IAAI,CAAC,SACLC,MAAM,CAAC,QACPC,EAAE,CAAC,MAAMP,QAAQQ,IAAI,CAACC,EAAE,EACxBC,MAAM;IAET,IAAIN,WAAW;QACbO,QAAQV,KAAK,CAAC,gBAAgBG;QAC9B,OAAOJ;IACT;IAEA,mBAAmB;IACnB,OAAO;QACL,GAAGA,OAAO;QACVQ,MAAM;YACJ,GAAGR,QAAQQ,IAAI;YACfI,MAAMT,UAAUS,QAAQ;QAC1B;IACF;AACF;AAOO,eAAelB;IACpB,MAAMM,UAAU,MAAMT;IACtB,OAAOS,SAASQ,MAAMI,SAAS;AACjC;AAQO,eAAepB,kBAAkBqB,MAAc;IACpD,MAAMb,UAAU,MAAMT;IACtB,IAAI,CAACS,SAAS,OAAO;IAErB,OAAOA,QAAQQ,IAAI,CAACC,EAAE,KAAKI,UAAUb,QAAQQ,IAAI,CAACI,IAAI,KAAK;AAC7D;AAOO,eAAenB;IACpB,MAAMO,UAAU,MAAMT;IACtB,OAAOS,UAAUA,QAAQQ,IAAI,GAAG;AAClC"}