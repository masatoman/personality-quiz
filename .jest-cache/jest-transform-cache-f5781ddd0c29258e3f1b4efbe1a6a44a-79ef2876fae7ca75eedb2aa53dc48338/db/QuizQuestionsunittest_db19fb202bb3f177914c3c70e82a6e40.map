{"version":3,"sources":["/Users/master/Local Sites/testcursor/src/components/features/quiz/test/QuizQuestions.unit.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport '@testing-library/jest-dom';\nimport QuizQuestions from '../QuizQuestions';\nimport { QuizQuestion, QuizOption } from '@/types/quiz';\n\n// モックデータ\nconst mockQuestions: QuizQuestion[] = [\n  {\n    id: 1,\n    text: '学習スタイルに関する質問1',\n    description: '以下の選択肢から最も当てはまるものを選んでください',\n    options: [\n      { \n        text: '選択肢1', \n        score: { giver: 2, taker: 0, matcher: 1 }, \n        description: '説明1' \n      },\n      { \n        text: '選択肢2', \n        score: { giver: 0, taker: 2, matcher: 1 }, \n        description: '説明2' \n      },\n    ],\n    category: 'visual'\n  },\n  {\n    id: 2,\n    text: '学習スタイルに関する質問2',\n    options: [\n      { \n        text: '選択肢3', \n        score: { giver: 1, taker: 1, matcher: 2 } \n      },\n      { \n        text: '選択肢4', \n        score: { giver: 2, taker: 2, matcher: 0 } \n      },\n    ],\n    category: 'auditory'\n  }\n];\n\ndescribe('QuizQuestions', () => {\n  // 基本的なレンダリングのテスト\n  test('コンポーネントが正しくレンダリングされる', () => {\n    const mockHandlers = {\n      onOptionSelect: jest.fn() as any,\n      onPrevious: jest.fn() as any,\n      onNext: jest.fn() as any\n    };\n\n    render(\n      <QuizQuestions\n        questions={mockQuestions}\n        currentQuestionIndex={0}\n        selectedOption={null}\n        direction={1}\n        progress={50}\n        onOptionSelect={mockHandlers.onOptionSelect}\n        onPrevious={mockHandlers.onPrevious}\n        onNext={mockHandlers.onNext}\n      />\n    );\n    \n    // 質問テキストが表示されていることを確認\n    expect(screen.getByText(/学習スタイルに関する質問1/)).toBeInTheDocument();\n    expect(screen.getByText(/以下の選択肢から最も当てはまるものを選んでください/)).toBeInTheDocument();\n    \n    // 選択肢が表示されていることを確認\n    expect(screen.getByText('選択肢1')).toBeInTheDocument();\n    expect(screen.getByText('選択肢2')).toBeInTheDocument();\n    \n    // ナビゲーションボタンが表示されていることを確認\n    expect(screen.getByText('前の質問')).toBeInTheDocument();\n    expect(screen.getByText('次の質問')).toBeInTheDocument();\n  });\n\n  // ナビゲーションボタンのテスト\n  test('前の質問ボタンは最初の質問で無効になる', () => {\n    const mockHandlers = {\n      onOptionSelect: jest.fn() as any,\n      onPrevious: jest.fn() as any,\n      onNext: jest.fn() as any\n    };\n\n    render(\n      <QuizQuestions\n        questions={mockQuestions}\n        currentQuestionIndex={0}\n        selectedOption={null}\n        direction={1}\n        progress={50}\n        onOptionSelect={mockHandlers.onOptionSelect}\n        onPrevious={mockHandlers.onPrevious}\n        onNext={mockHandlers.onNext}\n      />\n    );\n    \n    // 前の質問ボタンが無効になっていることを確認\n    const prevButton = screen.getByText('前の質問').closest('button');\n    expect(prevButton).toBeDisabled();\n  });\n\n  // オプション選択のテスト\n  test('オプションをクリックすると選択イベントが発火する', () => {\n    const mockHandlers = {\n      onOptionSelect: jest.fn() as any,\n      onPrevious: jest.fn() as any,\n      onNext: jest.fn() as any\n    };\n\n    render(\n      <QuizQuestions\n        questions={mockQuestions}\n        currentQuestionIndex={0}\n        selectedOption={null}\n        direction={1}\n        progress={50}\n        onOptionSelect={mockHandlers.onOptionSelect}\n        onPrevious={mockHandlers.onPrevious}\n        onNext={mockHandlers.onNext}\n      />\n    );\n    \n    // 選択肢をクリック\n    fireEvent.click(screen.getByText('選択肢1'));\n    \n    // onOptionSelectが呼ばれたことを確認\n    expect(mockHandlers.onOptionSelect).toHaveBeenCalledWith(0);\n  });\n\n  // 最後の質問での次へボタンテスト\n  test('最後の質問では「結果を見る」と表示される', () => {\n    const mockHandlers = {\n      onOptionSelect: jest.fn() as any,\n      onPrevious: jest.fn() as any,\n      onNext: jest.fn() as any\n    };\n\n    render(\n      <QuizQuestions\n        questions={mockQuestions}\n        currentQuestionIndex={1} // 最後の質問\n        selectedOption={0} // オプションが選択されている\n        direction={1}\n        progress={100}\n        onOptionSelect={mockHandlers.onOptionSelect}\n        onPrevious={mockHandlers.onPrevious}\n        onNext={mockHandlers.onNext}\n      />\n    );\n    \n    // 結果を見るボタンが表示されていることを確認\n    expect(screen.getByText('結果を見る')).toBeInTheDocument();\n    expect(screen.queryByText('次の質問')).not.toBeInTheDocument();\n  });\n\n  // 選択肢がない場合のテスト\n  test('選択肢がない場合、次へボタンは無効になる', () => {\n    const mockHandlers = {\n      onOptionSelect: jest.fn() as any,\n      onPrevious: jest.fn() as any,\n      onNext: jest.fn() as any\n    };\n\n    render(\n      <QuizQuestions\n        questions={mockQuestions}\n        currentQuestionIndex={0}\n        selectedOption={null} // 何も選択されていない\n        direction={1}\n        progress={50}\n        onOptionSelect={mockHandlers.onOptionSelect}\n        onPrevious={mockHandlers.onPrevious}\n        onNext={mockHandlers.onNext}\n      />\n    );\n    \n    // 次の質問ボタンが無効になっていることを確認\n    const nextButton = screen.getByText('次の質問').closest('button');\n    expect(nextButton).toBeDisabled();\n  });\n}); "],"names":["mockQuestions","id","text","description","options","score","giver","taker","matcher","category","describe","test","mockHandlers","onOptionSelect","jest","fn","onPrevious","onNext","render","QuizQuestions","questions","currentQuestionIndex","selectedOption","direction","progress","expect","screen","getByText","toBeInTheDocument","prevButton","closest","toBeDisabled","fireEvent","click","toHaveBeenCalledWith","queryByText","not","nextButton"],"mappings":"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"}