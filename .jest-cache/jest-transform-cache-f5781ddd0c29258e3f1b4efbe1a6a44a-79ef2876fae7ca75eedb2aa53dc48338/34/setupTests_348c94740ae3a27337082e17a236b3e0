e78e51972dcb6428eb76183c2d64fcc4
// テスト環境のセットアップ
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
require("@testing-library/jest-dom");
// グローバルなモックの設定
global.fetch = jest.fn();
// 環境変数設定
process.env.NEXT_PUBLIC_SUPABASE_URL = "https://example.supabase.co";
process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY = "test-anon-key";
// process.env.NODE_ENV = 'test'; // 読み取り専用プロパティのため設定不可
// コンソールエラーをモックに置き換え（テスト中のエラー表示を抑制）
jest.spyOn(console, "error").mockImplementation(()=>{});
// 現在時刻をモック（テスト中の日時依存を排除）
jest.useFakeTimers().setSystemTime(new Date("2023-01-01"));
// MutationObserverのモック
class MockMutationObserver {
    constructor(){
        this.observe = jest.fn();
        this.disconnect = jest.fn();
        this.takeRecords = jest.fn();
    }
}
global.MutationObserver = MockMutationObserver;
// IntersectionObserverのモック
class MockIntersectionObserver {
    constructor(callback){
        this.observe = jest.fn();
        this.unobserve = jest.fn();
        this.disconnect = jest.fn();
        this.callback = callback;
    }
}
global.IntersectionObserver = MockIntersectionObserver;
// ResizeObserverのモック
class MockResizeObserver {
    constructor(callback){
        this.observe = jest.fn();
        this.unobserve = jest.fn();
        this.disconnect = jest.fn();
        this.callback = callback;
    }
}
global.ResizeObserver = MockResizeObserver;
// matchMediaのモック
Object.defineProperty(window, "matchMedia", {
    writable: true,
    value: jest.fn().mockImplementation((query)=>({
            matches: false,
            media: query,
            onchange: null,
            addListener: jest.fn(),
            removeListener: jest.fn(),
            addEventListener: jest.fn(),
            removeEventListener: jest.fn(),
            dispatchEvent: jest.fn()
        }))
});
// Jestのタイムアウト設定
jest.setTimeout(30000);
// TextEncoder/TextDecoderのモック
if (typeof global.TextEncoder === "undefined") {
    global.TextEncoder = require("util").TextEncoder;
}
if (typeof global.TextDecoder === "undefined") {
    global.TextDecoder = require("util").TextDecoder;
}
// エラースタックトレースをより読みやすくするための設定
Error.stackTraceLimit = 100;
// テスト後のクリーンアップ
afterEach(()=>{
    jest.clearAllMocks();
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXN0ZXIvTG9jYWwgU2l0ZXMvdGVzdGN1cnNvci9zcmMvc2V0dXBUZXN0cy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyDjg4bjgrnjg4jnkrDlooPjga7jgrvjg4Pjg4jjgqLjg4Pjg5dcbmltcG9ydCAnQHRlc3RpbmctbGlicmFyeS9qZXN0LWRvbSc7XG5cbi8vIOOCsOODreODvOODkOODq+OBquODouODg+OCr+OBruioreWumlxuZ2xvYmFsLmZldGNoID0gamVzdC5mbigpIGFzIGplc3QuTW9ja2VkRnVuY3Rpb248dHlwZW9mIGZldGNoPjtcblxuLy8g55Kw5aKD5aSJ5pWw6Kit5a6aXG5wcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwgPSAnaHR0cHM6Ly9leGFtcGxlLnN1cGFiYXNlLmNvJztcbnByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZID0gJ3Rlc3QtYW5vbi1rZXknO1xuLy8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPSAndGVzdCc7IC8vIOiqreOBv+WPluOCiuWwgueUqOODl+ODreODkeODhuOCo+OBruOBn+OCgeioreWumuS4jeWPr1xuXG4vLyDjgrPjg7Pjgr3jg7zjg6vjgqjjg6njg7zjgpLjg6Ljg4Pjgq/jgavnva7jgY3mj5vjgYjvvIjjg4bjgrnjg4jkuK3jga7jgqjjg6njg7zooajnpLrjgpLmipHliLbvvIlcbmplc3Quc3B5T24oY29uc29sZSwgJ2Vycm9yJykubW9ja0ltcGxlbWVudGF0aW9uKCgpID0+IHt9KTtcblxuLy8g54++5Zyo5pmC5Yi744KS44Oi44OD44Kv77yI44OG44K544OI5Lit44Gu5pel5pmC5L6d5a2Y44KS5o6S6Zmk77yJXG5qZXN0LnVzZUZha2VUaW1lcnMoKS5zZXRTeXN0ZW1UaW1lKG5ldyBEYXRlKCcyMDIzLTAxLTAxJykpO1xuXG4vLyBNdXRhdGlvbk9ic2VydmVy44Gu44Oi44OD44KvXG5jbGFzcyBNb2NrTXV0YXRpb25PYnNlcnZlciB7XG4gIG9ic2VydmUgPSBqZXN0LmZuKCk7XG4gIGRpc2Nvbm5lY3QgPSBqZXN0LmZuKCk7XG4gIHRha2VSZWNvcmRzID0gamVzdC5mbigpO1xufVxuXG5nbG9iYWwuTXV0YXRpb25PYnNlcnZlciA9IE1vY2tNdXRhdGlvbk9ic2VydmVyIGFzIHVua25vd24gYXMgdHlwZW9mIE11dGF0aW9uT2JzZXJ2ZXI7XG5cbi8vIEludGVyc2VjdGlvbk9ic2VydmVy44Gu44Oi44OD44KvXG5jbGFzcyBNb2NrSW50ZXJzZWN0aW9uT2JzZXJ2ZXIge1xuICBjb25zdHJ1Y3RvcihjYWxsYmFjazogSW50ZXJzZWN0aW9uT2JzZXJ2ZXJDYWxsYmFjaykge1xuICAgIHRoaXMuY2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgfVxuICBjYWxsYmFjazogSW50ZXJzZWN0aW9uT2JzZXJ2ZXJDYWxsYmFjaztcbiAgb2JzZXJ2ZSA9IGplc3QuZm4oKTtcbiAgdW5vYnNlcnZlID0gamVzdC5mbigpO1xuICBkaXNjb25uZWN0ID0gamVzdC5mbigpO1xufVxuXG5nbG9iYWwuSW50ZXJzZWN0aW9uT2JzZXJ2ZXIgPSBNb2NrSW50ZXJzZWN0aW9uT2JzZXJ2ZXIgYXMgdW5rbm93biBhcyB0eXBlb2YgSW50ZXJzZWN0aW9uT2JzZXJ2ZXI7XG5cbi8vIFJlc2l6ZU9ic2VydmVy44Gu44Oi44OD44KvXG5jbGFzcyBNb2NrUmVzaXplT2JzZXJ2ZXIge1xuICBjb25zdHJ1Y3RvcihjYWxsYmFjazogUmVzaXplT2JzZXJ2ZXJDYWxsYmFjaykge1xuICAgIHRoaXMuY2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgfVxuICBjYWxsYmFjazogUmVzaXplT2JzZXJ2ZXJDYWxsYmFjaztcbiAgb2JzZXJ2ZSA9IGplc3QuZm4oKTtcbiAgdW5vYnNlcnZlID0gamVzdC5mbigpO1xuICBkaXNjb25uZWN0ID0gamVzdC5mbigpO1xufVxuXG5nbG9iYWwuUmVzaXplT2JzZXJ2ZXIgPSBNb2NrUmVzaXplT2JzZXJ2ZXIgYXMgdW5rbm93biBhcyB0eXBlb2YgUmVzaXplT2JzZXJ2ZXI7XG5cbi8vIG1hdGNoTWVkaWHjga7jg6Ljg4Pjgq9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eSh3aW5kb3csICdtYXRjaE1lZGlhJywge1xuICB3cml0YWJsZTogdHJ1ZSxcbiAgdmFsdWU6IGplc3QuZm4oKS5tb2NrSW1wbGVtZW50YXRpb24ocXVlcnkgPT4gKHtcbiAgICBtYXRjaGVzOiBmYWxzZSxcbiAgICBtZWRpYTogcXVlcnksXG4gICAgb25jaGFuZ2U6IG51bGwsXG4gICAgYWRkTGlzdGVuZXI6IGplc3QuZm4oKSxcbiAgICByZW1vdmVMaXN0ZW5lcjogamVzdC5mbigpLFxuICAgIGFkZEV2ZW50TGlzdGVuZXI6IGplc3QuZm4oKSxcbiAgICByZW1vdmVFdmVudExpc3RlbmVyOiBqZXN0LmZuKCksXG4gICAgZGlzcGF0Y2hFdmVudDogamVzdC5mbigpLFxuICB9KSksXG59KTtcblxuLy8gSmVzdOOBruOCv+OCpOODoOOCouOCpuODiOioreWumlxuamVzdC5zZXRUaW1lb3V0KDMwMDAwKTtcblxuLy8gVGV4dEVuY29kZXIvVGV4dERlY29kZXLjga7jg6Ljg4Pjgq9cbmlmICh0eXBlb2YgZ2xvYmFsLlRleHRFbmNvZGVyID09PSAndW5kZWZpbmVkJykge1xuICBnbG9iYWwuVGV4dEVuY29kZXIgPSByZXF1aXJlKCd1dGlsJykuVGV4dEVuY29kZXI7XG59XG5cbmlmICh0eXBlb2YgZ2xvYmFsLlRleHREZWNvZGVyID09PSAndW5kZWZpbmVkJykge1xuICBnbG9iYWwuVGV4dERlY29kZXIgPSByZXF1aXJlKCd1dGlsJykuVGV4dERlY29kZXI7XG59XG5cbi8vIOOCqOODqeODvOOCueOCv+ODg+OCr+ODiOODrOODvOOCueOCkuOCiOOCiuiqreOBv+OChOOBmeOBj+OBmeOCi+OBn+OCgeOBruioreWumlxuRXJyb3Iuc3RhY2tUcmFjZUxpbWl0ID0gMTAwO1xuXG4vLyDjg4bjgrnjg4jlvozjga7jgq/jg6rjg7zjg7PjgqLjg4Pjg5dcbmFmdGVyRWFjaCgoKSA9PiB7XG4gIGplc3QuY2xlYXJBbGxNb2NrcygpO1xufSk7ICJdLCJuYW1lcyI6WyJnbG9iYWwiLCJmZXRjaCIsImplc3QiLCJmbiIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSIsInNweU9uIiwiY29uc29sZSIsIm1vY2tJbXBsZW1lbnRhdGlvbiIsInVzZUZha2VUaW1lcnMiLCJzZXRTeXN0ZW1UaW1lIiwiRGF0ZSIsIk1vY2tNdXRhdGlvbk9ic2VydmVyIiwib2JzZXJ2ZSIsImRpc2Nvbm5lY3QiLCJ0YWtlUmVjb3JkcyIsIk11dGF0aW9uT2JzZXJ2ZXIiLCJNb2NrSW50ZXJzZWN0aW9uT2JzZXJ2ZXIiLCJjb25zdHJ1Y3RvciIsImNhbGxiYWNrIiwidW5vYnNlcnZlIiwiSW50ZXJzZWN0aW9uT2JzZXJ2ZXIiLCJNb2NrUmVzaXplT2JzZXJ2ZXIiLCJSZXNpemVPYnNlcnZlciIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5Iiwid2luZG93Iiwid3JpdGFibGUiLCJ2YWx1ZSIsInF1ZXJ5IiwibWF0Y2hlcyIsIm1lZGlhIiwib25jaGFuZ2UiLCJhZGRMaXN0ZW5lciIsInJlbW92ZUxpc3RlbmVyIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJkaXNwYXRjaEV2ZW50Iiwic2V0VGltZW91dCIsIlRleHRFbmNvZGVyIiwicmVxdWlyZSIsIlRleHREZWNvZGVyIiwiRXJyb3IiLCJzdGFja1RyYWNlTGltaXQiLCJhZnRlckVhY2giLCJjbGVhckFsbE1vY2tzIl0sIm1hcHBpbmdzIjoiQUFBQSxlQUFlOzs7OztRQUNSO0FBRVAsZUFBZTtBQUNmQSxPQUFPQyxLQUFLLEdBQUdDLEtBQUtDLEVBQUU7QUFFdEIsU0FBUztBQUNUQyxRQUFRQyxHQUFHLENBQUNDLHdCQUF3QixHQUFHO0FBQ3ZDRixRQUFRQyxHQUFHLENBQUNFLDZCQUE2QixHQUFHO0FBQzVDLHVEQUF1RDtBQUV2RCxtQ0FBbUM7QUFDbkNMLEtBQUtNLEtBQUssQ0FBQ0MsU0FBUyxTQUFTQyxrQkFBa0IsQ0FBQyxLQUFPO0FBRXZELHlCQUF5QjtBQUN6QlIsS0FBS1MsYUFBYSxHQUFHQyxhQUFhLENBQUMsSUFBSUMsS0FBSztBQUU1Qyx1QkFBdUI7QUFDdkIsTUFBTUM7O2FBQ0pDLFVBQVViLEtBQUtDLEVBQUU7YUFDakJhLGFBQWFkLEtBQUtDLEVBQUU7YUFDcEJjLGNBQWNmLEtBQUtDLEVBQUU7O0FBQ3ZCO0FBRUFILE9BQU9rQixnQkFBZ0IsR0FBR0o7QUFFMUIsMkJBQTJCO0FBQzNCLE1BQU1LO0lBQ0pDLFlBQVlDLFFBQXNDLENBQUU7YUFJcEROLFVBQVViLEtBQUtDLEVBQUU7YUFDakJtQixZQUFZcEIsS0FBS0MsRUFBRTthQUNuQmEsYUFBYWQsS0FBS0MsRUFBRTtRQUxsQixJQUFJLENBQUNrQixRQUFRLEdBQUdBO0lBQ2xCO0FBS0Y7QUFFQXJCLE9BQU91QixvQkFBb0IsR0FBR0o7QUFFOUIscUJBQXFCO0FBQ3JCLE1BQU1LO0lBQ0pKLFlBQVlDLFFBQWdDLENBQUU7YUFJOUNOLFVBQVViLEtBQUtDLEVBQUU7YUFDakJtQixZQUFZcEIsS0FBS0MsRUFBRTthQUNuQmEsYUFBYWQsS0FBS0MsRUFBRTtRQUxsQixJQUFJLENBQUNrQixRQUFRLEdBQUdBO0lBQ2xCO0FBS0Y7QUFFQXJCLE9BQU95QixjQUFjLEdBQUdEO0FBRXhCLGlCQUFpQjtBQUNqQkUsT0FBT0MsY0FBYyxDQUFDQyxRQUFRLGNBQWM7SUFDMUNDLFVBQVU7SUFDVkMsT0FBTzVCLEtBQUtDLEVBQUUsR0FBR08sa0JBQWtCLENBQUNxQixDQUFBQSxRQUFVLENBQUE7WUFDNUNDLFNBQVM7WUFDVEMsT0FBT0Y7WUFDUEcsVUFBVTtZQUNWQyxhQUFhakMsS0FBS0MsRUFBRTtZQUNwQmlDLGdCQUFnQmxDLEtBQUtDLEVBQUU7WUFDdkJrQyxrQkFBa0JuQyxLQUFLQyxFQUFFO1lBQ3pCbUMscUJBQXFCcEMsS0FBS0MsRUFBRTtZQUM1Qm9DLGVBQWVyQyxLQUFLQyxFQUFFO1FBQ3hCLENBQUE7QUFDRjtBQUVBLGdCQUFnQjtBQUNoQkQsS0FBS3NDLFVBQVUsQ0FBQztBQUVoQiw4QkFBOEI7QUFDOUIsSUFBSSxPQUFPeEMsT0FBT3lDLFdBQVcsS0FBSyxhQUFhO0lBQzdDekMsT0FBT3lDLFdBQVcsR0FBR0MsUUFBUSxRQUFRRCxXQUFXO0FBQ2xEO0FBRUEsSUFBSSxPQUFPekMsT0FBTzJDLFdBQVcsS0FBSyxhQUFhO0lBQzdDM0MsT0FBTzJDLFdBQVcsR0FBR0QsUUFBUSxRQUFRQyxXQUFXO0FBQ2xEO0FBRUEsNkJBQTZCO0FBQzdCQyxNQUFNQyxlQUFlLEdBQUc7QUFFeEIsZUFBZTtBQUNmQyxVQUFVO0lBQ1I1QyxLQUFLNkMsYUFBYTtBQUNwQiJ9