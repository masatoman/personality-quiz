{"version":3,"sources":["/Users/master/Local Sites/testcursor/src/utils/__tests__/quiz.test.ts"],"sourcesContent":["import { QuizQuestion, QuizOption, QuizResults } from '@/types/quiz';\nimport { \n  calculatePersonalityType, \n  getPersonalityTypeDescription,\n  getPersonalityDescription \n} from '../quiz';\nimport { PersonalityType } from '@/types/quiz';\n\n// モック関数\nfunction calculateQuizResults(questions: QuizQuestion[], answers: {questionId: string, optionId: string}[]): QuizResults {\n  // スコア初期化\n  let giverScore = 0;\n  let takerScore = 0;\n  let matcherScore = 0;\n  \n  // 回答ごとにスコアを計算\n  answers.forEach(answer => {\n    const question = questions.find(q => q.id === answer.questionId);\n    if (!question) return;\n    \n    const option = question.options.find(o => o.id === answer.optionId);\n    if (!option) return;\n    \n    giverScore += option.scores.giver;\n    takerScore += option.scores.taker;\n    matcherScore += option.scores.matcher;\n  });\n  \n  // 最大スコアからタイプを決定\n  let dominantType = 'matcher';\n  if (giverScore > takerScore && giverScore > matcherScore) {\n    dominantType = 'giver';\n  } else if (takerScore > giverScore && takerScore > matcherScore) {\n    dominantType = 'taker';\n  }\n  \n  // 合計を計算\n  const total = giverScore + takerScore + matcherScore;\n  \n  // パーセンテージ計算\n  const percentage = {\n    giver: total === 0 ? 0 : (giverScore / total) * 100,\n    taker: total === 0 ? 0 : (takerScore / total) * 100,\n    matcher: total === 0 ? 0 : (matcherScore / total) * 100\n  };\n  \n  return {\n    giver: giverScore,\n    taker: takerScore,\n    matcher: matcherScore,\n    dominantType: dominantType as any,\n    percentage\n  };\n}\n\ndescribe('クイズユーティリティ', () => {\n  describe('calculateQuizResults', () => {\n    const mockQuestions: QuizQuestion[] = [\n      {\n        id: 'q1',\n        text: '質問1',\n        options: [\n          { id: 'q1o1', text: '選択肢1', scores: { giver: 3, taker: 0, matcher: 1 } },\n          { id: 'q1o2', text: '選択肢2', scores: { giver: 0, taker: 3, matcher: 1 } },\n          { id: 'q1o3', text: '選択肢3', scores: { giver: 1, taker: 1, matcher: 2 } }\n        ]\n      },\n      {\n        id: 'q2',\n        text: '質問2',\n        options: [\n          { id: 'q2o1', text: '選択肢1', scores: { giver: 2, taker: 1, matcher: 1 } },\n          { id: 'q2o2', text: '選択肢2', scores: { giver: 0, taker: 2, matcher: 2 } },\n          { id: 'q2o3', text: '選択肢3', scores: { giver: 1, taker: 0, matcher: 3 } }\n        ]\n      },\n      {\n        id: 'q3',\n        text: '質問3',\n        options: [\n          { id: 'q3o1', text: '選択肢1', scores: { giver: 1, taker: 3, matcher: 0 } },\n          { id: 'q3o2', text: '選択肢2', scores: { giver: 2, taker: 1, matcher: 1 } },\n          { id: 'q3o3', text: '選択肢3', scores: { giver: 3, taker: 0, matcher: 1 } }\n        ]\n      }\n    ];\n\n    it('選択された回答から正しくギバースコアを計算する', () => {\n      const answers = [\n        { questionId: 'q1', optionId: 'q1o1' }, // giver: 3, taker: 0, matcher: 1\n        { questionId: 'q2', optionId: 'q2o3' }, // giver: 1, taker: 0, matcher: 3\n        { questionId: 'q3', optionId: 'q3o3' }  // giver: 3, taker: 0, matcher: 1\n      ];\n\n      const result = calculateQuizResults(mockQuestions, answers);\n\n      expect(result.giver).toBe(7);  // 3 + 1 + 3\n      expect(result.taker).toBe(0);  // 0 + 0 + 0\n      expect(result.matcher).toBe(5);  // 1 + 3 + 1\n      expect(result.dominantType).toBe('giver'); // giverスコアが最高\n    });\n\n    it('選択された回答から正しくテイカースコアを計算する', () => {\n      const answers = [\n        { questionId: 'q1', optionId: 'q1o2' }, // giver: 0, taker: 3, matcher: 1\n        { questionId: 'q2', optionId: 'q2o2' }, // giver: 0, taker: 2, matcher: 2\n        { questionId: 'q3', optionId: 'q3o1' }  // giver: 1, taker: 3, matcher: 0\n      ];\n\n      const result = calculateQuizResults(mockQuestions, answers);\n\n      expect(result.giver).toBe(1);  // 0 + 0 + 1\n      expect(result.taker).toBe(8);  // 3 + 2 + 3\n      expect(result.matcher).toBe(3);  // 1 + 2 + 0\n      expect(result.dominantType).toBe('taker'); // takerスコアが最高\n    });\n\n    it('選択された回答から正しくマッチャースコアを計算する', () => {\n      const answers = [\n        { questionId: 'q1', optionId: 'q1o3' }, // giver: 1, taker: 1, matcher: 2\n        { questionId: 'q2', optionId: 'q2o3' }, // giver: 1, taker: 0, matcher: 3\n        { questionId: 'q3', optionId: 'q3o2' }  // giver: 2, taker: 1, matcher: 1\n      ];\n\n      const result = calculateQuizResults(mockQuestions, answers);\n\n      expect(result.giver).toBe(4);  // 1 + 1 + 2\n      expect(result.taker).toBe(2);  // 1 + 0 + 1\n      expect(result.matcher).toBe(6);  // 2 + 3 + 1\n      expect(result.dominantType).toBe('matcher'); // matcherスコアが最高\n    });\n\n    it('同点の場合の優先順位を検証する', () => {\n      const answers = [\n        { questionId: 'q1', optionId: 'q1o1' }, // giver: 3, taker: 0, matcher: 1\n        { questionId: 'q2', optionId: 'q2o1' }, // giver: 2, taker: 1, matcher: 1\n        { questionId: 'q3', optionId: 'q3o1' }  // giver: 1, taker: 3, matcher: 0\n      ];\n\n      const result = calculateQuizResults(mockQuestions, answers);\n\n      expect(result.giver).toBe(6);  // 3 + 2 + 1\n      expect(result.taker).toBe(4);  // 0 + 1 + 3\n      expect(result.matcher).toBe(2);  // 1 + 1 + 0\n      expect(result.dominantType).toBe('giver'); // giverスコアが最高\n    });\n\n    it('回答が存在しない質問はスコアに反映されない', () => {\n      const answers = [\n        { questionId: 'q1', optionId: 'q1o1' }, // giver: 3, taker: 0, matcher: 1\n        // q2に対する回答がない\n        { questionId: 'q3', optionId: 'q3o3' }  // giver: 3, taker: 0, matcher: 1\n      ];\n\n      const result = calculateQuizResults(mockQuestions, answers);\n\n      expect(result.giver).toBe(6);  // 3 + 0 + 3\n      expect(result.taker).toBe(0);  // 0 + 0 + 0\n      expect(result.matcher).toBe(2);  // 1 + 0 + 1\n    });\n\n    it('パーセンテージ計算が正しく行われる', () => {\n      const answers = [\n        { questionId: 'q1', optionId: 'q1o1' }, // giver: 3, taker: 0, matcher: 1\n        { questionId: 'q2', optionId: 'q2o3' }, // giver: 1, taker: 0, matcher: 3\n        { questionId: 'q3', optionId: 'q3o3' }  // giver: 3, taker: 0, matcher: 1\n      ];\n\n      const result = calculateQuizResults(mockQuestions, answers);\n\n      // 合計: giver=7, taker=0, matcher=5, total=12\n      expect(result.percentage.giver).toBeCloseTo(58.33, 1);  // 7/12 * 100\n      expect(result.percentage.taker).toBeCloseTo(0, 1);      // 0/12 * 100\n      expect(result.percentage.matcher).toBeCloseTo(41.67, 1); // 5/12 * 100\n    });\n  });\n});\n\ndescribe('Quiz utility functions', () => {\n  describe('calculatePersonalityType', () => {\n    test('すべての回答がgiver寄りの場合はgiverタイプを返す', () => {\n      // 各質問でgiver寄りの選択肢（index:0）を選んだ場合\n      const answers = [0, 0, 0, 0, 0];\n      const result = calculatePersonalityType(answers);\n      expect(result).toBe('giver');\n    });\n    \n    test('すべての回答がtaker寄りの場合はtakerタイプを返す', () => {\n      // 各質問でtaker寄りの選択肢（index:1）を選んだ場合\n      const answers = [1, 1, 1, 1, 1];\n      const result = calculatePersonalityType(answers);\n      expect(result).toBe('taker');\n    });\n    \n    test('すべての回答がmatcher寄りの場合はmatcherタイプを返す', () => {\n      // 各質問でmatcher寄りの選択肢（index:2）を選んだ場合\n      const answers = [2, 2, 2, 2, 2];\n      const result = calculatePersonalityType(answers);\n      expect(result).toBe('matcher');\n    });\n    \n    test('混合した回答の場合は最多のタイプを返す', () => {\n      // giver: 3, taker: 1, matcher: 1 の場合\n      const answers = [0, 0, 0, 1, 2];\n      const result = calculatePersonalityType(answers);\n      expect(result).toBe('giver');\n    });\n  });\n  \n  describe('getPersonalityTypeDescription', () => {\n    test('giverタイプの説明を返す', () => {\n      const description = getPersonalityTypeDescription('giver');\n      expect(description).toContain('他者をサポート');\n      expect(typeof description).toBe('string');\n    });\n    \n    test('takerタイプの説明を返す', () => {\n      const description = getPersonalityTypeDescription('taker');\n      expect(description).toContain('効率的な学習方法');\n      expect(typeof description).toBe('string');\n    });\n    \n    test('matcherタイプの説明を返す', () => {\n      const description = getPersonalityTypeDescription('matcher');\n      expect(description).toContain('相互学習');\n      expect(typeof description).toBe('string');\n    });\n  });\n  \n  describe('getPersonalityDescription', () => {\n    test('giverタイプの詳細情報を返す', () => {\n      const details = getPersonalityDescription('giver');\n      expect(details).toHaveProperty('type', 'giver');\n      expect(details).toHaveProperty('description');\n      expect(details).toHaveProperty('strengths');\n      expect(details).toHaveProperty('weaknesses');\n      expect(details).toHaveProperty('learningAdvice');\n      \n      // 配列の検証\n      expect(details.strengths).toBeInstanceOf(Array);\n      expect(details.weaknesses).toBeInstanceOf(Array);\n      expect(details.learningAdvice.tips).toBeInstanceOf(Array);\n      expect(details.learningAdvice.tools).toBeInstanceOf(Array);\n    });\n    \n    test('takerタイプの詳細情報を返す', () => {\n      const details = getPersonalityDescription('taker');\n      expect(details).toHaveProperty('type', 'taker');\n      expect(details.strengths.length).toBeGreaterThan(0);\n      expect(details.weaknesses.length).toBeGreaterThan(0);\n    });\n    \n    test('matcherタイプの詳細情報を返す', () => {\n      const details = getPersonalityDescription('matcher');\n      expect(details).toHaveProperty('type', 'matcher');\n      expect(details.strengths.length).toBeGreaterThan(0);\n      expect(details.weaknesses.length).toBeGreaterThan(0);\n    });\n  });\n}); "],"names":["calculateQuizResults","questions","answers","giverScore","takerScore","matcherScore","forEach","answer","question","find","q","id","questionId","option","options","o","optionId","scores","giver","taker","matcher","dominantType","total","percentage","describe","mockQuestions","text","it","result","expect","toBe","toBeCloseTo","test","calculatePersonalityType","description","getPersonalityTypeDescription","toContain","details","getPersonalityDescription","toHaveProperty","strengths","toBeInstanceOf","Array","weaknesses","learningAdvice","tips","tools","length","toBeGreaterThan"],"mappings":"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"}