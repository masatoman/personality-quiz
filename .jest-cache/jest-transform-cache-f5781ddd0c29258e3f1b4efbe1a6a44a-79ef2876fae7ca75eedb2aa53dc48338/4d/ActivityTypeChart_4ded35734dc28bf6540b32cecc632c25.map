{"version":3,"sources":["/Users/master/Local Sites/testcursor/src/components/dashboard/ActivityTypeChart.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { \n  PieChart, \n  Pie, \n  Cell, \n  ResponsiveContainer, \n  Tooltip, \n  Legend \n} from 'recharts';\nimport { ActivityType } from '@/types/quiz';\n\n// 活動タイプ情報の型定義\ninterface ActivityTypeInfo {\n  type: ActivityType;\n  count: number;\n  label: string;\n  color: string;\n}\n\n// 円グラフコンポーネントのプロパティ\ninterface ActivityTypeChartProps {\n  userId: string;\n}\n\n// 活動種類別円グラフコンポーネント\nconst ActivityTypeChart: React.FC<ActivityTypeChartProps> = ({ userId }) => {\n  const [activityData, setActivityData] = useState<ActivityTypeInfo[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // 活動タイプの表示名とカラーマップ\n  const activityTypeMap: Record<ActivityType, { label: string; color: string }> = {\n    'CREATE_CONTENT': { label: 'コンテンツ作成', color: '#6246EA' },\n    'PROVIDE_FEEDBACK': { label: 'フィードバック提供', color: '#36B9CC' },\n    'CONSUME_CONTENT': { label: 'コンテンツ利用', color: '#4CAF50' },\n    'RECEIVE_FEEDBACK': { label: 'フィードバック受領', color: '#FFC107' },\n    'SHARE_RESOURCE': { label: 'リソース共有', color: '#FF5722' },\n    'ASK_QUESTION': { label: '質問', color: '#9C27B0' }\n  };\n\n  // データ取得\n  useEffect(() => {\n    const fetchActivityData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        \n        const response = await fetch(`/api/user/activity-stats?userId=${userId}`);\n        \n        if (!response.ok) {\n          throw new Error(`データの取得に失敗しました: ${response.status}`);\n        }\n        \n        const data = await response.json();\n        \n        // データの形式を整える\n        const formattedData = Object.entries(data.activityCounts).map(([type, count]) => ({\n          type: type as ActivityType,\n          count: count as number,\n          label: activityTypeMap[type as ActivityType]?.label || type,\n          color: activityTypeMap[type as ActivityType]?.color || '#999999'\n        }));\n        \n        setActivityData(formattedData);\n      } catch (error) {\n        console.error('活動データの取得に失敗しました:', error);\n        setError('活動データの取得中にエラーが発生しました。');\n        \n        // 開発用のモックデータ\n        setActivityData(generateMockData());\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchActivityData();\n  }, [userId]);\n\n  // モックデータ生成関数（開発用）\n  const generateMockData = (): ActivityTypeInfo[] => {\n    const mockData: ActivityTypeInfo[] = [\n      {\n        type: 'CONSUME_CONTENT',\n        count: 45,\n        label: activityTypeMap['CONSUME_CONTENT'].label,\n        color: activityTypeMap['CONSUME_CONTENT'].color\n      },\n      {\n        type: 'CREATE_CONTENT',\n        count: 12,\n        label: activityTypeMap['CREATE_CONTENT'].label,\n        color: activityTypeMap['CREATE_CONTENT'].color\n      },\n      {\n        type: 'PROVIDE_FEEDBACK',\n        count: 23,\n        label: activityTypeMap['PROVIDE_FEEDBACK'].label,\n        color: activityTypeMap['PROVIDE_FEEDBACK'].color\n      },\n      {\n        type: 'RECEIVE_FEEDBACK',\n        count: 18,\n        label: activityTypeMap['RECEIVE_FEEDBACK'].label,\n        color: activityTypeMap['RECEIVE_FEEDBACK'].color\n      },\n      {\n        type: 'SHARE_RESOURCE',\n        count: 7,\n        label: activityTypeMap['SHARE_RESOURCE'].label,\n        color: activityTypeMap['SHARE_RESOURCE'].color\n      },\n      {\n        type: 'ASK_QUESTION',\n        count: 15,\n        label: activityTypeMap['ASK_QUESTION'].label,\n        color: activityTypeMap['ASK_QUESTION'].color\n      }\n    ];\n    \n    return mockData;\n  };\n\n  // 合計活動数を計算\n  const totalActivities = activityData.reduce((sum, item) => sum + item.count, 0);\n\n  // カスタムツールチップ\n  const CustomTooltip = ({ active, payload }: any) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      return (\n        <div className=\"bg-white p-2 border border-gray-200 shadow-sm rounded-md\">\n          <p className=\"font-bold\">{data.label}</p>\n          <p className=\"text-sm\">{`${data.count}回（${((data.count / totalActivities) * 100).toFixed(1)}%）`}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-md p-6\">\n      <h2 className=\"text-xl font-bold mb-4\">活動種類の割合</h2>\n      \n      {loading ? (\n        <div className=\"flex justify-center items-center h-64\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n        </div>\n      ) : error ? (\n        <div className=\"flex justify-center items-center h-64 text-red-500\">\n          <p>{error}</p>\n        </div>\n      ) : activityData.length === 0 ? (\n        <div className=\"flex justify-center items-center h-64 text-gray-500\">\n          <p>まだ活動データがありません。</p>\n        </div>\n      ) : (\n        <div className=\"h-64\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <PieChart>\n              <Pie\n                data={activityData}\n                cx=\"50%\"\n                cy=\"50%\"\n                labelLine={false}\n                outerRadius={80}\n                fill=\"#8884d8\"\n                dataKey=\"count\"\n                nameKey=\"label\"\n                label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\n              >\n                {activityData.map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill={entry.color} />\n                ))}\n              </Pie>\n              <Tooltip content={<CustomTooltip />} />\n              <Legend />\n            </PieChart>\n          </ResponsiveContainer>\n        </div>\n      )}\n      \n      <div className=\"mt-4 grid grid-cols-2 md:grid-cols-3 gap-2\">\n        {activityData.map((activity) => (\n          <div key={activity.type} className=\"flex items-center\">\n            <div \n              className=\"w-3 h-3 rounded-full mr-2\" \n              style={{ backgroundColor: activity.color }} \n            />\n            <span className=\"text-sm\">{activity.label}: {activity.count}回</span>\n          </div>\n        ))}\n      </div>\n      \n      <div className=\"mt-4 text-sm text-gray-500\">\n        <p>総活動数: {totalActivities}回</p>\n        <p>※ ギバースコアの向上には、特に「コンテンツ作成」と「フィードバック提供」が効果的です。</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ActivityTypeChart; "],"names":["ActivityTypeChart","userId","activityData","setActivityData","useState","loading","setLoading","error","setError","activityTypeMap","label","color","useEffect","fetchActivityData","response","fetch","ok","Error","status","data","json","formattedData","Object","entries","activityCounts","map","type","count","console","generateMockData","mockData","totalActivities","reduce","sum","item","CustomTooltip","active","payload","length","div","className","p","toFixed","h2","ResponsiveContainer","width","height","PieChart","Pie","cx","cy","labelLine","outerRadius","fill","dataKey","nameKey","name","percent","entry","index","Cell","Tooltip","content","Legend","activity","style","backgroundColor","span"],"mappings":"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"}