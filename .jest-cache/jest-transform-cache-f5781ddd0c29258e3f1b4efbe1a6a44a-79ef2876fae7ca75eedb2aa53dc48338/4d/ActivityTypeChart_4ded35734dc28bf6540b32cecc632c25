97b1e3e5bd69c29cb4bac03011a5d0d6
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _recharts = require("recharts");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
// 活動種類別円グラフコンポーネント
const ActivityTypeChart = ({ userId })=>{
    const [activityData, setActivityData] = (0, _react.useState)([]);
    const [loading, setLoading] = (0, _react.useState)(true);
    const [error, setError] = (0, _react.useState)(null);
    // 活動タイプの表示名とカラーマップ
    const activityTypeMap = {
        "CREATE_CONTENT": {
            label: "コンテンツ作成",
            color: "#6246EA"
        },
        "PROVIDE_FEEDBACK": {
            label: "フィードバック提供",
            color: "#36B9CC"
        },
        "CONSUME_CONTENT": {
            label: "コンテンツ利用",
            color: "#4CAF50"
        },
        "RECEIVE_FEEDBACK": {
            label: "フィードバック受領",
            color: "#FFC107"
        },
        "SHARE_RESOURCE": {
            label: "リソース共有",
            color: "#FF5722"
        },
        "ASK_QUESTION": {
            label: "質問",
            color: "#9C27B0"
        }
    };
    // データ取得
    (0, _react.useEffect)(()=>{
        const fetchActivityData = async ()=>{
            try {
                setLoading(true);
                setError(null);
                const response = await fetch(`/api/user/activity-stats?userId=${userId}`);
                if (!response.ok) {
                    throw new Error(`データの取得に失敗しました: ${response.status}`);
                }
                const data = await response.json();
                // データの形式を整える
                const formattedData = Object.entries(data.activityCounts).map(([type, count])=>({
                        type: type,
                        count: count,
                        label: activityTypeMap[type]?.label || type,
                        color: activityTypeMap[type]?.color || "#999999"
                    }));
                setActivityData(formattedData);
            } catch (error) {
                console.error("活動データの取得に失敗しました:", error);
                setError("活動データの取得中にエラーが発生しました。");
                // 開発用のモックデータ
                setActivityData(generateMockData());
            } finally{
                setLoading(false);
            }
        };
        fetchActivityData();
    }, [
        userId
    ]);
    // モックデータ生成関数（開発用）
    const generateMockData = ()=>{
        const mockData = [
            {
                type: "CONSUME_CONTENT",
                count: 45,
                label: activityTypeMap["CONSUME_CONTENT"].label,
                color: activityTypeMap["CONSUME_CONTENT"].color
            },
            {
                type: "CREATE_CONTENT",
                count: 12,
                label: activityTypeMap["CREATE_CONTENT"].label,
                color: activityTypeMap["CREATE_CONTENT"].color
            },
            {
                type: "PROVIDE_FEEDBACK",
                count: 23,
                label: activityTypeMap["PROVIDE_FEEDBACK"].label,
                color: activityTypeMap["PROVIDE_FEEDBACK"].color
            },
            {
                type: "RECEIVE_FEEDBACK",
                count: 18,
                label: activityTypeMap["RECEIVE_FEEDBACK"].label,
                color: activityTypeMap["RECEIVE_FEEDBACK"].color
            },
            {
                type: "SHARE_RESOURCE",
                count: 7,
                label: activityTypeMap["SHARE_RESOURCE"].label,
                color: activityTypeMap["SHARE_RESOURCE"].color
            },
            {
                type: "ASK_QUESTION",
                count: 15,
                label: activityTypeMap["ASK_QUESTION"].label,
                color: activityTypeMap["ASK_QUESTION"].color
            }
        ];
        return mockData;
    };
    // 合計活動数を計算
    const totalActivities = activityData.reduce((sum, item)=>sum + item.count, 0);
    // カスタムツールチップ
    const CustomTooltip = ({ active, payload })=>{
        if (active && payload && payload.length) {
            const data = payload[0].payload;
            return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "bg-white p-2 border border-gray-200 shadow-sm rounded-md",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                        className: "font-bold",
                        children: data.label
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                        className: "text-sm",
                        children: `${data.count}回（${(data.count / totalActivities * 100).toFixed(1)}%）`
                    })
                ]
            });
        }
        return null;
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: "bg-white rounded-lg shadow-md p-6",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)("h2", {
                className: "text-xl font-bold mb-4",
                children: "活動種類の割合"
            }),
            loading ? /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "flex justify-center items-center h-64",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    className: "animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"
                })
            }) : error ? /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "flex justify-center items-center h-64 text-red-500",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                    children: error
                })
            }) : activityData.length === 0 ? /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "flex justify-center items-center h-64 text-gray-500",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                    children: "まだ活動データがありません。"
                })
            }) : /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "h-64",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.ResponsiveContainer, {
                    width: "100%",
                    height: "100%",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_recharts.PieChart, {
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.Pie, {
                                data: activityData,
                                cx: "50%",
                                cy: "50%",
                                labelLine: false,
                                outerRadius: 80,
                                fill: "#8884d8",
                                dataKey: "count",
                                nameKey: "label",
                                label: ({ name, percent })=>`${name}: ${(percent * 100).toFixed(0)}%`,
                                children: activityData.map((entry, index)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.Cell, {
                                        fill: entry.color
                                    }, `cell-${index}`))
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.Tooltip, {
                                content: /*#__PURE__*/ (0, _jsxruntime.jsx)(CustomTooltip, {})
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.Legend, {})
                        ]
                    })
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "mt-4 grid grid-cols-2 md:grid-cols-3 gap-2",
                children: activityData.map((activity)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex items-center",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "w-3 h-3 rounded-full mr-2",
                                style: {
                                    backgroundColor: activity.color
                                }
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                className: "text-sm",
                                children: [
                                    activity.label,
                                    ": ",
                                    activity.count,
                                    "回"
                                ]
                            })
                        ]
                    }, activity.type))
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "mt-4 text-sm text-gray-500",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                        children: [
                            "総活動数: ",
                            totalActivities,
                            "回"
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                        children: "※ ギバースコアの向上には、特に「コンテンツ作成」と「フィードバック提供」が効果的です。"
                    })
                ]
            })
        ]
    });
};
const _default = ActivityTypeChart;

//# sourceMappingURL=data:application/json;base64,