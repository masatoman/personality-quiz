{"version":3,"sources":["/Users/master/Local Sites/testcursor/src/setupTests.ts"],"sourcesContent":["// テスト環境のセットアップ\nimport '@testing-library/jest-dom';\nimport '@testing-library/jest-dom/extend-expect';\n\n// Jest-DOM型拡張の明示的なロード\nimport './types/jest.d.ts';\nimport './types/test-utils.d.ts';\n\n// グローバルなモックの設定\nglobal.fetch = jest.fn() as jest.MockedFunction<typeof fetch>;\n\n// 環境変数設定\nprocess.env.NEXT_PUBLIC_SUPABASE_URL = 'https://example.supabase.co';\nprocess.env.NEXT_PUBLIC_SUPABASE_ANON_KEY = 'test-anon-key';\n// process.env.NODE_ENV = 'test'; // 読み取り専用プロパティのため設定不可\n\n// コンソールエラーをモックに置き換え（テスト中のエラー表示を抑制）\njest.spyOn(console, 'error').mockImplementation(() => {});\n\n// 現在時刻をモック（テスト中の日時依存を排除）\njest.useFakeTimers().setSystemTime(new Date('2023-01-01'));\n\n// MutationObserverのモック\nclass MockMutationObserver {\n  observe = jest.fn();\n  disconnect = jest.fn();\n  takeRecords = jest.fn();\n}\n\nglobal.MutationObserver = MockMutationObserver as unknown as typeof MutationObserver;\n\n// IntersectionObserverのモック\nclass MockIntersectionObserver {\n  constructor(callback: IntersectionObserverCallback) {\n    this.callback = callback;\n  }\n  callback: IntersectionObserverCallback;\n  observe = jest.fn();\n  unobserve = jest.fn();\n  disconnect = jest.fn();\n}\n\nglobal.IntersectionObserver = MockIntersectionObserver as unknown as typeof IntersectionObserver;\n\n// ResizeObserverのモック\nclass MockResizeObserver {\n  constructor(callback: ResizeObserverCallback) {\n    this.callback = callback;\n  }\n  callback: ResizeObserverCallback;\n  observe = jest.fn();\n  unobserve = jest.fn();\n  disconnect = jest.fn();\n}\n\nglobal.ResizeObserver = MockResizeObserver as unknown as typeof ResizeObserver;\n\n// matchMediaのモック\nObject.defineProperty(window, 'matchMedia', {\n  writable: true,\n  value: jest.fn().mockImplementation(query => ({\n    matches: false,\n    media: query,\n    onchange: null,\n    addListener: jest.fn(),\n    removeListener: jest.fn(),\n    addEventListener: jest.fn(),\n    removeEventListener: jest.fn(),\n    dispatchEvent: jest.fn(),\n  })),\n});\n\n// Jestのタイムアウト設定\njest.setTimeout(30000);\n\n// TextEncoder/TextDecoderのモック\nif (typeof global.TextEncoder === 'undefined') {\n  global.TextEncoder = require('util').TextEncoder;\n}\n\nif (typeof global.TextDecoder === 'undefined') {\n  global.TextDecoder = require('util').TextDecoder;\n}\n\n// エラースタックトレースをより読みやすくするための設定\nError.stackTraceLimit = 100;\n\n// テスト後のクリーンアップ\nafterEach(() => {\n  jest.clearAllMocks();\n}); "],"names":["global","fetch","jest","fn","process","env","NEXT_PUBLIC_SUPABASE_URL","NEXT_PUBLIC_SUPABASE_ANON_KEY","spyOn","console","mockImplementation","useFakeTimers","setSystemTime","Date","MockMutationObserver","observe","disconnect","takeRecords","MutationObserver","MockIntersectionObserver","constructor","callback","unobserve","IntersectionObserver","MockResizeObserver","ResizeObserver","Object","defineProperty","window","writable","value","query","matches","media","onchange","addListener","removeListener","addEventListener","removeEventListener","dispatchEvent","setTimeout","TextEncoder","require","TextDecoder","Error","stackTraceLimit","afterEach","clearAllMocks"],"mappings":"AAAA,eAAe;;;;;QACR;QACA;QAGA;QACA;AAEP,eAAe;AACfA,OAAOC,KAAK,GAAGC,KAAKC,EAAE;AAEtB,SAAS;AACTC,QAAQC,GAAG,CAACC,wBAAwB,GAAG;AACvCF,QAAQC,GAAG,CAACE,6BAA6B,GAAG;AAC5C,uDAAuD;AAEvD,mCAAmC;AACnCL,KAAKM,KAAK,CAACC,SAAS,SAASC,kBAAkB,CAAC,KAAO;AAEvD,yBAAyB;AACzBR,KAAKS,aAAa,GAAGC,aAAa,CAAC,IAAIC,KAAK;AAE5C,uBAAuB;AACvB,MAAMC;;aACJC,UAAUb,KAAKC,EAAE;aACjBa,aAAad,KAAKC,EAAE;aACpBc,cAAcf,KAAKC,EAAE;;AACvB;AAEAH,OAAOkB,gBAAgB,GAAGJ;AAE1B,2BAA2B;AAC3B,MAAMK;IACJC,YAAYC,QAAsC,CAAE;aAIpDN,UAAUb,KAAKC,EAAE;aACjBmB,YAAYpB,KAAKC,EAAE;aACnBa,aAAad,KAAKC,EAAE;QALlB,IAAI,CAACkB,QAAQ,GAAGA;IAClB;AAKF;AAEArB,OAAOuB,oBAAoB,GAAGJ;AAE9B,qBAAqB;AACrB,MAAMK;IACJJ,YAAYC,QAAgC,CAAE;aAI9CN,UAAUb,KAAKC,EAAE;aACjBmB,YAAYpB,KAAKC,EAAE;aACnBa,aAAad,KAAKC,EAAE;QALlB,IAAI,CAACkB,QAAQ,GAAGA;IAClB;AAKF;AAEArB,OAAOyB,cAAc,GAAGD;AAExB,iBAAiB;AACjBE,OAAOC,cAAc,CAACC,QAAQ,cAAc;IAC1CC,UAAU;IACVC,OAAO5B,KAAKC,EAAE,GAAGO,kBAAkB,CAACqB,CAAAA,QAAU,CAAA;YAC5CC,SAAS;YACTC,OAAOF;YACPG,UAAU;YACVC,aAAajC,KAAKC,EAAE;YACpBiC,gBAAgBlC,KAAKC,EAAE;YACvBkC,kBAAkBnC,KAAKC,EAAE;YACzBmC,qBAAqBpC,KAAKC,EAAE;YAC5BoC,eAAerC,KAAKC,EAAE;QACxB,CAAA;AACF;AAEA,gBAAgB;AAChBD,KAAKsC,UAAU,CAAC;AAEhB,8BAA8B;AAC9B,IAAI,OAAOxC,OAAOyC,WAAW,KAAK,aAAa;IAC7CzC,OAAOyC,WAAW,GAAGC,QAAQ,QAAQD,WAAW;AAClD;AAEA,IAAI,OAAOzC,OAAO2C,WAAW,KAAK,aAAa;IAC7C3C,OAAO2C,WAAW,GAAGD,QAAQ,QAAQC,WAAW;AAClD;AAEA,6BAA6B;AAC7BC,MAAMC,eAAe,GAAG;AAExB,eAAe;AACfC,UAAU;IACR5C,KAAK6C,aAAa;AACpB"}