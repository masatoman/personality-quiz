ff9d389b1a76614a5894a03142a26607
// テスト環境のセットアップ
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
require("@testing-library/jest-dom");
require("@testing-library/jest-dom/extend-expect");
require("./types/jest.d.ts");
require("./types/test-utils.d.ts");
// グローバルなモックの設定
global.fetch = jest.fn();
// 環境変数設定
process.env.NEXT_PUBLIC_SUPABASE_URL = "https://example.supabase.co";
process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY = "test-anon-key";
// process.env.NODE_ENV = 'test'; // 読み取り専用プロパティのため設定不可
// コンソールエラーをモックに置き換え（テスト中のエラー表示を抑制）
jest.spyOn(console, "error").mockImplementation(()=>{});
// 現在時刻をモック（テスト中の日時依存を排除）
jest.useFakeTimers().setSystemTime(new Date("2023-01-01"));
// MutationObserverのモック
class MockMutationObserver {
    constructor(){
        this.observe = jest.fn();
        this.disconnect = jest.fn();
        this.takeRecords = jest.fn();
    }
}
global.MutationObserver = MockMutationObserver;
// IntersectionObserverのモック
class MockIntersectionObserver {
    constructor(callback){
        this.observe = jest.fn();
        this.unobserve = jest.fn();
        this.disconnect = jest.fn();
        this.callback = callback;
    }
}
global.IntersectionObserver = MockIntersectionObserver;
// ResizeObserverのモック
class MockResizeObserver {
    constructor(callback){
        this.observe = jest.fn();
        this.unobserve = jest.fn();
        this.disconnect = jest.fn();
        this.callback = callback;
    }
}
global.ResizeObserver = MockResizeObserver;
// matchMediaのモック
Object.defineProperty(window, "matchMedia", {
    writable: true,
    value: jest.fn().mockImplementation((query)=>({
            matches: false,
            media: query,
            onchange: null,
            addListener: jest.fn(),
            removeListener: jest.fn(),
            addEventListener: jest.fn(),
            removeEventListener: jest.fn(),
            dispatchEvent: jest.fn()
        }))
});
// Jestのタイムアウト設定
jest.setTimeout(30000);
// TextEncoder/TextDecoderのモック
if (typeof global.TextEncoder === "undefined") {
    global.TextEncoder = require("util").TextEncoder;
}
if (typeof global.TextDecoder === "undefined") {
    global.TextDecoder = require("util").TextDecoder;
}
// エラースタックトレースをより読みやすくするための設定
Error.stackTraceLimit = 100;
// テスト後のクリーンアップ
afterEach(()=>{
    jest.clearAllMocks();
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXN0ZXIvTG9jYWwgU2l0ZXMvdGVzdGN1cnNvci9zcmMvc2V0dXBUZXN0cy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyDjg4bjgrnjg4jnkrDlooPjga7jgrvjg4Pjg4jjgqLjg4Pjg5dcbmltcG9ydCAnQHRlc3RpbmctbGlicmFyeS9qZXN0LWRvbSc7XG5pbXBvcnQgJ0B0ZXN0aW5nLWxpYnJhcnkvamVzdC1kb20vZXh0ZW5kLWV4cGVjdCc7XG5cbi8vIEplc3QtRE9N5Z6L5ouh5by144Gu5piO56S655qE44Gq44Ot44O844OJXG5pbXBvcnQgJy4vdHlwZXMvamVzdC5kLnRzJztcbmltcG9ydCAnLi90eXBlcy90ZXN0LXV0aWxzLmQudHMnO1xuXG4vLyDjgrDjg63jg7zjg5Djg6vjgarjg6Ljg4Pjgq/jga7oqK3lrppcbmdsb2JhbC5mZXRjaCA9IGplc3QuZm4oKSBhcyBqZXN0Lk1vY2tlZEZ1bmN0aW9uPHR5cGVvZiBmZXRjaD47XG5cbi8vIOeSsOWig+WkieaVsOioreWumlxucHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMID0gJ2h0dHBzOi8vZXhhbXBsZS5zdXBhYmFzZS5jbyc7XG5wcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSA9ICd0ZXN0LWFub24ta2V5Jztcbi8vIHByb2Nlc3MuZW52Lk5PREVfRU5WID0gJ3Rlc3QnOyAvLyDoqq3jgb/lj5bjgorlsILnlKjjg5fjg63jg5Hjg4bjgqPjga7jgZ/jgoHoqK3lrprkuI3lj69cblxuLy8g44Kz44Oz44K944O844Or44Ko44Op44O844KS44Oi44OD44Kv44Gr572u44GN5o+b44GI77yI44OG44K544OI5Lit44Gu44Ko44Op44O86KGo56S644KS5oqR5Yi277yJXG5qZXN0LnNweU9uKGNvbnNvbGUsICdlcnJvcicpLm1vY2tJbXBsZW1lbnRhdGlvbigoKSA9PiB7fSk7XG5cbi8vIOePvuWcqOaZguWIu+OCkuODouODg+OCr++8iOODhuOCueODiOS4reOBruaXpeaZguS+neWtmOOCkuaOkumZpO+8iVxuamVzdC51c2VGYWtlVGltZXJzKCkuc2V0U3lzdGVtVGltZShuZXcgRGF0ZSgnMjAyMy0wMS0wMScpKTtcblxuLy8gTXV0YXRpb25PYnNlcnZlcuOBruODouODg+OCr1xuY2xhc3MgTW9ja011dGF0aW9uT2JzZXJ2ZXIge1xuICBvYnNlcnZlID0gamVzdC5mbigpO1xuICBkaXNjb25uZWN0ID0gamVzdC5mbigpO1xuICB0YWtlUmVjb3JkcyA9IGplc3QuZm4oKTtcbn1cblxuZ2xvYmFsLk11dGF0aW9uT2JzZXJ2ZXIgPSBNb2NrTXV0YXRpb25PYnNlcnZlciBhcyB1bmtub3duIGFzIHR5cGVvZiBNdXRhdGlvbk9ic2VydmVyO1xuXG4vLyBJbnRlcnNlY3Rpb25PYnNlcnZlcuOBruODouODg+OCr1xuY2xhc3MgTW9ja0ludGVyc2VjdGlvbk9ic2VydmVyIHtcbiAgY29uc3RydWN0b3IoY2FsbGJhY2s6IEludGVyc2VjdGlvbk9ic2VydmVyQ2FsbGJhY2spIHtcbiAgICB0aGlzLmNhbGxiYWNrID0gY2FsbGJhY2s7XG4gIH1cbiAgY2FsbGJhY2s6IEludGVyc2VjdGlvbk9ic2VydmVyQ2FsbGJhY2s7XG4gIG9ic2VydmUgPSBqZXN0LmZuKCk7XG4gIHVub2JzZXJ2ZSA9IGplc3QuZm4oKTtcbiAgZGlzY29ubmVjdCA9IGplc3QuZm4oKTtcbn1cblxuZ2xvYmFsLkludGVyc2VjdGlvbk9ic2VydmVyID0gTW9ja0ludGVyc2VjdGlvbk9ic2VydmVyIGFzIHVua25vd24gYXMgdHlwZW9mIEludGVyc2VjdGlvbk9ic2VydmVyO1xuXG4vLyBSZXNpemVPYnNlcnZlcuOBruODouODg+OCr1xuY2xhc3MgTW9ja1Jlc2l6ZU9ic2VydmVyIHtcbiAgY29uc3RydWN0b3IoY2FsbGJhY2s6IFJlc2l6ZU9ic2VydmVyQ2FsbGJhY2spIHtcbiAgICB0aGlzLmNhbGxiYWNrID0gY2FsbGJhY2s7XG4gIH1cbiAgY2FsbGJhY2s6IFJlc2l6ZU9ic2VydmVyQ2FsbGJhY2s7XG4gIG9ic2VydmUgPSBqZXN0LmZuKCk7XG4gIHVub2JzZXJ2ZSA9IGplc3QuZm4oKTtcbiAgZGlzY29ubmVjdCA9IGplc3QuZm4oKTtcbn1cblxuZ2xvYmFsLlJlc2l6ZU9ic2VydmVyID0gTW9ja1Jlc2l6ZU9ic2VydmVyIGFzIHVua25vd24gYXMgdHlwZW9mIFJlc2l6ZU9ic2VydmVyO1xuXG4vLyBtYXRjaE1lZGlh44Gu44Oi44OD44KvXG5PYmplY3QuZGVmaW5lUHJvcGVydHkod2luZG93LCAnbWF0Y2hNZWRpYScsIHtcbiAgd3JpdGFibGU6IHRydWUsXG4gIHZhbHVlOiBqZXN0LmZuKCkubW9ja0ltcGxlbWVudGF0aW9uKHF1ZXJ5ID0+ICh7XG4gICAgbWF0Y2hlczogZmFsc2UsXG4gICAgbWVkaWE6IHF1ZXJ5LFxuICAgIG9uY2hhbmdlOiBudWxsLFxuICAgIGFkZExpc3RlbmVyOiBqZXN0LmZuKCksXG4gICAgcmVtb3ZlTGlzdGVuZXI6IGplc3QuZm4oKSxcbiAgICBhZGRFdmVudExpc3RlbmVyOiBqZXN0LmZuKCksXG4gICAgcmVtb3ZlRXZlbnRMaXN0ZW5lcjogamVzdC5mbigpLFxuICAgIGRpc3BhdGNoRXZlbnQ6IGplc3QuZm4oKSxcbiAgfSkpLFxufSk7XG5cbi8vIEplc3Tjga7jgr/jgqTjg6DjgqLjgqbjg4joqK3lrppcbmplc3Quc2V0VGltZW91dCgzMDAwMCk7XG5cbi8vIFRleHRFbmNvZGVyL1RleHREZWNvZGVy44Gu44Oi44OD44KvXG5pZiAodHlwZW9mIGdsb2JhbC5UZXh0RW5jb2RlciA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgZ2xvYmFsLlRleHRFbmNvZGVyID0gcmVxdWlyZSgndXRpbCcpLlRleHRFbmNvZGVyO1xufVxuXG5pZiAodHlwZW9mIGdsb2JhbC5UZXh0RGVjb2RlciA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgZ2xvYmFsLlRleHREZWNvZGVyID0gcmVxdWlyZSgndXRpbCcpLlRleHREZWNvZGVyO1xufVxuXG4vLyDjgqjjg6njg7zjgrnjgr/jg4Pjgq/jg4jjg6zjg7zjgrnjgpLjgojjgoroqq3jgb/jgoTjgZnjgY/jgZnjgovjgZ/jgoHjga7oqK3lrppcbkVycm9yLnN0YWNrVHJhY2VMaW1pdCA9IDEwMDtcblxuLy8g44OG44K544OI5b6M44Gu44Kv44Oq44O844Oz44Ki44OD44OXXG5hZnRlckVhY2goKCkgPT4ge1xuICBqZXN0LmNsZWFyQWxsTW9ja3MoKTtcbn0pOyAiXSwibmFtZXMiOlsiZ2xvYmFsIiwiZmV0Y2giLCJqZXN0IiwiZm4iLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkiLCJzcHlPbiIsImNvbnNvbGUiLCJtb2NrSW1wbGVtZW50YXRpb24iLCJ1c2VGYWtlVGltZXJzIiwic2V0U3lzdGVtVGltZSIsIkRhdGUiLCJNb2NrTXV0YXRpb25PYnNlcnZlciIsIm9ic2VydmUiLCJkaXNjb25uZWN0IiwidGFrZVJlY29yZHMiLCJNdXRhdGlvbk9ic2VydmVyIiwiTW9ja0ludGVyc2VjdGlvbk9ic2VydmVyIiwiY29uc3RydWN0b3IiLCJjYWxsYmFjayIsInVub2JzZXJ2ZSIsIkludGVyc2VjdGlvbk9ic2VydmVyIiwiTW9ja1Jlc2l6ZU9ic2VydmVyIiwiUmVzaXplT2JzZXJ2ZXIiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsIndpbmRvdyIsIndyaXRhYmxlIiwidmFsdWUiLCJxdWVyeSIsIm1hdGNoZXMiLCJtZWRpYSIsIm9uY2hhbmdlIiwiYWRkTGlzdGVuZXIiLCJyZW1vdmVMaXN0ZW5lciIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZGlzcGF0Y2hFdmVudCIsInNldFRpbWVvdXQiLCJUZXh0RW5jb2RlciIsInJlcXVpcmUiLCJUZXh0RGVjb2RlciIsIkVycm9yIiwic3RhY2tUcmFjZUxpbWl0IiwiYWZ0ZXJFYWNoIiwiY2xlYXJBbGxNb2NrcyJdLCJtYXBwaW5ncyI6IkFBQUEsZUFBZTs7Ozs7UUFDUjtRQUNBO1FBR0E7UUFDQTtBQUVQLGVBQWU7QUFDZkEsT0FBT0MsS0FBSyxHQUFHQyxLQUFLQyxFQUFFO0FBRXRCLFNBQVM7QUFDVEMsUUFBUUMsR0FBRyxDQUFDQyx3QkFBd0IsR0FBRztBQUN2Q0YsUUFBUUMsR0FBRyxDQUFDRSw2QkFBNkIsR0FBRztBQUM1Qyx1REFBdUQ7QUFFdkQsbUNBQW1DO0FBQ25DTCxLQUFLTSxLQUFLLENBQUNDLFNBQVMsU0FBU0Msa0JBQWtCLENBQUMsS0FBTztBQUV2RCx5QkFBeUI7QUFDekJSLEtBQUtTLGFBQWEsR0FBR0MsYUFBYSxDQUFDLElBQUlDLEtBQUs7QUFFNUMsdUJBQXVCO0FBQ3ZCLE1BQU1DOzthQUNKQyxVQUFVYixLQUFLQyxFQUFFO2FBQ2pCYSxhQUFhZCxLQUFLQyxFQUFFO2FBQ3BCYyxjQUFjZixLQUFLQyxFQUFFOztBQUN2QjtBQUVBSCxPQUFPa0IsZ0JBQWdCLEdBQUdKO0FBRTFCLDJCQUEyQjtBQUMzQixNQUFNSztJQUNKQyxZQUFZQyxRQUFzQyxDQUFFO2FBSXBETixVQUFVYixLQUFLQyxFQUFFO2FBQ2pCbUIsWUFBWXBCLEtBQUtDLEVBQUU7YUFDbkJhLGFBQWFkLEtBQUtDLEVBQUU7UUFMbEIsSUFBSSxDQUFDa0IsUUFBUSxHQUFHQTtJQUNsQjtBQUtGO0FBRUFyQixPQUFPdUIsb0JBQW9CLEdBQUdKO0FBRTlCLHFCQUFxQjtBQUNyQixNQUFNSztJQUNKSixZQUFZQyxRQUFnQyxDQUFFO2FBSTlDTixVQUFVYixLQUFLQyxFQUFFO2FBQ2pCbUIsWUFBWXBCLEtBQUtDLEVBQUU7YUFDbkJhLGFBQWFkLEtBQUtDLEVBQUU7UUFMbEIsSUFBSSxDQUFDa0IsUUFBUSxHQUFHQTtJQUNsQjtBQUtGO0FBRUFyQixPQUFPeUIsY0FBYyxHQUFHRDtBQUV4QixpQkFBaUI7QUFDakJFLE9BQU9DLGNBQWMsQ0FBQ0MsUUFBUSxjQUFjO0lBQzFDQyxVQUFVO0lBQ1ZDLE9BQU81QixLQUFLQyxFQUFFLEdBQUdPLGtCQUFrQixDQUFDcUIsQ0FBQUEsUUFBVSxDQUFBO1lBQzVDQyxTQUFTO1lBQ1RDLE9BQU9GO1lBQ1BHLFVBQVU7WUFDVkMsYUFBYWpDLEtBQUtDLEVBQUU7WUFDcEJpQyxnQkFBZ0JsQyxLQUFLQyxFQUFFO1lBQ3ZCa0Msa0JBQWtCbkMsS0FBS0MsRUFBRTtZQUN6Qm1DLHFCQUFxQnBDLEtBQUtDLEVBQUU7WUFDNUJvQyxlQUFlckMsS0FBS0MsRUFBRTtRQUN4QixDQUFBO0FBQ0Y7QUFFQSxnQkFBZ0I7QUFDaEJELEtBQUtzQyxVQUFVLENBQUM7QUFFaEIsOEJBQThCO0FBQzlCLElBQUksT0FBT3hDLE9BQU95QyxXQUFXLEtBQUssYUFBYTtJQUM3Q3pDLE9BQU95QyxXQUFXLEdBQUdDLFFBQVEsUUFBUUQsV0FBVztBQUNsRDtBQUVBLElBQUksT0FBT3pDLE9BQU8yQyxXQUFXLEtBQUssYUFBYTtJQUM3QzNDLE9BQU8yQyxXQUFXLEdBQUdELFFBQVEsUUFBUUMsV0FBVztBQUNsRDtBQUVBLDZCQUE2QjtBQUM3QkMsTUFBTUMsZUFBZSxHQUFHO0FBRXhCLGVBQWU7QUFDZkMsVUFBVTtJQUNSNUMsS0FBSzZDLGFBQWE7QUFDcEIifQ==