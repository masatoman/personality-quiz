{"version":3,"sources":["/Users/master/Local Sites/testcursor/src/components/features/dashboard/test/RecommendFeature.integration.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, waitFor, fireEvent } from '@testing-library/react';\nimport '@testing-library/jest-dom';\nimport DashboardPage from '../dashboard/DashboardPage';\nimport { useAuth } from '@/hooks/useAuth';\n\n// useAuthフックをモック\njest.mock('@/hooks/useAuth', () => ({\n  useAuth: jest.fn(),\n}));\n\n// フェッチのモック化\n// @ts-ignore - fetch型の不一致を無視\nglobal.fetch = jest.fn();\n\ndescribe('RecommendFeature - 機能内結合テスト', () => {\n  const mockUser = {\n    id: 'test-user-123',\n    email: 'test@example.com',\n  };\n  \n  beforeEach(() => {\n    jest.clearAllMocks();\n    \n    // useAuthモックの設定\n    (useAuth as jest.Mock).mockReturnValue({\n      user: mockUser,\n      loading: false,\n    });\n    \n    // 活動サマリーAPIレスポンスのモック\n    // @ts-ignore\n    global.fetch.mockImplementation((url) => {\n      if (url.includes('/api/user/activity-summary')) {\n        return Promise.resolve({\n          ok: true,\n          json: () => Promise.resolve({\n            createdMaterials: 12,\n            totalPoints: 1250,\n            viewedMaterials: 48,\n            createdMaterialsChange: 2,\n            totalPointsChange: 150,\n            viewedMaterialsChange: -3\n          })\n        });\n      }\n      \n      if (url.includes('/api/user/activity-stats')) {\n        return Promise.resolve({\n          ok: true,\n          json: () => Promise.resolve({\n            activityCounts: {\n              CREATE_CONTENT: 12,\n              PROVIDE_FEEDBACK: 23,\n              CONSUME_CONTENT: 45,\n              RECEIVE_FEEDBACK: 18,\n              SHARE_RESOURCE: 7,\n              ASK_QUESTION: 15\n            }\n          })\n        });\n      }\n      \n      return Promise.resolve({\n        ok: true,\n        json: () => Promise.resolve({})\n      });\n    });\n  });\n\n  it('レコメンドセクションが正しく表示されること', async () => {\n    render(<DashboardPage />);\n    \n    // レコメンドセクションのタイトルが表示されるまで待機\n    await waitFor(() => {\n      expect(screen.getByText('今日のレコメンド')).toBeInTheDocument();\n    });\n    \n    // レコメンドカードが3つ表示されていることを確認\n    const recommendCards = screen.getAllByRole('button', { name: /詳細を見る/ });\n    expect(recommendCards).toHaveLength(3);\n    \n    // 各カードのタイトルが表示されていることを確認\n    expect(screen.getByText('英語学習の基本ガイド')).toBeInTheDocument();\n    expect(screen.getByText('文法マスターへの道')).toBeInTheDocument();\n    expect(screen.getByText('効果的な単語学習法')).toBeInTheDocument();\n  });\n\n  it('レコメンドカードのクリックが正しく動作すること', async () => {\n    render(<DashboardPage />);\n    \n    // レコメンドセクションが表示されるまで待機\n    await waitFor(() => {\n      expect(screen.getByText('今日のレコメンド')).toBeInTheDocument();\n    });\n    \n    // 「詳細を見る」ボタンをクリック\n    const detailButtons = screen.getAllByText('詳細を見る →');\n    fireEvent.click(detailButtons[0]);\n    \n    // クリック後の動作は現状ではまだ実装されていないため\n    // ここでは単純にボタンが存在するかのみを確認\n    expect(detailButtons[0]).toBeInTheDocument();\n  });\n\n  it('タブ切り替えでレコメンドセクションが表示・非表示になること', async () => {\n    render(<DashboardPage />);\n    \n    // 初期状態では「概要」タブがアクティブで、レコメンドセクションが表示される\n    await waitFor(() => {\n      expect(screen.getByText('今日のレコメンド')).toBeInTheDocument();\n    });\n    \n    // 「教材」タブに切り替え\n    const materialsTab = screen.getByText('教材');\n    fireEvent.click(materialsTab);\n    \n    // レコメンドセクションが非表示になり、教材のコンテンツが表示されることを確認\n    expect(screen.queryByText('今日のレコメンド')).not.toBeInTheDocument();\n    expect(screen.getByText('あなたの教材')).toBeInTheDocument();\n    \n    // 「概要」タブに戻す\n    const overviewTab = screen.getByText('概要');\n    fireEvent.click(overviewTab);\n    \n    // レコメンドセクションが再表示されることを確認\n    await waitFor(() => {\n      expect(screen.getByText('今日のレコメンド')).toBeInTheDocument();\n    });\n  });\n\n  it('ActivitySummaryとともに正しく表示されていること', async () => {\n    render(<DashboardPage />);\n    \n    // ActivitySummaryとレコメンドセクションの両方が表示されることを確認\n    await waitFor(() => {\n      expect(screen.getByText('作成した教材')).toBeInTheDocument();\n      expect(screen.getByText('獲得ポイント')).toBeInTheDocument();\n      expect(screen.getByText('閲覧した教材')).toBeInTheDocument();\n      expect(screen.getByText('今日のレコメンド')).toBeInTheDocument();\n    });\n    \n    // ActivitySummaryのデータとレコメンドが同時に表示されている\n    expect(screen.getByText('12')).toBeInTheDocument(); // 作成教材数\n    expect(screen.getByText('英語学習の基本ガイド')).toBeInTheDocument(); // レコメンド\n  });\n}); "],"names":["jest","mock","useAuth","fn","global","fetch","describe","mockUser","id","email","beforeEach","clearAllMocks","mockReturnValue","user","loading","mockImplementation","url","includes","Promise","resolve","ok","json","createdMaterials","totalPoints","viewedMaterials","createdMaterialsChange","totalPointsChange","viewedMaterialsChange","activityCounts","CREATE_CONTENT","PROVIDE_FEEDBACK","CONSUME_CONTENT","RECEIVE_FEEDBACK","SHARE_RESOURCE","ASK_QUESTION","it","render","DashboardPage","waitFor","expect","screen","getByText","toBeInTheDocument","recommendCards","getAllByRole","name","toHaveLength","detailButtons","getAllByText","fireEvent","click","materialsTab","queryByText","not","overviewTab"],"mappings":"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"}