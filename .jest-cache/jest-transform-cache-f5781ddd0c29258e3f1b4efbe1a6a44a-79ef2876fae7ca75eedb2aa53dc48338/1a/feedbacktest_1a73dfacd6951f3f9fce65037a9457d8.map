{"version":3,"sources":["/Users/master/Local Sites/testcursor/src/utils/__tests__/feedback.test.ts"],"sourcesContent":["import { FeedbackService } from '../feedback';\nimport supabase from '@/lib/supabase';\n\n// モックの設定\njest.mock('@/lib/supabase', () => {\n  const mockSupabase = {\n    from: jest.fn().mockReturnThis(),\n    select: jest.fn().mockReturnThis(),\n    eq: jest.fn().mockReturnThis(),\n    order: jest.fn().mockReturnThis(),\n    insert: jest.fn().mockReturnThis(),\n    single: jest.fn(),\n    limit: jest.fn().mockReturnThis(),\n  };\n  return mockSupabase;\n});\n\ndescribe('FeedbackService', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('submitFeedback', () => {\n    it('フィードバックを正常に送信できる', async () => {\n      // モックの戻り値を設定\n      const mockInsertResponse = {\n        data: {\n          id: 'feedback-123',\n          materialId: 'material-456',\n          userId: 'user-789',\n          rating: 5,\n          comment: 'とても役立つ内容でした！',\n          createdAt: new Date().toISOString()\n        },\n        error: null\n      };\n      \n      (supabase.insert as jest.Mock).mockResolvedValue(mockInsertResponse);\n\n      const feedbackData = {\n        materialId: 'material-456',\n        userId: 'user-789',\n        rating: 5,\n        comment: 'とても役立つ内容でした！'\n      };\n\n      const result = await FeedbackService.submitFeedback(feedbackData);\n\n      expect(result.success).toBe(true);\n      expect(result.data).toHaveProperty('id', 'feedback-123');\n      expect(supabase.from).toHaveBeenCalledWith('feedback');\n      expect(supabase.insert).toHaveBeenCalledWith({\n        ...feedbackData,\n        createdAt: expect.any(String)\n      });\n    });\n\n    it('エラー発生時は適切なエラーメッセージを返す', async () => {\n      // エラーを返すようにモックを設定\n      const mockErrorResponse = {\n        data: null,\n        error: { message: 'データベース接続エラー' }\n      };\n      \n      (supabase.insert as jest.Mock).mockResolvedValue(mockErrorResponse);\n\n      const feedbackData = {\n        materialId: 'material-456',\n        userId: 'user-789',\n        rating: 5,\n        comment: 'とても役立つ内容でした！'\n      };\n\n      const result = await FeedbackService.submitFeedback(feedbackData);\n\n      expect(result.success).toBe(false);\n      expect(result.error).toBe('データベース接続エラー');\n    });\n  });\n\n  describe('getFeedbackForMaterial', () => {\n    it('教材に対するフィードバック一覧を取得できる', async () => {\n      // モックの戻り値を設定\n      const mockOrderResponse = {\n        data: [\n          {\n            id: 'feedback-123',\n            materialId: 'material-456',\n            userId: 'user-789',\n            users: { username: 'テストユーザー1' },\n            rating: 5,\n            comment: 'とても役立つ内容でした！',\n            createdAt: new Date().toISOString()\n          },\n          {\n            id: 'feedback-124',\n            materialId: 'material-456',\n            userId: 'user-790',\n            users: { username: 'テストユーザー2' },\n            rating: 4,\n            comment: '参考になりました',\n            createdAt: new Date().toISOString()\n          }\n        ],\n        error: null\n      };\n      \n      (supabase.order as jest.Mock).mockResolvedValue(mockOrderResponse);\n\n      const materialId = 'material-456';\n      const result = await FeedbackService.getFeedbackForMaterial(materialId);\n\n      expect(result.success).toBe(true);\n      expect(result.data).toHaveLength(2);\n      expect(result.data?.[0]).toHaveProperty('id', 'feedback-123');\n      expect(supabase.from).toHaveBeenCalledWith('feedback');\n      expect(supabase.select).toHaveBeenCalled();\n      expect(supabase.eq).toHaveBeenCalledWith('materialId', materialId);\n      expect(supabase.order).toHaveBeenCalledWith('createdAt', { ascending: false });\n    });\n\n    it('エラー発生時は適切なエラーメッセージを返す', async () => {\n      // エラーを返すようにモックを設定\n      const mockErrorResponse = {\n        data: null,\n        error: { message: 'データベース接続エラー' }\n      };\n      \n      (supabase.order as jest.Mock).mockResolvedValue(mockErrorResponse);\n\n      const materialId = 'material-456';\n      const result = await FeedbackService.getFeedbackForMaterial(materialId);\n\n      expect(result.success).toBe(false);\n      expect(result.error).toBe('データベース接続エラー');\n    });\n  });\n\n  describe('getUserFeedback', () => {\n    it('ユーザーが提供したフィードバック一覧を取得できる', async () => {\n      // モックの戻り値を設定\n      const mockOrderResponse = {\n        data: [\n          {\n            id: 'feedback-123',\n            materialId: 'material-456',\n            materials: { title: '初級英語文法' },\n            userId: 'user-789',\n            rating: 5,\n            comment: 'とても役立つ内容でした！',\n            createdAt: new Date().toISOString()\n          },\n          {\n            id: 'feedback-125',\n            materialId: 'material-457',\n            materials: { title: 'ビジネス英語講座' },\n            userId: 'user-789',\n            rating: 4,\n            comment: '実務で使える内容でした',\n            createdAt: new Date().toISOString()\n          }\n        ],\n        error: null\n      };\n      \n      (supabase.order as jest.Mock).mockResolvedValue(mockOrderResponse);\n\n      const userId = 'user-789';\n      const result = await FeedbackService.getUserFeedback(userId);\n\n      expect(result.success).toBe(true);\n      expect(result.data).toHaveLength(2);\n      expect(result.data?.[0]).toHaveProperty('materialTitle', '初級英語文法');\n      expect(supabase.from).toHaveBeenCalledWith('feedback');\n      expect(supabase.select).toHaveBeenCalled();\n      expect(supabase.eq).toHaveBeenCalledWith('userId', userId);\n      expect(supabase.order).toHaveBeenCalledWith('createdAt', { ascending: false });\n    });\n\n    it('エラー発生時は適切なエラーメッセージを返す', async () => {\n      // エラーを返すようにモックを設定\n      const mockErrorResponse = {\n        data: null,\n        error: { message: 'データベース接続エラー' }\n      };\n      \n      (supabase.order as jest.Mock).mockResolvedValue(mockErrorResponse);\n\n      const userId = 'user-789';\n      const result = await FeedbackService.getUserFeedback(userId);\n\n      expect(result.success).toBe(false);\n      expect(result.error).toBe('データベース接続エラー');\n    });\n  });\n\n  describe('getFeedbackStatistics', () => {\n    it('教材のフィードバック統計を取得できる', async () => {\n      // モックの戻り値を設定\n      const mockEqResponse = {\n        data: [\n          { rating: 5 },\n          { rating: 5 },\n          { rating: 4 },\n          { rating: 4 },\n          { rating: 3 }\n        ],\n        error: null\n      };\n      \n      (supabase.eq as jest.Mock).mockResolvedValue(mockEqResponse);\n\n      const materialId = 'material-456';\n      const result = await FeedbackService.getFeedbackStatistics(materialId);\n\n      expect(result.success).toBe(true);\n      expect(result.data).toHaveProperty('averageRating');\n      expect(result.data).toHaveProperty('totalCount');\n      expect(result.data).toHaveProperty('ratingDistribution');\n      expect(result.data?.ratingDistribution).toHaveLength(5);\n      expect(supabase.from).toHaveBeenCalledWith('feedback');\n    });\n\n    it('エラー発生時は適切なエラーメッセージを返す', async () => {\n      // エラーを返すようにモックを設定\n      const mockErrorResponse = {\n        data: null,\n        error: { message: 'データベース接続エラー' }\n      };\n      \n      (supabase.eq as jest.Mock).mockResolvedValue(mockErrorResponse);\n\n      const materialId = 'material-456';\n      const result = await FeedbackService.getFeedbackStatistics(materialId);\n\n      expect(result.success).toBe(false);\n      expect(result.error).toBe('データベース接続エラー');\n    });\n  });\n}); "],"names":["jest","mock","mockSupabase","from","fn","mockReturnThis","select","eq","order","insert","single","limit","describe","beforeEach","clearAllMocks","it","mockInsertResponse","data","id","materialId","userId","rating","comment","createdAt","Date","toISOString","error","supabase","mockResolvedValue","feedbackData","result","FeedbackService","submitFeedback","expect","success","toBe","toHaveProperty","toHaveBeenCalledWith","any","String","mockErrorResponse","message","mockOrderResponse","users","username","getFeedbackForMaterial","toHaveLength","toHaveBeenCalled","ascending","materials","title","getUserFeedback","mockEqResponse","getFeedbackStatistics","ratingDistribution"],"mappings":"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"}