{"version":3,"sources":["/Users/master/Local Sites/testcursor/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\n// 環境変数からSupabaseの設定を取得\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || 'https://example.supabase.co';\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.example';\n\n// URLの形式をチェック\nconst isValidUrl = (urlString: string): boolean => {\n  try {\n    new URL(urlString);\n    return true;\n  } catch (e) {\n    console.error('Invalid Supabase URL:', urlString);\n    return false;\n  }\n};\n\n// 型定義のためのデータベース型\nexport type Database = {\n  public: {\n    Tables: {\n      users: {\n        Row: {\n          id: string;\n          email: string;\n          created_at: string;\n          personality_type: 'giver' | 'matcher' | 'taker' | null;\n          giver_score: number;\n          points: number;\n        };\n        Insert: {\n          id: string;\n          email: string;\n          created_at?: string;\n          personality_type?: 'giver' | 'matcher' | 'taker' | null;\n          giver_score?: number;\n          points?: number;\n        };\n        Update: {\n          id?: string;\n          email?: string;\n          created_at?: string;\n          personality_type?: 'giver' | 'matcher' | 'taker' | null;\n          giver_score?: number;\n          points?: number;\n        };\n      };\n      profiles: {\n        Row: {\n          user_id: string;\n          display_name: string;\n          avatar_url: string | null;\n          bio: string | null;\n        };\n        Insert: {\n          user_id: string;\n          display_name: string;\n          avatar_url?: string | null;\n          bio?: string | null;\n        };\n        Update: {\n          user_id?: string;\n          display_name?: string;\n          avatar_url?: string | null;\n          bio?: string | null;\n        };\n      };\n      contents: {\n        Row: {\n          id: string;\n          user_id: string;\n          title: string;\n          content: string;\n          category: string;\n          tags: string[] | null;\n          created_at: string;\n          updated_at: string;\n        };\n        Insert: {\n          id?: string;\n          user_id: string;\n          title: string;\n          content: string;\n          category: string;\n          tags?: string[] | null;\n          created_at?: string;\n          updated_at?: string;\n        };\n        Update: {\n          id?: string;\n          user_id?: string;\n          title?: string;\n          content?: string;\n          category?: string;\n          tags?: string[] | null;\n          created_at?: string;\n          updated_at?: string;\n        };\n      };\n      feedback: {\n        Row: {\n          id: string;\n          content_id: string;\n          user_id: string;\n          comment: string | null;\n          rating: number | null;\n          is_helpful: boolean;\n          created_at: string;\n        };\n        Insert: {\n          id?: string;\n          content_id: string;\n          user_id: string;\n          comment?: string | null;\n          rating?: number | null;\n          is_helpful?: boolean;\n          created_at?: string;\n        };\n        Update: {\n          id?: string;\n          content_id?: string;\n          user_id?: string;\n          comment?: string | null;\n          rating?: number | null;\n          is_helpful?: boolean;\n          created_at?: string;\n        };\n      };\n      activities: {\n        Row: {\n          id: string;\n          user_id: string;\n          activity_type: string;\n          reference_id: string | null;\n          points: number;\n          created_at: string;\n        };\n        Insert: {\n          id?: string;\n          user_id: string;\n          activity_type: string;\n          reference_id?: string | null;\n          points: number;\n          created_at?: string;\n        };\n        Update: {\n          id?: string;\n          user_id?: string;\n          activity_type?: string;\n          reference_id?: string | null;\n          points?: number;\n          created_at?: string;\n        };\n      };\n    };\n  };\n};\n\n// ブラウザとサーバーの両方で使用できるクライアントを作成\nconst validatedUrl = isValidUrl(supabaseUrl) ? supabaseUrl : 'https://example.supabase.co';\nconst supabase = createClient<Database>(validatedUrl, supabaseAnonKey);\n\nexport default supabase;\n\n// サーバーサイド専用のクライアント作成関数\nexport const createServerSupabaseClient = () => {\n  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || 'https://example.supabase.co';\n  const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY || '';\n  \n  const validatedUrl = isValidUrl(supabaseUrl) ? supabaseUrl : 'https://example.supabase.co';\n  return createClient<Database>(validatedUrl, supabaseServiceKey);\n}; "],"names":["createServerSupabaseClient","supabaseUrl","process","env","NEXT_PUBLIC_SUPABASE_URL","supabaseAnonKey","NEXT_PUBLIC_SUPABASE_ANON_KEY","isValidUrl","urlString","URL","e","console","error","validatedUrl","supabase","createClient","supabaseServiceKey","SUPABASE_SERVICE_ROLE_KEY"],"mappings":";;;;;;;;;;;IAqKaA,0BAA0B;eAA1BA;;IAHb,OAAwB;eAAxB;;;4BAlK6B;AAE7B,uBAAuB;AACvB,MAAMC,cAAcC,QAAQC,GAAG,CAACC,wBAAwB,IAAI;AAC5D,MAAMC,kBAAkBH,QAAQC,GAAG,CAACG,6BAA6B,IAAI;AAErE,cAAc;AACd,MAAMC,aAAa,CAACC;IAClB,IAAI;QACF,IAAIC,IAAID;QACR,OAAO;IACT,EAAE,OAAOE,GAAG;QACVC,QAAQC,KAAK,CAAC,yBAAyBJ;QACvC,OAAO;IACT;AACF;AA+IA,8BAA8B;AAC9B,MAAMK,eAAeN,WAAWN,eAAeA,cAAc;AAC7D,MAAMa,WAAWC,IAAAA,wBAAY,EAAWF,cAAcR;MAEtD,WAAeS;AAGR,MAAMd,6BAA6B;IACxC,MAAMC,cAAcC,QAAQC,GAAG,CAACC,wBAAwB,IAAI;IAC5D,MAAMY,qBAAqBd,QAAQC,GAAG,CAACc,yBAAyB,IAAI;IAEpE,MAAMJ,eAAeN,WAAWN,eAAeA,cAAc;IAC7D,OAAOc,IAAAA,wBAAY,EAAWF,cAAcG;AAC9C"}