{"version":3,"sources":["/Users/master/Local Sites/testcursor/src/utils/__tests__/personality.test.ts"],"sourcesContent":["import { getPersonalityDescription } from '../personality';\nimport { PersonalityType } from '@/types/quiz';\n\ndescribe('Personality utilities', () => {\n  describe('getPersonalityDescription', () => {\n    test('giverタイプの説明を正しく取得する', () => {\n      const result = getPersonalityDescription('giver');\n      \n      // 基本構造の検証\n      expect(result).toHaveProperty('title');\n      expect(result).toHaveProperty('description');\n      expect(result).toHaveProperty('strengths');\n      expect(result).toHaveProperty('weaknesses');\n      expect(result).toHaveProperty('learningAdvice');\n      \n      // giverタイプ固有の内容を検証\n      expect(result.title).toBe('共感型学習者');\n      expect(result.strengths).toHaveLength(4);\n      expect(result.weaknesses).toHaveLength(3);\n      expect(result.learningAdvice.tips).toHaveLength(4);\n      expect(result.learningAdvice.tools).toHaveLength(4);\n    });\n    \n    test('takerタイプの説明を正しく取得する', () => {\n      const result = getPersonalityDescription('taker');\n      \n      // 基本構造の検証\n      expect(result).toHaveProperty('title');\n      expect(result).toHaveProperty('description');\n      expect(result).toHaveProperty('strengths');\n      expect(result).toHaveProperty('weaknesses');\n      expect(result).toHaveProperty('learningAdvice');\n      \n      // takerタイプ固有の内容を検証\n      expect(result.title).toBe('没入型学習者');\n      expect(result.strengths).toHaveLength(4);\n      expect(result.weaknesses).toHaveLength(3);\n      expect(result.learningAdvice.tips).toHaveLength(4);\n      expect(result.learningAdvice.tools).toHaveLength(4);\n    });\n    \n    test('matcherタイプの説明を正しく取得する', () => {\n      const result = getPersonalityDescription('matcher');\n      \n      // 基本構造の検証\n      expect(result).toHaveProperty('title');\n      expect(result).toHaveProperty('description');\n      expect(result).toHaveProperty('strengths');\n      expect(result).toHaveProperty('weaknesses');\n      expect(result).toHaveProperty('learningAdvice');\n      \n      // matcherタイプ固有の内容を検証\n      expect(result.title).toBe('適応型学習者');\n      expect(result.strengths).toHaveLength(4);\n      expect(result.weaknesses).toHaveLength(3);\n      expect(result.learningAdvice.tips).toHaveLength(4);\n      expect(result.learningAdvice.tools).toHaveLength(4);\n    });\n    \n    test('各タイプの説明は一意である', () => {\n      const giverDesc = getPersonalityDescription('giver');\n      const takerDesc = getPersonalityDescription('taker');\n      const matcherDesc = getPersonalityDescription('matcher');\n      \n      // タイトルが重複していないことを確認\n      expect(giverDesc.title).not.toBe(takerDesc.title);\n      expect(giverDesc.title).not.toBe(matcherDesc.title);\n      expect(takerDesc.title).not.toBe(matcherDesc.title);\n      \n      // 説明が重複していないことを確認\n      expect(giverDesc.description).not.toBe(takerDesc.description);\n      expect(giverDesc.description).not.toBe(matcherDesc.description);\n      expect(takerDesc.description).not.toBe(matcherDesc.description);\n    });\n  });\n}); "],"names":["describe","test","result","getPersonalityDescription","expect","toHaveProperty","title","toBe","strengths","toHaveLength","weaknesses","learningAdvice","tips","tools","giverDesc","takerDesc","matcherDesc","not","description"],"mappings":";;;;6BAA0C;AAG1CA,SAAS,yBAAyB;IAChCA,SAAS,6BAA6B;QACpCC,KAAK,uBAAuB;YAC1B,MAAMC,SAASC,IAAAA,sCAAyB,EAAC;YAEzC,UAAU;YACVC,OAAOF,QAAQG,cAAc,CAAC;YAC9BD,OAAOF,QAAQG,cAAc,CAAC;YAC9BD,OAAOF,QAAQG,cAAc,CAAC;YAC9BD,OAAOF,QAAQG,cAAc,CAAC;YAC9BD,OAAOF,QAAQG,cAAc,CAAC;YAE9B,mBAAmB;YACnBD,OAAOF,OAAOI,KAAK,EAAEC,IAAI,CAAC;YAC1BH,OAAOF,OAAOM,SAAS,EAAEC,YAAY,CAAC;YACtCL,OAAOF,OAAOQ,UAAU,EAAED,YAAY,CAAC;YACvCL,OAAOF,OAAOS,cAAc,CAACC,IAAI,EAAEH,YAAY,CAAC;YAChDL,OAAOF,OAAOS,cAAc,CAACE,KAAK,EAAEJ,YAAY,CAAC;QACnD;QAEAR,KAAK,uBAAuB;YAC1B,MAAMC,SAASC,IAAAA,sCAAyB,EAAC;YAEzC,UAAU;YACVC,OAAOF,QAAQG,cAAc,CAAC;YAC9BD,OAAOF,QAAQG,cAAc,CAAC;YAC9BD,OAAOF,QAAQG,cAAc,CAAC;YAC9BD,OAAOF,QAAQG,cAAc,CAAC;YAC9BD,OAAOF,QAAQG,cAAc,CAAC;YAE9B,mBAAmB;YACnBD,OAAOF,OAAOI,KAAK,EAAEC,IAAI,CAAC;YAC1BH,OAAOF,OAAOM,SAAS,EAAEC,YAAY,CAAC;YACtCL,OAAOF,OAAOQ,UAAU,EAAED,YAAY,CAAC;YACvCL,OAAOF,OAAOS,cAAc,CAACC,IAAI,EAAEH,YAAY,CAAC;YAChDL,OAAOF,OAAOS,cAAc,CAACE,KAAK,EAAEJ,YAAY,CAAC;QACnD;QAEAR,KAAK,yBAAyB;YAC5B,MAAMC,SAASC,IAAAA,sCAAyB,EAAC;YAEzC,UAAU;YACVC,OAAOF,QAAQG,cAAc,CAAC;YAC9BD,OAAOF,QAAQG,cAAc,CAAC;YAC9BD,OAAOF,QAAQG,cAAc,CAAC;YAC9BD,OAAOF,QAAQG,cAAc,CAAC;YAC9BD,OAAOF,QAAQG,cAAc,CAAC;YAE9B,qBAAqB;YACrBD,OAAOF,OAAOI,KAAK,EAAEC,IAAI,CAAC;YAC1BH,OAAOF,OAAOM,SAAS,EAAEC,YAAY,CAAC;YACtCL,OAAOF,OAAOQ,UAAU,EAAED,YAAY,CAAC;YACvCL,OAAOF,OAAOS,cAAc,CAACC,IAAI,EAAEH,YAAY,CAAC;YAChDL,OAAOF,OAAOS,cAAc,CAACE,KAAK,EAAEJ,YAAY,CAAC;QACnD;QAEAR,KAAK,iBAAiB;YACpB,MAAMa,YAAYX,IAAAA,sCAAyB,EAAC;YAC5C,MAAMY,YAAYZ,IAAAA,sCAAyB,EAAC;YAC5C,MAAMa,cAAcb,IAAAA,sCAAyB,EAAC;YAE9C,oBAAoB;YACpBC,OAAOU,UAAUR,KAAK,EAAEW,GAAG,CAACV,IAAI,CAACQ,UAAUT,KAAK;YAChDF,OAAOU,UAAUR,KAAK,EAAEW,GAAG,CAACV,IAAI,CAACS,YAAYV,KAAK;YAClDF,OAAOW,UAAUT,KAAK,EAAEW,GAAG,CAACV,IAAI,CAACS,YAAYV,KAAK;YAElD,kBAAkB;YAClBF,OAAOU,UAAUI,WAAW,EAAED,GAAG,CAACV,IAAI,CAACQ,UAAUG,WAAW;YAC5Dd,OAAOU,UAAUI,WAAW,EAAED,GAAG,CAACV,IAAI,CAACS,YAAYE,WAAW;YAC9Dd,OAAOW,UAAUG,WAAW,EAAED,GAAG,CAACV,IAAI,CAACS,YAAYE,WAAW;QAChE;IACF;AACF"}