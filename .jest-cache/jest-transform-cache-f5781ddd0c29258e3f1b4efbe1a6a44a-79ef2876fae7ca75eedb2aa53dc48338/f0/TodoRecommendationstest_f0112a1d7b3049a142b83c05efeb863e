756fda30fbd5df3cfeb33fa98501ce7e
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _react1 = require("@testing-library/react");
require("@testing-library/jest-dom");
const _TodoRecommendations = /*#__PURE__*/ _interop_require_default(require("../TodoRecommendations"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
// モックのタスクデータ
const mockTasks = [
    {
        id: "1",
        title: "テストタスク1",
        description: "テスト説明1",
        points: 5,
        completed: false,
        createdAt: new Date(),
        type: "custom"
    },
    {
        id: "2",
        title: "テストタスク2",
        description: "テスト説明2",
        points: 10,
        completed: true,
        createdAt: new Date(),
        type: "custom"
    }
];
describe("TodoRecommendations", ()=>{
    // 基本的なレンダリングのテスト
    test("コンポーネントが正しくレンダリングされる", ()=>{
        const mockAddTask = jest.fn();
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_TodoRecommendations.default, {
            currentTasks: mockTasks,
            onAddRecommendedTask: mockAddTask
        }));
        // コンポーネントのタイトルが表示されていることを確認
        expect(_react1.screen.getByText("おすすめタスク")).toBeInTheDocument();
    });
    // 追加ボタンクリック時の動作テスト
    test("推奨タスク追加時に正しいプロパティが設定される", ()=>{
        const mockAddTask = jest.fn();
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_TodoRecommendations.default, {
            currentTasks: mockTasks,
            onAddRecommendedTask: mockAddTask
        }));
        // 追加ボタンをクリック
        const addButtons = _react1.screen.getAllByText("追加");
        _react1.fireEvent.click(addButtons[0]);
        // onAddRecommendedTaskが呼ばれたことを確認
        expect(mockAddTask).toHaveBeenCalled();
        // 呼ばれた引数をテスト
        const calledWithArg = mockAddTask.mock.calls[0][0];
        // 今回追加した「type」と「createdAt」プロパティが存在し、正しい値が設定されていることを確認
        expect(calledWithArg.type).toBe("suggested");
        expect(calledWithArg.createdAt).toBeInstanceOf(Date);
    });
    // 異なるタスク状況でのフィルタリングテスト
    test("タスクの状況に応じて適切な推奨が表示される", ()=>{
        const mockAddTask = jest.fn();
        // タスクが少ない場合
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_TodoRecommendations.default, {
            currentTasks: [],
            onAddRecommendedTask: mockAddTask
        }));
        // 組織化タイプの推奨タスクが表示されていることを確認
        expect(_react1.screen.getByText("今日のタスク優先順位付け")).toBeInTheDocument();
        // クリーンアップ
        _react1.screen.unmount();
        // 未完了タスクが多い場合
        const manyIncompleteTasks = Array(6).fill(null).map((_, i)=>({
                id: `inc-${i}`,
                title: `未完了タスク${i}`,
                description: `説明${i}`,
                points: 5,
                completed: false,
                createdAt: new Date(),
                type: "custom"
            }));
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_TodoRecommendations.default, {
            currentTasks: manyIncompleteTasks,
            onAddRecommendedTask: mockAddTask
        }));
        // 時間管理タイプの推奨タスクが表示されていることを確認
        expect(_react1.screen.getByText("ポモドーロテクニックを試す")).toBeInTheDocument();
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXN0ZXIvTG9jYWwgU2l0ZXMvdGVzdGN1cnNvci9zcmMvY29tcG9uZW50cy9mZWF0dXJlcy90b2RvL19fdGVzdHNfXy9Ub2RvUmVjb21tZW5kYXRpb25zLnRlc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyByZW5kZXIsIHNjcmVlbiwgZmlyZUV2ZW50IH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdCc7XG5pbXBvcnQgJ0B0ZXN0aW5nLWxpYnJhcnkvamVzdC1kb20nO1xuaW1wb3J0IFRvZG9SZWNvbW1lbmRhdGlvbnMgZnJvbSAnLi4vVG9kb1JlY29tbWVuZGF0aW9ucyc7XG5pbXBvcnQgeyBUYXNrIH0gZnJvbSAnLi4vLi4vLi4vLi4vaG9va3MvdXNlVG9kb1N0b3JhZ2UnO1xuXG4vLyDjg6Ljg4Pjgq/jga7jgr/jgrnjgq/jg4fjg7zjgr9cbmNvbnN0IG1vY2tUYXNrczogVGFza1tdID0gW1xuICB7XG4gICAgaWQ6ICcxJyxcbiAgICB0aXRsZTogJ+ODhuOCueODiOOCv+OCueOCrzEnLFxuICAgIGRlc2NyaXB0aW9uOiAn44OG44K544OI6Kqs5piOMScsXG4gICAgcG9pbnRzOiA1LFxuICAgIGNvbXBsZXRlZDogZmFsc2UsXG4gICAgY3JlYXRlZEF0OiBuZXcgRGF0ZSgpLFxuICAgIHR5cGU6ICdjdXN0b20nXG4gIH0sXG4gIHtcbiAgICBpZDogJzInLFxuICAgIHRpdGxlOiAn44OG44K544OI44K/44K544KvMicsXG4gICAgZGVzY3JpcHRpb246ICfjg4bjgrnjg4joqqzmmI4yJyxcbiAgICBwb2ludHM6IDEwLFxuICAgIGNvbXBsZXRlZDogdHJ1ZSxcbiAgICBjcmVhdGVkQXQ6IG5ldyBEYXRlKCksXG4gICAgdHlwZTogJ2N1c3RvbSdcbiAgfVxuXTtcblxuZGVzY3JpYmUoJ1RvZG9SZWNvbW1lbmRhdGlvbnMnLCAoKSA9PiB7XG4gIC8vIOWfuuacrOeahOOBquODrOODs+ODgOODquODs+OCsOOBruODhuOCueODiFxuICB0ZXN0KCfjgrPjg7Pjg53jg7zjg43jg7Pjg4jjgYzmraPjgZfjgY/jg6zjg7Pjg4Djg6rjg7PjgrDjgZXjgozjgosnLCAoKSA9PiB7XG4gICAgY29uc3QgbW9ja0FkZFRhc2sgPSBqZXN0LmZuKCk7XG4gICAgcmVuZGVyKFxuICAgICAgPFRvZG9SZWNvbW1lbmRhdGlvbnMgXG4gICAgICAgIGN1cnJlbnRUYXNrcz17bW9ja1Rhc2tzfSBcbiAgICAgICAgb25BZGRSZWNvbW1lbmRlZFRhc2s9e21vY2tBZGRUYXNrfSBcbiAgICAgIC8+XG4gICAgKTtcbiAgICBcbiAgICAvLyDjgrPjg7Pjg53jg7zjg43jg7Pjg4jjga7jgr/jgqTjg4jjg6vjgYzooajnpLrjgZXjgozjgabjgYTjgovjgZPjgajjgpLnorroqo1cbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgn44GK44GZ44GZ44KB44K/44K544KvJykpLnRvQmVJblRoZURvY3VtZW50KCk7XG4gIH0pO1xuXG4gIC8vIOi/veWKoOODnOOCv+ODs+OCr+ODquODg+OCr+aZguOBruWLleS9nOODhuOCueODiFxuICB0ZXN0KCfmjqjlpajjgr/jgrnjgq/ov73liqDmmYLjgavmraPjgZfjgYTjg5fjg63jg5Hjg4bjgqPjgYzoqK3lrprjgZXjgozjgosnLCAoKSA9PiB7XG4gICAgY29uc3QgbW9ja0FkZFRhc2sgPSBqZXN0LmZuKCk7XG4gICAgcmVuZGVyKFxuICAgICAgPFRvZG9SZWNvbW1lbmRhdGlvbnMgXG4gICAgICAgIGN1cnJlbnRUYXNrcz17bW9ja1Rhc2tzfSBcbiAgICAgICAgb25BZGRSZWNvbW1lbmRlZFRhc2s9e21vY2tBZGRUYXNrfSBcbiAgICAgIC8+XG4gICAgKTtcbiAgICBcbiAgICAvLyDov73liqDjg5zjgr/jg7PjgpLjgq/jg6rjg4Pjgq9cbiAgICBjb25zdCBhZGRCdXR0b25zID0gc2NyZWVuLmdldEFsbEJ5VGV4dCgn6L+95YqgJyk7XG4gICAgZmlyZUV2ZW50LmNsaWNrKGFkZEJ1dHRvbnNbMF0pO1xuICAgIFxuICAgIC8vIG9uQWRkUmVjb21tZW5kZWRUYXNr44GM5ZG844Gw44KM44Gf44GT44Go44KS56K66KqNXG4gICAgZXhwZWN0KG1vY2tBZGRUYXNrKS50b0hhdmVCZWVuQ2FsbGVkKCk7XG4gICAgXG4gICAgLy8g5ZG844Gw44KM44Gf5byV5pWw44KS44OG44K544OIXG4gICAgY29uc3QgY2FsbGVkV2l0aEFyZyA9IG1vY2tBZGRUYXNrLm1vY2suY2FsbHNbMF1bMF07XG4gICAgXG4gICAgLy8g5LuK5Zue6L+95Yqg44GX44Gf44CMdHlwZeOAjeOBqOOAjGNyZWF0ZWRBdOOAjeODl+ODreODkeODhuOCo+OBjOWtmOWcqOOBl+OAgeato+OBl+OBhOWApOOBjOioreWumuOBleOCjOOBpuOBhOOCi+OBk+OBqOOCkueiuuiqjVxuICAgIGV4cGVjdChjYWxsZWRXaXRoQXJnLnR5cGUpLnRvQmUoJ3N1Z2dlc3RlZCcpO1xuICAgIGV4cGVjdChjYWxsZWRXaXRoQXJnLmNyZWF0ZWRBdCkudG9CZUluc3RhbmNlT2YoRGF0ZSk7XG4gIH0pO1xuXG4gIC8vIOeVsOOBquOCi+OCv+OCueOCr+eKtuazgeOBp+OBruODleOCo+ODq+OCv+ODquODs+OCsOODhuOCueODiFxuICB0ZXN0KCfjgr/jgrnjgq/jga7nirbms4Hjgavlv5zjgZjjgabpganliIfjgarmjqjlpajjgYzooajnpLrjgZXjgozjgosnLCAoKSA9PiB7XG4gICAgY29uc3QgbW9ja0FkZFRhc2sgPSBqZXN0LmZuKCk7XG4gICAgXG4gICAgLy8g44K/44K544Kv44GM5bCR44Gq44GE5aC05ZCIXG4gICAgcmVuZGVyKFxuICAgICAgPFRvZG9SZWNvbW1lbmRhdGlvbnMgXG4gICAgICAgIGN1cnJlbnRUYXNrcz17W119IFxuICAgICAgICBvbkFkZFJlY29tbWVuZGVkVGFzaz17bW9ja0FkZFRhc2t9IFxuICAgICAgLz5cbiAgICApO1xuICAgIFxuICAgIC8vIOe1hOe5lOWMluOCv+OCpOODl+OBruaOqOWlqOOCv+OCueOCr+OBjOihqOekuuOBleOCjOOBpuOBhOOCi+OBk+OBqOOCkueiuuiqjVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCfku4rml6Xjga7jgr/jgrnjgq/lhKrlhYjpoIbkvY3ku5jjgZEnKSkudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgICBcbiAgICAvLyDjgq/jg6rjg7zjg7PjgqLjg4Pjg5dcbiAgICBzY3JlZW4udW5tb3VudCgpO1xuICAgIFxuICAgIC8vIOacquWujOS6huOCv+OCueOCr+OBjOWkmuOBhOWgtOWQiFxuICAgIGNvbnN0IG1hbnlJbmNvbXBsZXRlVGFza3MgPSBBcnJheSg2KS5maWxsKG51bGwpLm1hcCgoXywgaSkgPT4gKHtcbiAgICAgIGlkOiBgaW5jLSR7aX1gLFxuICAgICAgdGl0bGU6IGDmnKrlrozkuobjgr/jgrnjgq8ke2l9YCxcbiAgICAgIGRlc2NyaXB0aW9uOiBg6Kqs5piOJHtpfWAsXG4gICAgICBwb2ludHM6IDUsXG4gICAgICBjb21wbGV0ZWQ6IGZhbHNlLFxuICAgICAgY3JlYXRlZEF0OiBuZXcgRGF0ZSgpLFxuICAgICAgdHlwZTogJ2N1c3RvbScgYXMgY29uc3RcbiAgICB9KSk7XG4gICAgXG4gICAgcmVuZGVyKFxuICAgICAgPFRvZG9SZWNvbW1lbmRhdGlvbnMgXG4gICAgICAgIGN1cnJlbnRUYXNrcz17bWFueUluY29tcGxldGVUYXNrc30gXG4gICAgICAgIG9uQWRkUmVjb21tZW5kZWRUYXNrPXttb2NrQWRkVGFza30gXG4gICAgICAvPlxuICAgICk7XG4gICAgXG4gICAgLy8g5pmC6ZaT566h55CG44K/44Kk44OX44Gu5o6o5aWo44K/44K544Kv44GM6KGo56S644GV44KM44Gm44GE44KL44GT44Go44KS56K66KqNXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ+ODneODouODieODvOODreODhuOCr+ODi+ODg+OCr+OCkuippuOBmScpKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICB9KTtcbn0pOyAiXSwibmFtZXMiOlsibW9ja1Rhc2tzIiwiaWQiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwicG9pbnRzIiwiY29tcGxldGVkIiwiY3JlYXRlZEF0IiwiRGF0ZSIsInR5cGUiLCJkZXNjcmliZSIsInRlc3QiLCJtb2NrQWRkVGFzayIsImplc3QiLCJmbiIsInJlbmRlciIsIlRvZG9SZWNvbW1lbmRhdGlvbnMiLCJjdXJyZW50VGFza3MiLCJvbkFkZFJlY29tbWVuZGVkVGFzayIsImV4cGVjdCIsInNjcmVlbiIsImdldEJ5VGV4dCIsInRvQmVJblRoZURvY3VtZW50IiwiYWRkQnV0dG9ucyIsImdldEFsbEJ5VGV4dCIsImZpcmVFdmVudCIsImNsaWNrIiwidG9IYXZlQmVlbkNhbGxlZCIsImNhbGxlZFdpdGhBcmciLCJtb2NrIiwiY2FsbHMiLCJ0b0JlIiwidG9CZUluc3RhbmNlT2YiLCJ1bm1vdW50IiwibWFueUluY29tcGxldGVUYXNrcyIsIkFycmF5IiwiZmlsbCIsIm1hcCIsIl8iLCJpIl0sIm1hcHBpbmdzIjoiOzs7Ozs4REFBa0I7d0JBQ3dCO1FBQ25DOzRFQUN5Qjs7Ozs7O0FBR2hDLGFBQWE7QUFDYixNQUFNQSxZQUFvQjtJQUN4QjtRQUNFQyxJQUFJO1FBQ0pDLE9BQU87UUFDUEMsYUFBYTtRQUNiQyxRQUFRO1FBQ1JDLFdBQVc7UUFDWEMsV0FBVyxJQUFJQztRQUNmQyxNQUFNO0lBQ1I7SUFDQTtRQUNFUCxJQUFJO1FBQ0pDLE9BQU87UUFDUEMsYUFBYTtRQUNiQyxRQUFRO1FBQ1JDLFdBQVc7UUFDWEMsV0FBVyxJQUFJQztRQUNmQyxNQUFNO0lBQ1I7Q0FDRDtBQUVEQyxTQUFTLHVCQUF1QjtJQUM5QixpQkFBaUI7SUFDakJDLEtBQUssd0JBQXdCO1FBQzNCLE1BQU1DLGNBQWNDLEtBQUtDLEVBQUU7UUFDM0JDLElBQUFBLGNBQU0sZ0JBQ0oscUJBQUNDLDRCQUFtQjtZQUNsQkMsY0FBY2hCO1lBQ2RpQixzQkFBc0JOOztRQUkxQiw0QkFBNEI7UUFDNUJPLE9BQU9DLGNBQU0sQ0FBQ0MsU0FBUyxDQUFDLFlBQVlDLGlCQUFpQjtJQUN2RDtJQUVBLG1CQUFtQjtJQUNuQlgsS0FBSywyQkFBMkI7UUFDOUIsTUFBTUMsY0FBY0MsS0FBS0MsRUFBRTtRQUMzQkMsSUFBQUEsY0FBTSxnQkFDSixxQkFBQ0MsNEJBQW1CO1lBQ2xCQyxjQUFjaEI7WUFDZGlCLHNCQUFzQk47O1FBSTFCLGFBQWE7UUFDYixNQUFNVyxhQUFhSCxjQUFNLENBQUNJLFlBQVksQ0FBQztRQUN2Q0MsaUJBQVMsQ0FBQ0MsS0FBSyxDQUFDSCxVQUFVLENBQUMsRUFBRTtRQUU3QixpQ0FBaUM7UUFDakNKLE9BQU9QLGFBQWFlLGdCQUFnQjtRQUVwQyxhQUFhO1FBQ2IsTUFBTUMsZ0JBQWdCaEIsWUFBWWlCLElBQUksQ0FBQ0MsS0FBSyxDQUFDLEVBQUUsQ0FBQyxFQUFFO1FBRWxELHNEQUFzRDtRQUN0RFgsT0FBT1MsY0FBY25CLElBQUksRUFBRXNCLElBQUksQ0FBQztRQUNoQ1osT0FBT1MsY0FBY3JCLFNBQVMsRUFBRXlCLGNBQWMsQ0FBQ3hCO0lBQ2pEO0lBRUEsdUJBQXVCO0lBQ3ZCRyxLQUFLLHlCQUF5QjtRQUM1QixNQUFNQyxjQUFjQyxLQUFLQyxFQUFFO1FBRTNCLFlBQVk7UUFDWkMsSUFBQUEsY0FBTSxnQkFDSixxQkFBQ0MsNEJBQW1CO1lBQ2xCQyxjQUFjLEVBQUU7WUFDaEJDLHNCQUFzQk47O1FBSTFCLDRCQUE0QjtRQUM1Qk8sT0FBT0MsY0FBTSxDQUFDQyxTQUFTLENBQUMsaUJBQWlCQyxpQkFBaUI7UUFFMUQsVUFBVTtRQUNWRixjQUFNLENBQUNhLE9BQU87UUFFZCxjQUFjO1FBQ2QsTUFBTUMsc0JBQXNCQyxNQUFNLEdBQUdDLElBQUksQ0FBQyxNQUFNQyxHQUFHLENBQUMsQ0FBQ0MsR0FBR0MsSUFBTyxDQUFBO2dCQUM3RHJDLElBQUksQ0FBQyxJQUFJLEVBQUVxQyxFQUFFLENBQUM7Z0JBQ2RwQyxPQUFPLENBQUMsTUFBTSxFQUFFb0MsRUFBRSxDQUFDO2dCQUNuQm5DLGFBQWEsQ0FBQyxFQUFFLEVBQUVtQyxFQUFFLENBQUM7Z0JBQ3JCbEMsUUFBUTtnQkFDUkMsV0FBVztnQkFDWEMsV0FBVyxJQUFJQztnQkFDZkMsTUFBTTtZQUNSLENBQUE7UUFFQU0sSUFBQUEsY0FBTSxnQkFDSixxQkFBQ0MsNEJBQW1CO1lBQ2xCQyxjQUFjaUI7WUFDZGhCLHNCQUFzQk47O1FBSTFCLDZCQUE2QjtRQUM3Qk8sT0FBT0MsY0FBTSxDQUFDQyxTQUFTLENBQUMsa0JBQWtCQyxpQkFBaUI7SUFDN0Q7QUFDRiJ9