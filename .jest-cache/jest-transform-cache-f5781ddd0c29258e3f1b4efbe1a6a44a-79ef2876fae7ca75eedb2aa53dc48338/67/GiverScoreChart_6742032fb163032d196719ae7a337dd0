d852c43f4dadfb2d82bd07077aff5576
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _recharts = require("recharts");
const _datefns = require("date-fns");
const _locale = require("date-fns/locale");
const _framermotion = require("framer-motion");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const GiverScoreChart = ({ data, height = 300 })=>{
    // サンプルデータ
    const sampleData = [
        {
            date: "2023-04-01",
            score: 0
        },
        {
            date: "2023-04-08",
            score: 10
        },
        {
            date: "2023-04-15",
            score: 15
        },
        {
            date: "2023-04-22",
            score: 20
        },
        {
            date: "2023-04-29",
            score: 25
        },
        {
            date: "2023-05-06",
            score: 40
        },
        {
            date: "2023-05-13",
            score: 50
        }
    ];
    // 実際のデータがない場合はサンプルデータを使用
    const chartData = data || sampleData;
    const formatDate = (dateStr)=>{
        try {
            const date = new Date(dateStr);
            return (0, _datefns.format)(date, "MM/dd", {
                locale: _locale.ja
            });
        } catch (error) {
            console.error("日付の変換エラー:", error);
            return dateStr;
        }
    };
    // デザイン仕様書に合わせた色
    const mainColor = "#3B82F6"; // メインカラー
    const gridColor = "#E5E7EB"; // ボーダー色
    // アニメーション設定
    const containerVariants = {
        hidden: {
            opacity: 0,
            y: 20
        },
        visible: {
            opacity: 1,
            y: 0,
            transition: {
                duration: 0.5,
                ease: "easeOut"
            }
        }
    };
    const titleVariants = {
        hidden: {
            opacity: 0,
            x: -20
        },
        visible: {
            opacity: 1,
            x: 0,
            transition: {
                delay: 0.2,
                duration: 0.4
            }
        }
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_framermotion.motion.div, {
        className: "bg-white rounded-lg shadow-md p-4 sm:p-6",
        initial: "hidden",
        animate: "visible",
        variants: containerVariants,
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_framermotion.motion.h3, {
                className: "text-lg font-semibold text-gray-700 mb-4",
                variants: titleVariants,
                children: "ギバースコア推移"
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_framermotion.motion.div, {
                className: "mt-2 mb-1 text-sm text-gray-500",
                initial: {
                    opacity: 0
                },
                animate: {
                    opacity: 1
                },
                transition: {
                    delay: 0.4,
                    duration: 0.3
                },
                children: "過去の活動によるスコア変化を確認できます"
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_framermotion.motion.div, {
                initial: {
                    opacity: 0,
                    scale: 0.9
                },
                animate: {
                    opacity: 1,
                    scale: 1
                },
                transition: {
                    delay: 0.5,
                    duration: 0.5,
                    type: "spring",
                    stiffness: 100
                },
                style: {
                    width: "100%",
                    height: height
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.ResponsiveContainer, {
                    width: "100%",
                    height: "100%",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_recharts.LineChart, {
                        data: chartData,
                        margin: {
                            top: 5,
                            right: 10,
                            left: 0,
                            bottom: 5
                        },
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.CartesianGrid, {
                                strokeDasharray: "3 3",
                                stroke: gridColor
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.XAxis, {
                                dataKey: "date",
                                tickFormatter: formatDate,
                                tick: {
                                    fontSize: 12,
                                    fill: "#6B7280"
                                },
                                axisLine: {
                                    stroke: gridColor
                                },
                                tickLine: {
                                    stroke: gridColor
                                },
                                dy: 10
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.YAxis, {
                                tick: {
                                    fontSize: 12,
                                    fill: "#6B7280"
                                },
                                domain: [
                                    0,
                                    (dataMax)=>Math.ceil(dataMax * 1.1)
                                ],
                                axisLine: {
                                    stroke: gridColor
                                },
                                tickLine: {
                                    stroke: gridColor
                                },
                                width: 30
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.Tooltip, {
                                formatter: (value)=>[
                                        `${value} ポイント`,
                                        "ギバースコア"
                                    ],
                                labelFormatter: (label)=>`日付: ${formatDate(label.toString())}`,
                                contentStyle: {
                                    borderRadius: "0.375rem",
                                    border: "1px solid #E5E7EB",
                                    boxShadow: "0 1px 2px rgba(0, 0, 0, 0.05)"
                                }
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.Legend, {
                                verticalAlign: "top",
                                height: 30,
                                formatter: ()=>"獲得ポイント"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.Line, {
                                type: "monotone",
                                dataKey: "score",
                                name: "ギバースコア",
                                stroke: mainColor,
                                activeDot: {
                                    r: 7,
                                    stroke: "white",
                                    strokeWidth: 2
                                },
                                strokeWidth: 2.5,
                                dot: {
                                    stroke: mainColor,
                                    strokeWidth: 2,
                                    r: 4,
                                    fill: "white"
                                }
                            })
                        ]
                    })
                })
            })
        ]
    });
};
const _default = GiverScoreChart;

//# sourceMappingURL=data:application/json;base64,