{"version":3,"sources":["/Users/master/Local Sites/testcursor/src/components/features/todo/TodoList.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport TaskItem from './TaskItem';\nimport useTodoStorage from '../../../hooks/useTodoStorage';\n\nexport default function TodoList() {\n  const {\n    tasks,\n    addTask,\n    deleteTask,\n    toggleTaskCompletion,\n    completedTasks,\n    incompleteTasks,\n    totalPoints,\n    completedPoints\n  } = useTodoStorage();\n  \n  const [filter, setFilter] = useState<'all' | 'active' | 'completed'>('all');\n  \n  // フィルタリングされたタスクのリストを表示\n  const filteredTasks = filter === 'all' \n    ? tasks \n    : filter === 'active' \n      ? incompleteTasks \n      : completedTasks;\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-4\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-2xl font-bold mb-2\">ToDoリスト</h1>\n        <p className=\"text-gray-600\">\n          合計ポイント: {completedPoints} / {totalPoints}\n        </p>\n      </div>\n\n      {/* タスク追加フォーム */}\n      <TodoForm onAddTask={addTask} />\n      \n      {/* フィルター */}\n      <div className=\"flex space-x-2 my-4\">\n        <button\n          className={`px-3 py-1 rounded ${filter === 'all' ? 'bg-blue-500 text-white' : 'bg-gray-200'}`}\n          onClick={() => setFilter('all')}\n        >\n          すべて\n        </button>\n        <button\n          className={`px-3 py-1 rounded ${filter === 'active' ? 'bg-blue-500 text-white' : 'bg-gray-200'}`}\n          onClick={() => setFilter('active')}\n        >\n          未完了\n        </button>\n        <button\n          className={`px-3 py-1 rounded ${filter === 'completed' ? 'bg-blue-500 text-white' : 'bg-gray-200'}`}\n          onClick={() => setFilter('completed')}\n        >\n          完了済み\n        </button>\n      </div>\n      \n      {/* タスクリスト */}\n      <div className=\"space-y-4 mt-4\">\n        {filteredTasks.length === 0 ? (\n          <p className=\"text-gray-500 text-center py-4\">タスクがありません</p>\n        ) : (\n          filteredTasks.map(task => (\n            <TaskItem\n              key={task.id}\n              task={task}\n              onToggleComplete={toggleTaskCompletion}\n              onDelete={deleteTask}\n            />\n          ))\n        )}\n      </div>\n    </div>\n  );\n} "],"names":["TodoList","tasks","addTask","deleteTask","toggleTaskCompletion","completedTasks","incompleteTasks","totalPoints","completedPoints","useTodoStorage","filter","setFilter","useState","filteredTasks","div","className","h1","p","TodoForm","onAddTask","button","onClick","length","map","task","TaskItem","onToggleComplete","onDelete","id"],"mappings":"AAAA;;;;;+BAOA;;;eAAwBA;;;;+DALQ;iEACX;iEACA;uEACM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEZ,SAASA;IACtB,MAAM,EACJC,KAAK,EACLC,OAAO,EACPC,UAAU,EACVC,oBAAoB,EACpBC,cAAc,EACdC,eAAe,EACfC,WAAW,EACXC,eAAe,EAChB,GAAGC,IAAAA,uBAAc;IAElB,MAAM,CAACC,QAAQC,UAAU,GAAGC,IAAAA,eAAQ,EAAiC;IAErE,uBAAuB;IACvB,MAAMC,gBAAgBH,WAAW,QAC7BT,QACAS,WAAW,WACTJ,kBACAD;IAEN,qBACE,sBAACS;QAAIC,WAAU;;0BACb,sBAACD;gBAAIC,WAAU;;kCACb,qBAACC;wBAAGD,WAAU;kCAA0B;;kCACxC,sBAACE;wBAAEF,WAAU;;4BAAgB;4BAClBP;4BAAgB;4BAAID;;;;;0BAKjC,qBAACW,iBAAQ;gBAACC,WAAWjB;;0BAGrB,sBAACY;gBAAIC,WAAU;;kCACb,qBAACK;wBACCL,WAAW,CAAC,kBAAkB,EAAEL,WAAW,QAAQ,2BAA2B,cAAc,CAAC;wBAC7FW,SAAS,IAAMV,UAAU;kCAC1B;;kCAGD,qBAACS;wBACCL,WAAW,CAAC,kBAAkB,EAAEL,WAAW,WAAW,2BAA2B,cAAc,CAAC;wBAChGW,SAAS,IAAMV,UAAU;kCAC1B;;kCAGD,qBAACS;wBACCL,WAAW,CAAC,kBAAkB,EAAEL,WAAW,cAAc,2BAA2B,cAAc,CAAC;wBACnGW,SAAS,IAAMV,UAAU;kCAC1B;;;;0BAMH,qBAACG;gBAAIC,WAAU;0BACZF,cAAcS,MAAM,KAAK,kBACxB,qBAACL;oBAAEF,WAAU;8BAAiC;qBAE9CF,cAAcU,GAAG,CAACC,CAAAA,qBAChB,qBAACC,iBAAQ;wBAEPD,MAAMA;wBACNE,kBAAkBtB;wBAClBuB,UAAUxB;uBAHLqB,KAAKI,EAAE;;;;AAU1B"}