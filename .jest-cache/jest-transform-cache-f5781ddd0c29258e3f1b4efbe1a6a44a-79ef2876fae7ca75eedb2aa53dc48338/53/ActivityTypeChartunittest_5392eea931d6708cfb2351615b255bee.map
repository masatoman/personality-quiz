{"version":3,"sources":["/Users/master/Local Sites/testcursor/src/components/features/dashboard/test/ActivityTypeChart.unit.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, waitFor } from '@testing-library/react';\nimport '@testing-library/jest-dom';\nimport ActivityTypeChart from '../ActivityTypeChart';\n\n// ActivityTypeChartコンポーネントの依存関係をモック\njest.mock('next/navigation', () => ({\n  useRouter() {\n    return {\n      push: jest.fn(),\n      prefetch: jest.fn(),\n    };\n  },\n}));\n\n// recharts コンポーネントをモック\njest.mock('recharts', () => {\n  const OriginalModule = jest.requireActual('recharts');\n  return {\n    ...OriginalModule,\n    ResponsiveContainer: ({ children, ...props }: any) => (\n      <div data-testid=\"responsive-container\" {...props}>\n        {children}\n      </div>\n    ),\n    PieChart: ({ children, ...props }: any) => (\n      <div data-testid=\"pie-chart\" {...props}>\n        {children}\n      </div>\n    ),\n    Pie: ({ children, ...props }: any) => (\n      <div data-testid=\"recharts-pie\" {...props}>\n        {children}\n      </div>\n    ),\n    Cell: ({ ...props }: any) => <div data-testid=\"recharts-cell\" {...props} />,\n    Tooltip: ({ ...props }: any) => <div data-testid=\"recharts-tooltip\" {...props} />,\n    Legend: ({ ...props }: any) => <div data-testid=\"recharts-legend\" {...props} />,\n  };\n});\n\n// フェッチのモック化\n// @ts-ignore - fetch型の不一致を無視\nglobal.fetch = jest.fn();\n\ndescribe('ActivityTypeChart Component', () => {\n  const mockUserId = 'test-user-123';\n  \n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  it('ローディング状態が正しく表示されること', async () => {\n    // フェッチがすぐには解決しないようにモック\n    // @ts-ignore\n    global.fetch.mockImplementation(() => new Promise(() => {}));\n    \n    render(<ActivityTypeChart userId={mockUserId} />);\n    \n    // ローディングインジケータが表示されることを確認\n    const loadingElement = screen.getByText(/。/i).closest('div')?.querySelector('.animate-spin');\n    expect(loadingElement).toBeInTheDocument();\n  });\n\n  it('エラー状態が正しく表示されること', async () => {\n    // 失敗するフェッチをモック\n    // @ts-ignore\n    global.fetch.mockRejectedValueOnce(new Error('API error'));\n    \n    render(<ActivityTypeChart userId={mockUserId} />);\n    \n    // エラーメッセージが表示されるまで待機\n    await waitFor(() => {\n      expect(screen.getByText(/エラーが発生しました/i)).toBeInTheDocument();\n    });\n  });\n\n  it('データが正しく表示され、グラフコンポーネントがレンダリングされること', async () => {\n    // 成功するフェッチレスポンスをモック\n    const mockData = {\n      activityCounts: {\n        'CREATE_CONTENT': 12,\n        'PROVIDE_FEEDBACK': 23,\n        'CONSUME_CONTENT': 45,\n        'RECEIVE_FEEDBACK': 18,\n        'SHARE_RESOURCE': 7,\n        'ASK_QUESTION': 15\n      }\n    };\n    \n    // @ts-ignore\n    global.fetch.mockResolvedValueOnce({\n      ok: true,\n      json: async () => mockData,\n    });\n    \n    render(<ActivityTypeChart userId={mockUserId} />);\n    \n    // ローディングが終了して、グラフコンポーネントが表示されるまで待機\n    await waitFor(() => {\n      // recharts コンポーネントが表示されていることを確認\n      expect(screen.getByTestId('pie-chart')).toBeInTheDocument();\n      expect(screen.getByTestId('recharts-pie')).toBeInTheDocument();\n    });\n    \n    // タイトルが正しく表示されていることを確認\n    expect(screen.getByText('活動種類の割合')).toBeInTheDocument();\n    \n    // 各活動タイプのラベルが表示されていることを確認\n    expect(screen.getByText(/コンテンツ作成/)).toBeInTheDocument();\n    expect(screen.getByText(/フィードバック提供/)).toBeInTheDocument();\n    expect(screen.getByText(/コンテンツ利用/)).toBeInTheDocument();\n    \n    // 総活動数が表示されていることを確認\n    const totalActivities = 12 + 23 + 45 + 18 + 7 + 15; // 120\n    expect(screen.getByText(`総活動数: ${totalActivities}回`)).toBeInTheDocument();\n  });\n\n  it('データがない場合のメッセージが表示されること', async () => {\n    // 空のデータをモック\n    const mockEmptyData = {\n      activityCounts: {}\n    };\n    \n    // @ts-ignore\n    global.fetch.mockResolvedValueOnce({\n      ok: true,\n      json: async () => mockEmptyData,\n    });\n    \n    render(<ActivityTypeChart userId={mockUserId} />);\n    \n    // データがないメッセージが表示されるまで待機\n    await waitFor(() => {\n      expect(screen.getByText(/まだ活動データがありません/i)).toBeInTheDocument();\n    });\n  });\n\n  it('APIが正しいURLとパラメータで呼び出されること', async () => {\n    // 成功するフェッチレスポンスをモック\n    // @ts-ignore\n    global.fetch.mockResolvedValueOnce({\n      ok: true,\n      json: async () => ({ activityCounts: {} }),\n    });\n    \n    render(<ActivityTypeChart userId={mockUserId} />);\n    \n    // APIが呼び出されたことを確認\n    expect(global.fetch).toHaveBeenCalledTimes(1);\n    \n    // URLに userId パラメータが含まれていることを確認\n    const fetchCall = (global.fetch as jest.Mock).mock.calls[0][0];\n    expect(fetchCall).toContain(`userId=${mockUserId}`);\n    expect(fetchCall).toContain(`/api/user/activity-stats`);\n  });\n  \n  it('ヘルプテキストが表示されること', async () => {\n    // 成功するフェッチレスポンスをモック\n    // @ts-ignore\n    global.fetch.mockResolvedValueOnce({\n      ok: true,\n      json: async () => ({ activityCounts: { 'CREATE_CONTENT': 1 } }),\n    });\n    \n    render(<ActivityTypeChart userId={mockUserId} />);\n    \n    // ヘルプテキストが表示されるまで待機\n    await waitFor(() => {\n      expect(screen.getByText(/ギバースコアの向上には/i)).toBeInTheDocument();\n      expect(screen.getByText(/特に「コンテンツ作成」と「フィードバック提供」が効果的です/i)).toBeInTheDocument();\n    });\n  });\n}); "],"names":["jest","mock","useRouter","push","fn","prefetch","OriginalModule","requireActual","ResponsiveContainer","children","props","div","data-testid","PieChart","Pie","Cell","Tooltip","Legend","global","fetch","describe","mockUserId","beforeEach","clearAllMocks","it","mockImplementation","Promise","render","ActivityTypeChart","userId","loadingElement","screen","getByText","closest","querySelector","expect","toBeInTheDocument","mockRejectedValueOnce","Error","waitFor","mockData","activityCounts","mockResolvedValueOnce","ok","json","getByTestId","totalActivities","mockEmptyData","toHaveBeenCalledTimes","fetchCall","calls","toContain"],"mappings":"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"}