{"version":3,"sources":["/Users/master/Local Sites/testcursor/src/components/features/todo/TaskItem.tsx"],"sourcesContent":["import React from 'react';\nimport { Task } from '../../../hooks/useTodoStorage';\nimport { FaTrashAlt, FaCheckCircle, FaRegCircle } from 'react-icons/fa';\n\ninterface TaskItemProps {\n  task: Task;\n  onToggleComplete: (id: string) => void;\n  onDeleteTask: (id: string) => void;\n}\n\n/**\n * 個別のタスク項目を表示するコンポーネント\n */\nexport default function TaskItem({ task, onToggleComplete, onDeleteTask }: TaskItemProps) {\n  return (\n    <div className=\"bg-white p-4 rounded-lg shadow mb-3 transition-all\">\n      <div className=\"flex items-start\">\n        <button\n          onClick={() => onToggleComplete(task.id)}\n          className=\"flex-shrink-0 mt-1 mr-3 text-blue-500 hover:text-blue-600 focus:outline-none\"\n          aria-label={task.completed ? \"タスクを未完了にする\" : \"タスクを完了にする\"}\n        >\n          {task.completed ? (\n            <FaCheckCircle className=\"w-5 h-5\" />\n          ) : (\n            <FaRegCircle className=\"w-5 h-5\" />\n          )}\n        </button>\n        \n        <div className=\"flex-1\">\n          <h3 className={`font-medium text-gray-800 ${task.completed ? 'line-through text-gray-500' : ''}`}>\n            {task.title}\n          </h3>\n          \n          {task.description && (\n            <p className={`text-sm mt-1 ${task.completed ? 'text-gray-400' : 'text-gray-600'}`}>\n              {task.description}\n            </p>\n          )}\n          \n          <div className=\"flex justify-between items-center mt-2\">\n            <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n              {task.points} ポイント\n            </span>\n            \n            {task.dueDate && (\n              <span className={`text-xs ${\n                task.completed ? 'text-gray-400' : new Date(task.dueDate) < new Date() ? 'text-red-500' : 'text-gray-500'\n              }`}>\n                期限: {new Date(task.dueDate).toLocaleDateString('ja-JP')}\n              </span>\n            )}\n          </div>\n        </div>\n        \n        <button\n          onClick={() => onDeleteTask(task.id)}\n          className=\"ml-3 text-red-500 hover:text-red-600 focus:outline-none\"\n          aria-label=\"タスクを削除\"\n        >\n          <FaTrashAlt className=\"w-4 h-4\" />\n        </button>\n      </div>\n    </div>\n  );\n} "],"names":["TaskItem","task","onToggleComplete","onDeleteTask","div","className","button","onClick","id","aria-label","completed","FaCheckCircle","FaRegCircle","h3","title","description","p","span","points","dueDate","Date","toLocaleDateString","FaTrashAlt"],"mappings":";;;;+BAUA;;CAEC,GACD;;;eAAwBA;;;;8DAbN;oBAEqC;;;;;;AAWxC,SAASA,SAAS,EAAEC,IAAI,EAAEC,gBAAgB,EAAEC,YAAY,EAAiB;IACtF,qBACE,qBAACC;QAAIC,WAAU;kBACb,cAAA,sBAACD;YAAIC,WAAU;;8BACb,qBAACC;oBACCC,SAAS,IAAML,iBAAiBD,KAAKO,EAAE;oBACvCH,WAAU;oBACVI,cAAYR,KAAKS,SAAS,GAAG,eAAe;8BAE3CT,KAAKS,SAAS,iBACb,qBAACC,iBAAa;wBAACN,WAAU;uCAEzB,qBAACO,eAAW;wBAACP,WAAU;;;8BAI3B,sBAACD;oBAAIC,WAAU;;sCACb,qBAACQ;4BAAGR,WAAW,CAAC,0BAA0B,EAAEJ,KAAKS,SAAS,GAAG,+BAA+B,GAAG,CAAC;sCAC7FT,KAAKa,KAAK;;wBAGZb,KAAKc,WAAW,kBACf,qBAACC;4BAAEX,WAAW,CAAC,aAAa,EAAEJ,KAAKS,SAAS,GAAG,kBAAkB,gBAAgB,CAAC;sCAC/ET,KAAKc,WAAW;;sCAIrB,sBAACX;4BAAIC,WAAU;;8CACb,sBAACY;oCAAKZ,WAAU;;wCACbJ,KAAKiB,MAAM;wCAAC;;;gCAGdjB,KAAKkB,OAAO,kBACX,sBAACF;oCAAKZ,WAAW,CAAC,QAAQ,EACxBJ,KAAKS,SAAS,GAAG,kBAAkB,IAAIU,KAAKnB,KAAKkB,OAAO,IAAI,IAAIC,SAAS,iBAAiB,gBAC3F,CAAC;;wCAAE;wCACG,IAAIA,KAAKnB,KAAKkB,OAAO,EAAEE,kBAAkB,CAAC;;;;;;;8BAMvD,qBAACf;oBACCC,SAAS,IAAMJ,aAAaF,KAAKO,EAAE;oBACnCH,WAAU;oBACVI,cAAW;8BAEX,cAAA,qBAACa,cAAU;wBAACjB,WAAU;;;;;;AAKhC"}