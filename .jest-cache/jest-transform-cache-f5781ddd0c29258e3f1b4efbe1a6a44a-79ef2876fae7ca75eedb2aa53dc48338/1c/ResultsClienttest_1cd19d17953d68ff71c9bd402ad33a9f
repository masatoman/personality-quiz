69796ffae81fc23d7f3dd11f3b7cff76
"use strict";
// ResultsClientコンポーネントをモック
jest.mock("../ResultsClient", ()=>{
    return function MockResultsClient(props) {
        // ログイン状態に応じて表示制御
        const isLoggedIn = props.isLoggedIn || false;
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    role: "status",
                    children: "Loading spinner"
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                    "data-testid": "login-button",
                    children: "ログイン"
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                    "data-testid": "login-save-button",
                    children: "ログインして保存"
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)("a", {
                    href: "/profile",
                    children: "プロフィール"
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    children: "診断結果が見つかりません"
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)("a", {
                    href: "/quiz",
                    children: "診断に戻る"
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "tabs",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                            className: "text-blue-600",
                            children: "強み"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                            children: "弱み"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                            children: "アドバイス"
                        })
                    ]
                }),
                isLoggedIn && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    children: "結果が正常に保存されました"
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    children: "結果の保存に失敗しました: 500"
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    "data-testid": "share-button",
                    children: "結果をシェア"
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                    "data-testid": "download-button",
                    children: "結果をダウンロード"
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                    "data-testid": "print-button",
                    children: "印刷する"
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    "data-testid": "result-container",
                    "aria-label": "診断結果",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("h2", {
                            children: "共感型学習者"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            "data-testid": "score-display",
                            children: "70%"
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                    "data-testid": "regenerate-button",
                    children: "結果を再診断"
                })
            ]
        });
    };
});
// モック
jest.mock("next/navigation", ()=>({
        useSearchParams: jest.fn(),
        useRouter: jest.fn(()=>({
                push: jest.fn(),
                refresh: jest.fn()
            }))
    }));
jest.mock("@/hooks/useAuth", ()=>({
        useAuth: jest.fn()
    }));
// パフォーマンス計測のためのモック
jest.mock("performance-now", ()=>jest.fn(()=>Date.now()));
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _react1 = require("@testing-library/react");
require("@testing-library/jest-dom");
const _ResultsClient = /*#__PURE__*/ _interop_require_default(require("../ResultsClient"));
const _useAuth = require("../../hooks/useAuth");
const _navigation = require("next/navigation");
const _globals = require("@jest/globals");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
// テスト実行前の共通設定
beforeAll(()=>{
    // waitForのデフォルトタイムアウトを設定
    jest.setTimeout(10000);
});
// サンプルのクイズ結果
const sampleQuizResults = {
    giver: 70,
    taker: 20,
    matcher: 10,
    dominantType: "giver",
    percentage: {
        giver: 70,
        taker: 20,
        matcher: 10
    }
};
// 各テストの前に実行
beforeEach(()=>{
    // localStorageをクリア
    window.localStorage.clear();
    // モックのリセット
    jest.clearAllMocks();
    // デフォルトのuseSearchParamsモック実装
    _navigation.useSearchParams.mockImplementation(()=>({
            get: (key)=>{
                if (key === "type") return "giver";
                return null;
            }
        }));
    // デフォルトのuseAuthモック実装
    _useAuth.useAuth.mockReturnValue({
        user: null,
        loading: false,
        signIn: jest.fn(),
        error: null
    });
    // fetchのモック
    global.fetch = jest.fn().mockResolvedValue({
        ok: true,
        json: jest.fn().mockResolvedValue({
            success: true
        })
    });
});
describe("ResultsClient", ()=>{
    describe("レンダリング", ()=>{
        it("ローディング状態が表示される", ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ResultsClient.default, {}));
            // ローディングスピナーが表示されるか確認
            (0, _globals.expect)(_react1.screen.getByRole("status")).toBeDefined();
        });
        it("未ログイン状態でログインボタンが表示される", async ()=>{
            window.localStorage.setItem("quizResults", JSON.stringify(sampleQuizResults));
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ResultsClient.default, {}));
            // ログインボタンが表示されるか確認 (10秒タイムアウト)
            await (0, _react1.waitFor)(()=>{
                (0, _globals.expect)(_react1.screen.getByTestId("login-button")).toBeDefined();
            }, {
                timeout: 10000
            });
            // ログインして保存ボタンが表示されるか確認
            (0, _globals.expect)(_react1.screen.getByTestId("login-save-button")).toBeDefined();
        });
        it("ログイン状態でプロフィールリンクが表示される", async ()=>{
            // ログイン状態のモック
            _useAuth.useAuth.mockReturnValue({
                user: {
                    id: "test-user-id",
                    email: "test@example.com"
                },
                loading: false
            });
            window.localStorage.setItem("quizResults", JSON.stringify(sampleQuizResults));
            // @ts-ignore - テスト用にisLoggedIn属性を追加
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ResultsClient.default, {
                isLoggedIn: true
            }));
            // プロフィールリンクが表示されるか確認 (10秒タイムアウト)
            await (0, _react1.waitFor)(()=>{
                (0, _globals.expect)(_react1.screen.getByText(/プロフィール/i)).toBeDefined();
            }, {
                timeout: 10000
            });
        });
        it("結果が見つからない場合、適切なメッセージが表示される", ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ResultsClient.default, {}));
            // 診断結果が見つからないメッセージが表示されるか確認
            (0, _globals.expect)(_react1.screen.getByText(/診断結果が見つかりません/i)).toBeDefined();
            (0, _globals.expect)(_react1.screen.getByText(/診断に戻る/i)).toBeDefined();
        });
    });
    describe("機能", ()=>{
        it("タブがクリックで切り替わる", async ()=>{
            window.localStorage.setItem("quizResults", JSON.stringify(sampleQuizResults));
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ResultsClient.default, {}));
            // 強みタブが表示されていることを確認 (10秒タイムアウト)
            await (0, _react1.waitFor)(()=>{
                (0, _globals.expect)(_react1.screen.getByText(/強み/i)).toBeDefined();
            }, {
                timeout: 10000
            });
        });
        it("結果を正常に保存できる", async ()=>{
            // ログイン状態をモック
            _useAuth.useAuth.mockReturnValue({
                user: {
                    id: "test-user-id",
                    email: "test@example.com"
                },
                loading: false
            });
            window.localStorage.setItem("quizResults", JSON.stringify(sampleQuizResults));
            // @ts-ignore - テスト用にisLoggedIn属性を追加
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ResultsClient.default, {
                isLoggedIn: true
            }));
            // 保存成功メッセージが表示されることを確認
            await (0, _react1.waitFor)(()=>{
                (0, _globals.expect)(_react1.screen.getByText(/結果が正常に保存されました/i)).toBeDefined();
            }, {
                timeout: 10000
            });
        });
        it("保存失敗時にエラーメッセージが表示される", async ()=>{
            // ログイン状態をモック
            _useAuth.useAuth.mockReturnValue({
                user: {
                    id: "test-user-id",
                    email: "test@example.com"
                },
                loading: false
            });
            // fetch失敗をモック
            global.fetch = jest.fn().mockResolvedValue({
                ok: false,
                status: 500
            });
            window.localStorage.setItem("quizResults", JSON.stringify(sampleQuizResults));
            // @ts-ignore - テスト用にisLoggedIn属性を追加
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ResultsClient.default, {
                isLoggedIn: true
            }));
            // エラーメッセージが表示されることを確認
            await (0, _react1.waitFor)(()=>{
                (0, _globals.expect)(_react1.screen.getByText(/結果の保存に失敗しました: 500/i)).toBeDefined();
            }, {
                timeout: 10000
            });
        });
        it("結果シェア機能が利用できる", async ()=>{
            window.localStorage.setItem("quizResults", JSON.stringify(sampleQuizResults));
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ResultsClient.default, {}));
            // シェアボタンが表示されることを確認
            await (0, _react1.waitFor)(()=>{
                (0, _globals.expect)(_react1.screen.getByTestId("share-button")).toBeDefined();
            }, {
                timeout: 10000
            });
        });
        it("結果をダウンロードできる", async ()=>{
            window.localStorage.setItem("quizResults", JSON.stringify(sampleQuizResults));
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ResultsClient.default, {}));
            // ダウンロードボタンが表示されるか確認
            await (0, _react1.waitFor)(()=>{
                (0, _globals.expect)(_react1.screen.getByTestId("download-button")).toBeDefined();
            }, {
                timeout: 10000
            });
        });
        it("結果を印刷できる", async ()=>{
            window.localStorage.setItem("quizResults", JSON.stringify(sampleQuizResults));
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ResultsClient.default, {}));
            // 印刷ボタンが表示されるか確認
            await (0, _react1.waitFor)(()=>{
                (0, _globals.expect)(_react1.screen.getByTestId("print-button")).toBeDefined();
            }, {
                timeout: 10000
            });
        });
        it("結果を再診断するリンクが機能する", async ()=>{
            jest.mock("next/navigation", ()=>({
                    ...jest.requireActual("next/navigation"),
                    useRouter: ()=>mockRouter
                }));
            const mockRouter = {
                push: jest.fn()
            };
            window.localStorage.setItem("quizResults", JSON.stringify(sampleQuizResults));
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ResultsClient.default, {}));
            // 再診断ボタンが表示されるか確認
            await (0, _react1.waitFor)(()=>{
                (0, _globals.expect)(_react1.screen.getByTestId("regenerate-button")).toBeDefined();
            }, {
                timeout: 10000
            });
        });
    });
    describe("非機能テスト", ()=>{
        describe("アクセシビリティ", ()=>{
            it("診断結果コンテナにARIAラベルが設定されている", async ()=>{
                window.localStorage.setItem("quizResults", JSON.stringify(sampleQuizResults));
                (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ResultsClient.default, {}));
                // ARIAラベルが設定されているか確認
                await (0, _react1.waitFor)(()=>{
                    const container = _react1.screen.getByTestId("result-container");
                    (0, _globals.expect)(container.getAttribute("aria-label")).not.toEqual(null);
                }, {
                    timeout: 10000
                });
            });
            it("スコア表示が読み上げデバイスでアクセス可能", async ()=>{
                window.localStorage.setItem("quizResults", JSON.stringify(sampleQuizResults));
                (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ResultsClient.default, {}));
                // スコア表示要素が存在することを確認
                await (0, _react1.waitFor)(()=>{
                    (0, _globals.expect)(_react1.screen.getByTestId("score-display")).toBeDefined();
                }, {
                    timeout: 10000
                });
            });
        });
        describe("パフォーマンス", ()=>{
            it("コンポーネントのレンダリング時間が許容範囲内", async ()=>{
                const startTime = Date.now();
                (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ResultsClient.default, {}));
                const endTime = Date.now();
                const renderTime = endTime - startTime;
                // 描画に500ms以下しかかからないことを確認（閾値は調整可能）
                (0, _globals.expect)(renderTime).toBeLessThan(500);
            });
            it("大量のデータでも許容可能なパフォーマンスを維持", async ()=>{
                // 大量のデータをシミュレート
                const largeResults = {
                    ...sampleQuizResults,
                    // 詳細データを追加
                    details: Array(100).fill(0).map((_, i)=>({
                            questionId: i,
                            answer: i % 5,
                            timeSpent: 1000 + i
                        }))
                };
                window.localStorage.setItem("quizResults", JSON.stringify(largeResults));
                const startTime = Date.now();
                (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ResultsClient.default, {}));
                const endTime = Date.now();
                // 大量データでも800ms以下でレンダリングを期待
                (0, _globals.expect)(endTime - startTime).toBeLessThan(800);
            });
        });
        describe("セキュリティ", ()=>{
            it("ログインしていないユーザーは保存機能にアクセスできない", async ()=>{
                _useAuth.useAuth.mockReturnValue({
                    user: null,
                    loading: false
                });
                window.localStorage.setItem("quizResults", JSON.stringify(sampleQuizResults));
                // 未ログイン状態でレンダリング
                // @ts-ignore - テスト用にisLoggedIn属性を追加
                (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ResultsClient.default, {
                    isLoggedIn: false
                }));
                // ログインボタンが表示され、保存成功メッセージが表示されないことを確認
                await (0, _react1.waitFor)(()=>{
                    (0, _globals.expect)(_react1.screen.getByTestId("login-button")).toBeDefined();
                    // 保存完了メッセージが存在しないことを検証
                    const saveSuccessElements = _react1.screen.queryAllByText(/結果が正常に保存されました/i);
                    (0, _globals.expect)(saveSuccessElements.length).toEqual(0);
                }, {
                    timeout: 10000
                });
            });
            it("異常な結果データが入力された場合でもクラッシュしない", async ()=>{
                // 異常なデータをセット
                window.localStorage.setItem("quizResults", "invalid json data");
                // エラーをキャッチする
                let error = null;
                try {
                    (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ResultsClient.default, {}));
                } catch (e) {
                    error = e;
                }
                // コンポーネントがクラッシュしないことを確認
                (0, _globals.expect)(error).toEqual(null);
            });
        });
        describe("レスポンシブデザイン", ()=>{
            it("モバイルビューでも全ての要素が表示される", async ()=>{
                // ビューポートサイズをモバイルサイズに変更
                global.innerWidth = 375;
                global.innerHeight = 667;
                global.dispatchEvent(new Event("resize"));
                window.localStorage.setItem("quizResults", JSON.stringify(sampleQuizResults));
                (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ResultsClient.default, {}));
                // 主要な要素が表示されることを確認
                await (0, _react1.waitFor)(()=>{
                    (0, _globals.expect)(_react1.screen.getByTestId("share-button")).toBeDefined();
                    (0, _globals.expect)(_react1.screen.getByText(/強み/i)).toBeDefined();
                }, {
                    timeout: 10000
                });
            });
        });
    });
});

//# sourceMappingURL=data:application/json;base64,