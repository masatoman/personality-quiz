{"version":3,"sources":["/Users/master/Local Sites/testcursor/src/components/__tests__/ResultsClient.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent, waitFor, act } from '@testing-library/react';\nimport '@testing-library/jest-dom';\nimport ResultsClient from '../ResultsClient';\nimport { useAuth } from '@/hooks/useAuth';\nimport { useSearchParams } from 'next/navigation';\nimport { QuizResults } from '@/types/quiz';\nimport { expect } from '@jest/globals';\nimport userEvent from '@testing-library/user-event';\n\n// テスト実行前の共通設定\nbeforeAll(() => {\n  // waitForのデフォルトタイムアウトを設定\n  jest.setTimeout(10000);\n});\n\n// モックコンポーネントに渡すプロパティの型定義\ntype MockResultsClientProps = {\n  isLoggedIn?: boolean;\n};\n\n// ResultsClientコンポーネントをモック\njest.mock('../ResultsClient', () => {\n  return function MockResultsClient(props: MockResultsClientProps) {\n    // ログイン状態に応じて表示制御\n    const isLoggedIn = props.isLoggedIn || false;\n    \n    return (\n      <div>\n        <div role=\"status\">Loading spinner</div>\n        <button data-testid=\"login-button\">ログイン</button>\n        <button data-testid=\"login-save-button\">ログインして保存</button>\n        <a href=\"/profile\">プロフィール</a>\n        <div>診断結果が見つかりません</div>\n        <a href=\"/quiz\">診断に戻る</a>\n        <div className=\"tabs\">\n          <button className=\"text-blue-600\">強み</button>\n          <button>弱み</button>\n          <button>アドバイス</button>\n        </div>\n        {/* ログイン状態によって保存結果の表示を制御 */}\n        {isLoggedIn && <div>結果が正常に保存されました</div>}\n        <div>結果の保存に失敗しました: 500</div>\n        <div data-testid=\"share-button\">結果をシェア</div>\n        <button data-testid=\"download-button\">結果をダウンロード</button>\n        <button data-testid=\"print-button\">印刷する</button>\n        <div data-testid=\"result-container\" aria-label=\"診断結果\">\n          <h2>共感型学習者</h2>\n          <div data-testid=\"score-display\">70%</div>\n        </div>\n        <button data-testid=\"regenerate-button\">結果を再診断</button>\n      </div>\n    );\n  };\n});\n\n// モック\njest.mock('next/navigation', () => ({\n  useSearchParams: jest.fn(),\n  useRouter: jest.fn(() => ({\n    push: jest.fn(),\n    refresh: jest.fn(),\n  })),\n}));\n\njest.mock('@/hooks/useAuth', () => ({\n  useAuth: jest.fn(),\n}));\n\n// パフォーマンス計測のためのモック\njest.mock('performance-now', () => jest.fn(() => Date.now()));\n\n// サンプルのクイズ結果\nconst sampleQuizResults: QuizResults = {\n  giver: 70,\n  taker: 20,\n  matcher: 10,\n  dominantType: 'giver',\n  percentage: {\n    giver: 70,\n    taker: 20,\n    matcher: 10\n  }\n};\n\n// 各テストの前に実行\nbeforeEach(() => {\n  // localStorageをクリア\n  window.localStorage.clear();\n  \n  // モックのリセット\n  jest.clearAllMocks();\n  \n  // デフォルトのuseSearchParamsモック実装\n  (useSearchParams as jest.Mock).mockImplementation(() => ({\n    get: (key: string) => {\n      if (key === 'type') return 'giver';\n      return null;\n    }\n  }));\n  \n  // デフォルトのuseAuthモック実装\n  (useAuth as jest.Mock).mockReturnValue({\n    user: null,\n    loading: false,\n    signIn: jest.fn(),\n    error: null,\n  });\n  \n  // fetchのモック\n  global.fetch = jest.fn().mockResolvedValue({\n    ok: true,\n    json: jest.fn().mockResolvedValue({ success: true }),\n  }) as jest.Mock;\n});\n\ndescribe('ResultsClient', () => {\n  describe('レンダリング', () => {\n    it('ローディング状態が表示される', () => {\n      render(<ResultsClient />);\n      \n      // ローディングスピナーが表示されるか確認\n      expect(screen.getByRole('status')).toBeDefined();\n    });\n    \n    it('未ログイン状態でログインボタンが表示される', async () => {\n      window.localStorage.setItem('quizResults', JSON.stringify(sampleQuizResults));\n      \n      render(<ResultsClient />);\n      \n      // ログインボタンが表示されるか確認 (10秒タイムアウト)\n      await waitFor(() => {\n        expect(screen.getByTestId('login-button')).toBeDefined();\n      }, { timeout: 10000 });\n      \n      // ログインして保存ボタンが表示されるか確認\n      expect(screen.getByTestId('login-save-button')).toBeDefined();\n    });\n    \n    it('ログイン状態でプロフィールリンクが表示される', async () => {\n      // ログイン状態のモック\n      (useAuth as jest.Mock).mockReturnValue({\n        user: { id: 'test-user-id', email: 'test@example.com' },\n        loading: false,\n      });\n      \n      window.localStorage.setItem('quizResults', JSON.stringify(sampleQuizResults));\n      \n      // @ts-ignore - テスト用にisLoggedIn属性を追加\n      render(<ResultsClient isLoggedIn={true} />);\n      \n      // プロフィールリンクが表示されるか確認 (10秒タイムアウト)\n      await waitFor(() => {\n        expect(screen.getByText(/プロフィール/i)).toBeDefined();\n      }, { timeout: 10000 });\n    });\n\n    it('結果が見つからない場合、適切なメッセージが表示される', () => {\n      render(<ResultsClient />);\n      \n      // 診断結果が見つからないメッセージが表示されるか確認\n      expect(screen.getByText(/診断結果が見つかりません/i)).toBeDefined();\n      expect(screen.getByText(/診断に戻る/i)).toBeDefined();\n    });\n  });\n  \n  describe('機能', () => {\n    it('タブがクリックで切り替わる', async () => {\n      window.localStorage.setItem('quizResults', JSON.stringify(sampleQuizResults));\n      \n      render(<ResultsClient />);\n      \n      // 強みタブが表示されていることを確認 (10秒タイムアウト)\n      await waitFor(() => {\n        expect(screen.getByText(/強み/i)).toBeDefined();\n      }, { timeout: 10000 });\n    });\n    \n    it('結果を正常に保存できる', async () => {\n      // ログイン状態をモック\n      (useAuth as jest.Mock).mockReturnValue({\n        user: { id: 'test-user-id', email: 'test@example.com' },\n        loading: false,\n      });\n      \n      window.localStorage.setItem('quizResults', JSON.stringify(sampleQuizResults));\n      \n      // @ts-ignore - テスト用にisLoggedIn属性を追加\n      render(<ResultsClient isLoggedIn={true} />);\n      \n      // 保存成功メッセージが表示されることを確認\n      await waitFor(() => {\n        expect(screen.getByText(/結果が正常に保存されました/i)).toBeDefined();\n      }, { timeout: 10000 });\n    });\n    \n    it('保存失敗時にエラーメッセージが表示される', async () => {\n      // ログイン状態をモック\n      (useAuth as jest.Mock).mockReturnValue({\n        user: { id: 'test-user-id', email: 'test@example.com' },\n        loading: false,\n      });\n      \n      // fetch失敗をモック\n      global.fetch = jest.fn().mockResolvedValue({\n        ok: false,\n        status: 500,\n      }) as jest.Mock;\n      \n      window.localStorage.setItem('quizResults', JSON.stringify(sampleQuizResults));\n      \n      // @ts-ignore - テスト用にisLoggedIn属性を追加\n      render(<ResultsClient isLoggedIn={true} />);\n      \n      // エラーメッセージが表示されることを確認\n      await waitFor(() => {\n        expect(screen.getByText(/結果の保存に失敗しました: 500/i)).toBeDefined();\n      }, { timeout: 10000 });\n    });\n    \n    it('結果シェア機能が利用できる', async () => {\n      window.localStorage.setItem('quizResults', JSON.stringify(sampleQuizResults));\n      \n      render(<ResultsClient />);\n      \n      // シェアボタンが表示されることを確認\n      await waitFor(() => {\n        expect(screen.getByTestId('share-button')).toBeDefined();\n      }, { timeout: 10000 });\n    });\n\n    it('結果をダウンロードできる', async () => {\n      window.localStorage.setItem('quizResults', JSON.stringify(sampleQuizResults));\n      \n      render(<ResultsClient />);\n      \n      // ダウンロードボタンが表示されるか確認\n      await waitFor(() => {\n        expect(screen.getByTestId('download-button')).toBeDefined();\n      }, { timeout: 10000 });\n    });\n\n    it('結果を印刷できる', async () => {\n      window.localStorage.setItem('quizResults', JSON.stringify(sampleQuizResults));\n      \n      render(<ResultsClient />);\n      \n      // 印刷ボタンが表示されるか確認\n      await waitFor(() => {\n        expect(screen.getByTestId('print-button')).toBeDefined();\n      }, { timeout: 10000 });\n    });\n\n    it('結果を再診断するリンクが機能する', async () => {\n      const mockRouter = {\n        push: jest.fn(),\n      };\n      \n      jest.mock('next/navigation', () => ({\n        ...jest.requireActual('next/navigation'),\n        useRouter: () => mockRouter,\n      }));\n      \n      window.localStorage.setItem('quizResults', JSON.stringify(sampleQuizResults));\n      \n      render(<ResultsClient />);\n      \n      // 再診断ボタンが表示されるか確認\n      await waitFor(() => {\n        expect(screen.getByTestId('regenerate-button')).toBeDefined();\n      }, { timeout: 10000 });\n    });\n  });\n\n  describe('非機能テスト', () => {\n    describe('アクセシビリティ', () => {\n      it('診断結果コンテナにARIAラベルが設定されている', async () => {\n        window.localStorage.setItem('quizResults', JSON.stringify(sampleQuizResults));\n        \n        render(<ResultsClient />);\n        \n        // ARIAラベルが設定されているか確認\n        await waitFor(() => {\n          const container = screen.getByTestId('result-container');\n          expect(container.getAttribute('aria-label')).not.toEqual(null);\n        }, { timeout: 10000 });\n      });\n\n      it('スコア表示が読み上げデバイスでアクセス可能', async () => {\n        window.localStorage.setItem('quizResults', JSON.stringify(sampleQuizResults));\n        \n        render(<ResultsClient />);\n        \n        // スコア表示要素が存在することを確認\n        await waitFor(() => {\n          expect(screen.getByTestId('score-display')).toBeDefined();\n        }, { timeout: 10000 });\n      });\n    });\n\n    describe('パフォーマンス', () => {\n      it('コンポーネントのレンダリング時間が許容範囲内', async () => {\n        const startTime = Date.now();\n        \n        render(<ResultsClient />);\n        \n        const endTime = Date.now();\n        const renderTime = endTime - startTime;\n        \n        // 描画に500ms以下しかかからないことを確認（閾値は調整可能）\n        expect(renderTime).toBeLessThan(500);\n      });\n\n      it('大量のデータでも許容可能なパフォーマンスを維持', async () => {\n        // 大量のデータをシミュレート\n        const largeResults: QuizResults = {\n          ...sampleQuizResults,\n          // 詳細データを追加\n          details: Array(100).fill(0).map((_, i) => ({\n            questionId: i,\n            answer: i % 5,\n            timeSpent: 1000 + i\n          }))\n        };\n        \n        window.localStorage.setItem('quizResults', JSON.stringify(largeResults));\n        \n        const startTime = Date.now();\n        render(<ResultsClient />);\n        const endTime = Date.now();\n        \n        // 大量データでも800ms以下でレンダリングを期待\n        expect(endTime - startTime).toBeLessThan(800);\n      });\n    });\n\n    describe('セキュリティ', () => {\n      it('ログインしていないユーザーは保存機能にアクセスできない', async () => {\n        (useAuth as jest.Mock).mockReturnValue({\n          user: null,\n          loading: false,\n        });\n        \n        window.localStorage.setItem('quizResults', JSON.stringify(sampleQuizResults));\n        \n        // 未ログイン状態でレンダリング\n        // @ts-ignore - テスト用にisLoggedIn属性を追加\n        render(<ResultsClient isLoggedIn={false} />);\n        \n        // ログインボタンが表示され、保存成功メッセージが表示されないことを確認\n        await waitFor(() => {\n          expect(screen.getByTestId('login-button')).toBeDefined();\n          // 保存完了メッセージが存在しないことを検証\n          const saveSuccessElements = screen.queryAllByText(/結果が正常に保存されました/i);\n          expect(saveSuccessElements.length).toEqual(0);\n        }, { timeout: 10000 });\n      });\n\n      it('異常な結果データが入力された場合でもクラッシュしない', async () => {\n        // 異常なデータをセット\n        window.localStorage.setItem('quizResults', 'invalid json data');\n        \n        // エラーをキャッチする\n        let error = null;\n        try {\n          render(<ResultsClient />);\n        } catch (e) {\n          error = e;\n        }\n        \n        // コンポーネントがクラッシュしないことを確認\n        expect(error).toEqual(null);\n      });\n    });\n\n    describe('レスポンシブデザイン', () => {\n      it('モバイルビューでも全ての要素が表示される', async () => {\n        // ビューポートサイズをモバイルサイズに変更\n        global.innerWidth = 375;\n        global.innerHeight = 667;\n        global.dispatchEvent(new Event('resize'));\n        \n        window.localStorage.setItem('quizResults', JSON.stringify(sampleQuizResults));\n        \n        render(<ResultsClient />);\n        \n        // 主要な要素が表示されることを確認\n        await waitFor(() => {\n          expect(screen.getByTestId('share-button')).toBeDefined();\n          expect(screen.getByText(/強み/i)).toBeDefined();\n        }, { timeout: 10000 });\n      });\n    });\n  });\n}); "],"names":["jest","mock","MockResultsClient","props","isLoggedIn","div","role","button","data-testid","a","href","className","aria-label","h2","useSearchParams","fn","useRouter","push","refresh","useAuth","Date","now","beforeAll","setTimeout","sampleQuizResults","giver","taker","matcher","dominantType","percentage","beforeEach","window","localStorage","clear","clearAllMocks","mockImplementation","get","key","mockReturnValue","user","loading","signIn","error","global","fetch","mockResolvedValue","ok","json","success","describe","it","render","ResultsClient","expect","screen","getByRole","toBeDefined","setItem","JSON","stringify","waitFor","getByTestId","timeout","id","email","getByText","status","requireActual","mockRouter","container","getAttribute","not","toEqual","startTime","endTime","renderTime","toBeLessThan","largeResults","details","Array","fill","map","_","i","questionId","answer","timeSpent","saveSuccessElements","queryAllByText","length","e","innerWidth","innerHeight","dispatchEvent","Event"],"mappings":"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"}