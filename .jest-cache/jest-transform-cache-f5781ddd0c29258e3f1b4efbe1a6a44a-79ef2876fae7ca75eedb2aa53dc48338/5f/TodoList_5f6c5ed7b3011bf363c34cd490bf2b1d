5c4474f9f39911c22796437fc4d0401e
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _fa = require("react-icons/fa");
const _uuid = require("uuid");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const TodoList = ({ giverScore = 0, giverType = "matcher", className = "", activityCounts = {
    CREATE_CONTENT: 0,
    PROVIDE_FEEDBACK: 0,
    CONSUME_CONTENT: 0,
    COMPLETE_QUIZ: 0
} })=>{
    const [tasks, setTasks] = (0, _react.useState)([]);
    const [newTaskTitle, setNewTaskTitle] = (0, _react.useState)("");
    const [showAddForm, setShowAddForm] = (0, _react.useState)(false);
    // ギバータイプと活動履歴に基づいて推奨タスクを生成
    const generateSuggestedTasks = (0, _react.useCallback)(()=>{
        const suggestedTasks = [];
        // デイリータスク: 毎日のコンテンツ閲覧
        suggestedTasks.push({
            id: (0, _uuid.v4)(),
            title: "教材を1つ閲覧する",
            description: "毎日の学習習慣を維持しましょう",
            completed: false,
            points: 3,
            type: "daily",
            createdAt: new Date()
        });
        // ギバータイプに応じたタスク
        if (giverType === "giver") {
            // ギバータイプの場合は教材作成を推奨
            if (activityCounts.CREATE_CONTENT < 1) {
                suggestedTasks.push({
                    id: (0, _uuid.v4)(),
                    title: "教材を作成してみよう",
                    description: "あなたの知識を共有することで学びが深まります",
                    completed: false,
                    points: 50,
                    type: "suggested",
                    createdAt: new Date()
                });
            }
        } else if (giverType === "matcher") {
            // マッチャータイプの場合はフィードバック提供を推奨
            suggestedTasks.push({
                id: (0, _uuid.v4)(),
                title: "教材にフィードバックを提供する",
                description: "他のユーザーの教材にコメントすることでポイントを獲得できます",
                completed: false,
                points: 10,
                type: "suggested",
                createdAt: new Date()
            });
        } else {
            // テイカータイプの場合はクイズ完了を推奨
            suggestedTasks.push({
                id: (0, _uuid.v4)(),
                title: "クイズに挑戦する",
                description: "クイズを完了してギバースコアを上げましょう",
                completed: false,
                points: 5,
                type: "suggested",
                createdAt: new Date()
            });
        }
        // ギバースコアに応じたタスク
        if (giverScore < 10) {
            suggestedTasks.push({
                id: (0, _uuid.v4)(),
                title: "ギバー診断を完了する",
                description: "あなたのギバータイプを知りましょう",
                completed: false,
                points: 20,
                type: "suggested",
                createdAt: new Date()
            });
        } else if (giverScore < 30) {
            // 中級者向けタスク
            suggestedTasks.push({
                id: (0, _uuid.v4)(),
                title: "週間学習目標を設定する",
                description: "目標設定でモチベーションを維持しましょう",
                completed: false,
                points: 5,
                type: "weekly",
                createdAt: new Date()
            });
        }
        setTasks(suggestedTasks);
    }, [
        giverType,
        giverScore,
        activityCounts
    ]);
    // ローカルストレージからタスクを読み込み
    (0, _react.useEffect)(()=>{
        const storedTasks = localStorage.getItem("shiftWithTasks");
        if (storedTasks) {
            try {
                const parsedTasks = JSON.parse(storedTasks);
                // 日付文字列をDateオブジェクトに変換
                const tasksWithDates = parsedTasks.map((task)=>({
                        ...task,
                        createdAt: new Date(task.createdAt),
                        dueDate: task.dueDate ? new Date(task.dueDate) : undefined
                    }));
                setTasks(tasksWithDates);
            } catch (error) {
                console.error("Failed to parse stored tasks:", error);
                setTasks([]);
            }
        } else {
            // 初回表示時は推奨タスクを生成
            generateSuggestedTasks();
        }
    }, [
        generateSuggestedTasks
    ]);
    // タスクが変更されたらローカルストレージに保存
    (0, _react.useEffect)(()=>{
        if (tasks.length > 0) {
            localStorage.setItem("shiftWithTasks", JSON.stringify(tasks));
        }
    }, [
        tasks
    ]);
    // タスク完了状態を切り替え
    const toggleTaskCompletion = (taskId)=>{
        setTasks((prevTasks)=>prevTasks.map((task)=>task.id === taskId ? {
                    ...task,
                    completed: !task.completed
                } : task));
    };
    // 新しいタスクを追加
    const addNewTask = ()=>{
        if (!newTaskTitle.trim()) return;
        const newTask = {
            id: (0, _uuid.v4)(),
            title: newTaskTitle.trim(),
            completed: false,
            points: 0,
            type: "custom",
            createdAt: new Date()
        };
        setTasks((prevTasks)=>[
                ...prevTasks,
                newTask
            ]);
        setNewTaskTitle("");
        setShowAddForm(false);
    };
    // タスクを削除
    const deleteTask = (taskId)=>{
        setTasks((prevTasks)=>prevTasks.filter((task)=>task.id !== taskId));
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: `todo-list bg-white rounded-lg shadow-md p-5 ${className}`,
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "flex justify-between items-center mb-4",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("h3", {
                        className: "font-bold text-lg flex items-center",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_fa.FaTasks, {
                                className: "mr-2 text-blue-500"
                            }),
                            "今日のタスク"
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("button", {
                        onClick: ()=>setShowAddForm(!showAddForm),
                        className: "text-sm text-blue-500 hover:text-blue-700 flex items-center",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_fa.FaPlus, {
                                className: "mr-1"
                            }),
                            showAddForm ? "キャンセル" : "タスク追加"
                        ]
                    })
                ]
            }),
            showAddForm && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "mb-4 flex",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                        type: "text",
                        value: newTaskTitle,
                        onChange: (e)=>setNewTaskTitle(e.target.value),
                        placeholder: "新しいタスクを入力...",
                        className: "flex-1 p-2 border rounded-l focus:outline-none focus:ring-2 focus:ring-blue-300",
                        onKeyDown: (e)=>e.key === "Enter" && addNewTask()
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                        onClick: addNewTask,
                        className: "bg-blue-500 text-white px-3 py-2 rounded-r hover:bg-blue-600",
                        children: "追加"
                    })
                ]
            }),
            tasks.length === 0 ? /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "text-center py-6 text-gray-500",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                        children: "タスクがありません"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                        className: "text-sm mt-1",
                        children: "「タスク追加」ボタンから新しいタスクを作成できます"
                    })
                ]
            }) : /*#__PURE__*/ (0, _jsxruntime.jsx)("ul", {
                className: "space-y-2",
                children: tasks.map((task)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("li", {
                        className: `flex items-start p-3 rounded border ${task.completed ? "bg-gray-50 border-gray-200 text-gray-500" : "bg-blue-50 border-blue-100"}`,
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                onClick: ()=>toggleTaskCompletion(task.id),
                                className: `mt-1 mr-3 flex-shrink-0 ${task.completed ? "text-green-500" : "text-gray-400 hover:text-blue-500"}`,
                                children: task.completed ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_fa.FaCheckCircle, {
                                    size: 18
                                }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_fa.FaRegCircle, {
                                    size: 18
                                })
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex-1",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                        className: `font-medium ${task.completed ? "line-through" : ""}`,
                                        children: [
                                            task.title,
                                            task.points > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                className: "ml-2 text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded",
                                                children: [
                                                    "+",
                                                    task.points,
                                                    "ポイント"
                                                ]
                                            })
                                        ]
                                    }),
                                    task.description && /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                        className: "text-xs text-gray-600 mt-1",
                                        children: task.description
                                    })
                                ]
                            }),
                            task.type === "custom" && /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                onClick: ()=>deleteTask(task.id),
                                className: "text-gray-400 hover:text-red-500 ml-2",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("svg", {
                                    xmlns: "http://www.w3.org/2000/svg",
                                    width: "16",
                                    height: "16",
                                    viewBox: "0 0 24 24",
                                    fill: "none",
                                    stroke: "currentColor",
                                    strokeWidth: "2",
                                    strokeLinecap: "round",
                                    strokeLinejoin: "round",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("path", {
                                            d: "M3 6h18"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("path", {
                                            d: "M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"
                                        })
                                    ]
                                })
                            })
                        ]
                    }, task.id))
            })
        ]
    });
};
const _default = TodoList;

//# sourceMappingURL=data:application/json;base64,