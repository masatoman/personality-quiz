{"version":3,"sources":["/Users/master/Local Sites/testcursor/jest.setup.js"],"sourcesContent":["// Jest-DOMの拡張機能を読み込み\nimport '@testing-library/jest-dom';\n\n// Reactの無限ループエラーを抑制\nconst originalConsoleError = console.error;\nconsole.error = (...args) => {\n  // Maximum update depthエラーを無視\n  if (args[0] && args[0].includes && args[0].includes('Maximum update depth exceeded')) {\n    return;\n  }\n  originalConsoleError(...args);\n};\n\n// テスト時間を短縮するため、各テストにタイムアウトを設定\njest.setTimeout(5000);\n\n// カスタムマッチャー\nexpect.extend({\n  // 基本的なカスタムマッチャー例\n  toBeWithinRange(received, floor, ceiling) {\n    const pass = received >= floor && received <= ceiling;\n    if (pass) {\n      return {\n        message: () => `expected ${received} not to be within range ${floor} - ${ceiling}`,\n        pass: true,\n      };\n    } else {\n      return {\n        message: () => `expected ${received} to be within range ${floor} - ${ceiling}`,\n        pass: false,\n      };\n    }\n  }\n});\n\n// 注: TypeScriptの型定義はJSDocコメントで代用するか、\n// 別の.d.tsファイルに記述することをお勧めします。 "],"names":["originalConsoleError","console","error","args","includes","jest","setTimeout","expect","extend","toBeWithinRange","received","floor","ceiling","pass","message"],"mappings":"AAAA,qBAAqB;;;;;QACd;AAEP,oBAAoB;AACpB,MAAMA,uBAAuBC,QAAQC,KAAK;AAC1CD,QAAQC,KAAK,GAAG,CAAC,GAAGC;IAClB,6BAA6B;IAC7B,IAAIA,IAAI,CAAC,EAAE,IAAIA,IAAI,CAAC,EAAE,CAACC,QAAQ,IAAID,IAAI,CAAC,EAAE,CAACC,QAAQ,CAAC,kCAAkC;QACpF;IACF;IACAJ,wBAAwBG;AAC1B;AAEA,8BAA8B;AAC9BE,KAAKC,UAAU,CAAC;AAEhB,YAAY;AACZC,OAAOC,MAAM,CAAC;IACZ,iBAAiB;IACjBC,iBAAgBC,QAAQ,EAAEC,KAAK,EAAEC,OAAO;QACtC,MAAMC,OAAOH,YAAYC,SAASD,YAAYE;QAC9C,IAAIC,MAAM;YACR,OAAO;gBACLC,SAAS,IAAM,CAAC,SAAS,EAAEJ,SAAS,wBAAwB,EAAEC,MAAM,GAAG,EAAEC,QAAQ,CAAC;gBAClFC,MAAM;YACR;QACF,OAAO;YACL,OAAO;gBACLC,SAAS,IAAM,CAAC,SAAS,EAAEJ,SAAS,oBAAoB,EAAEC,MAAM,GAAG,EAAEC,QAAQ,CAAC;gBAC9EC,MAAM;YACR;QACF;IACF;AACF,IAEA,qCAAqC;CACrC,8BAA8B"}