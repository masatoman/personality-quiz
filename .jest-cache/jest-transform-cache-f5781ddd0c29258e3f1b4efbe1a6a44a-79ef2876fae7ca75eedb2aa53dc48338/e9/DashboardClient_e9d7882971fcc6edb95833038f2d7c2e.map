{"version":3,"sources":["/Users/master/Local Sites/testcursor/src/components/dashboard/DashboardClient.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ActivitySummary from './ActivitySummary';\nimport DashboardLayout from './DashboardLayout';\nimport TodoList from '../features/todo/TodoList';\nimport GiverScoreDisplay from '../features/giver-score/GiverScoreDisplay';\nimport GiverScoreChart from './GiverScoreChart';\nimport ActivityPieChart from './ActivityPieChart';\nimport { FaChartLine, FaCalendarAlt } from 'react-icons/fa';\n\n// モックデータ\nconst initialUserData = {\n  id: '',\n  name: 'ユーザー',\n  email: 'user@example.com',\n  score: 0,\n  activities: 0,\n  level: 1,\n  nextLevelScore: 10,\n  progressPercentage: 0,\n  personalityType: 'matcher' as 'giver' | 'taker' | 'matcher',\n};\n\nconst DashboardClient: React.FC = () => {\n  const [userId, setUserId] = useState<string>('');\n  const [userData, setUserData] = useState(initialUserData);\n  const [activityCounts, setActivityCounts] = useState({\n    CREATE_CONTENT: 0,\n    PROVIDE_FEEDBACK: 0,\n    CONSUME_CONTENT: 0,\n    COMPLETE_QUIZ: 0\n  });\n  const [scoreHistory, setScoreHistory] = useState([\n    { date: '2023-04-01', score: 0 },\n    { date: '2023-04-08', score: 10 },\n    { date: '2023-04-15', score: 15 },\n    { date: '2023-04-22', score: 20 },\n    { date: '2023-04-29', score: 25 },\n    { date: '2023-05-06', score: 40 },\n    { date: '2023-05-13', score: 50 }\n  ]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // クライアントサイドでのみ実行される初期化\n  useEffect(() => {\n    // 既存のIDを取得するか新規生成\n    const storedUserId = localStorage.getItem('userId');\n    const newUserId = storedUserId || 'user_' + uuidv4();\n    \n    if (!storedUserId) {\n      localStorage.setItem('userId', newUserId);\n    }\n    \n    setUserId(newUserId);\n    \n    // ユーザーデータの初期化（実際の実装ではAPI等から取得）\n    const fetchUserData = async () => {\n      try {\n        setIsLoading(true);\n        \n        // ローカルストレージからデータを取得\n        const localScore = parseInt(localStorage.getItem('giverScore') || '0', 10);\n        const localActivitiesStr = localStorage.getItem('activities');\n        \n        let localActivities = [];\n        if (localActivitiesStr) {\n          try {\n            localActivities = JSON.parse(localActivitiesStr);\n          } catch (error) {\n            console.error('ローカルストレージからの活動データの解析に失敗しました:', error);\n          }\n        }\n        \n        // APIからデータ取得（失敗したらローカルデータを使用）\n        try {\n          const response = await fetch(`/api/activities/user/${newUserId}`);\n          \n          if (!response.ok) {\n            throw new Error(`API error: ${response.status}`);\n          }\n          \n          const data = await response.json();\n          \n          if (data.success) {\n            // ユーザーデータを更新\n            const giverScore = data.data.giverScore || 0;\n            const activities = data.data.activities || [];\n            \n            // ギバースコアに基づくレベル計算（例: 10点ごとに1レベル、最大レベル10）\n            const level = Math.min(10, Math.floor(giverScore / 10) + 1);\n            // 次のレベルまでのスコア\n            const nextLevelScore = level * 10;\n            // 現在のレベル内での進捗率\n            const progressPercentage = Math.min(100, ((giverScore % 10) / 10) * 100);\n            // ギバータイプの判定\n            const personalityType = giverScore >= 67 ? 'giver' : (giverScore >= 34 ? 'matcher' : 'taker');\n            \n            setUserData({\n              id: newUserId,\n              name: initialUserData.name,\n              email: initialUserData.email,\n              score: giverScore,\n              activities: activities.length,\n              level,\n              nextLevelScore,\n              progressPercentage,\n              personalityType: personalityType as 'giver' | 'taker' | 'matcher',\n            });\n            \n            // アクティビティのカウント\n            const counts = {\n              CREATE_CONTENT: activities.filter((a: any) => a.activityType === 'CREATE_CONTENT').length,\n              PROVIDE_FEEDBACK: activities.filter((a: any) => a.activityType === 'PROVIDE_FEEDBACK').length,\n              CONSUME_CONTENT: activities.filter((a: any) => a.activityType === 'CONSUME_CONTENT').length,\n              COMPLETE_QUIZ: activities.filter((a: any) => a.activityType === 'COMPLETE_QUIZ').length\n            };\n            setActivityCounts(counts);\n            \n            // キャッシュのために更新\n            localStorage.setItem('activities', JSON.stringify(activities));\n            localStorage.setItem('giverScore', giverScore.toString());\n          } else {\n            throw new Error(data.error || 'Unknown error');\n          }\n        } catch (apiError) {\n          console.error('APIからのデータ取得に失敗しました:', apiError);\n          \n          // APIエラーの場合、ローカルデータを使用\n          const level = Math.min(10, Math.floor(localScore / 10) + 1);\n          const nextLevelScore = level * 10;\n          const progressPercentage = Math.min(100, ((localScore % 10) / 10) * 100);\n          const personalityType = localScore >= 67 ? 'giver' : (localScore >= 34 ? 'matcher' : 'taker');\n          \n          setUserData({\n            id: newUserId,\n            name: initialUserData.name,\n            email: initialUserData.email,\n            score: localScore,\n            activities: localActivities.length,\n            level,\n            nextLevelScore,\n            progressPercentage,\n            personalityType: personalityType as 'giver' | 'taker' | 'matcher',\n          });\n          \n          // アクティビティのカウント\n          const counts = {\n            CREATE_CONTENT: localActivities.filter((a: any) => a.activityType === 'CREATE_CONTENT').length,\n            PROVIDE_FEEDBACK: localActivities.filter((a: any) => a.activityType === 'PROVIDE_FEEDBACK').length,\n            CONSUME_CONTENT: localActivities.filter((a: any) => a.activityType === 'CONSUME_CONTENT').length,\n            COMPLETE_QUIZ: localActivities.filter((a: any) => a.activityType === 'COMPLETE_QUIZ').length\n          };\n          setActivityCounts(counts);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    \n    fetchUserData();\n  }, []);\n  \n  if (isLoading) {\n    return (\n      <DashboardLayout>\n        <div className=\"flex justify-center items-center min-h-[50vh]\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"></div>\n        </div>\n      </DashboardLayout>\n    );\n  }\n\n  return (\n    <DashboardLayout>\n      {/* ウェルカムセクション */}\n      <div className=\"mb-6\">\n        <h1 className=\"text-2xl font-bold text-gray-800 mb-2\">こんにちは、{userData.name}さん</h1>\n        <p className=\"text-gray-600\">あなたの活動状況とギバースコアを確認しましょう</p>\n      </div>\n\n      {/* 活動サマリーとギバースコア */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-12 gap-4 md:gap-6 mb-6\">\n        <div className=\"lg:col-span-8\">\n          <ActivitySummary\n            createdMaterialsCount={activityCounts.CREATE_CONTENT}\n            earnedPoints={userData.score}\n            viewedMaterialsCount={activityCounts.CONSUME_CONTENT}\n          />\n        </div>\n        <div className=\"lg:col-span-4\">\n          <GiverScoreDisplay userData={userData} />\n        </div>\n      </div>\n      \n      {/* データ可視化チャート */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4 md:gap-6 mb-6\">\n        <GiverScoreChart data={scoreHistory} height={300} />\n        <ActivityPieChart activityCounts={activityCounts} height={300} />\n      </div>\n      \n      {/* 最近の活動とTODO */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 md:gap-6\">\n        <div>\n          <div className=\"bg-white rounded-lg shadow-md p-4 sm:p-6\">\n            <h2 className=\"text-lg font-bold mb-4 flex items-center\">\n              <FaChartLine className=\"mr-2 text-blue-500\" />\n              最近の活動\n            </h2>\n            {userData.activities > 0 ? (\n              <ul className=\"space-y-2\">\n                <li className=\"p-3 bg-blue-50 rounded border border-blue-100\">\n                  <div className=\"flex justify-between\">\n                    <span className=\"font-medium\">ギバー診断完了</span>\n                    <span className=\"text-sm text-blue-600\">+20ポイント</span>\n                  </div>\n                </li>\n                {activityCounts.CREATE_CONTENT > 0 && (\n                  <li className=\"p-3 bg-green-50 rounded border border-green-100\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"font-medium\">教材作成</span>\n                      <span className=\"text-sm text-green-600\">+10ポイント</span>\n                    </div>\n                  </li>\n                )}\n                {activityCounts.CONSUME_CONTENT > 0 && (\n                  <li className=\"p-3 bg-purple-50 rounded border border-purple-100\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"font-medium\">教材閲覧</span>\n                      <span className=\"text-sm text-purple-600\">+1ポイント</span>\n                    </div>\n                  </li>\n                )}\n                {activityCounts.PROVIDE_FEEDBACK > 0 && (\n                  <li className=\"p-3 bg-amber-50 rounded border border-amber-100\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"font-medium\">フィードバック提供</span>\n                      <span className=\"text-sm text-amber-600\">+5ポイント</span>\n                    </div>\n                  </li>\n                )}\n              </ul>\n            ) : (\n              <div className=\"text-center py-6 text-gray-500\">\n                <p>まだ活動がありません</p>\n                <p className=\"text-sm mt-1\">活動を開始してポイントを獲得しましょう</p>\n              </div>\n            )}\n          </div>\n        </div>\n        \n        <div>\n          <TodoList />\n          \n          <div className=\"bg-white rounded-lg shadow-md p-4 sm:p-6 mt-4 md:mt-6\">\n            <h2 className=\"text-lg font-bold mb-4 flex items-center\">\n              <FaCalendarAlt className=\"mr-2 text-blue-500\" />\n              次のイベント\n            </h2>\n            <div className=\"p-3 bg-yellow-50 rounded border border-yellow-100\">\n              <p className=\"font-medium\">ギバーコミュニティミーティング</p>\n              <p className=\"text-sm text-gray-600 mt-1\">5月10日 19:00 - オンライン</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </DashboardLayout>\n  );\n};\n\nexport default DashboardClient; "],"names":["initialUserData","id","name","email","score","activities","level","nextLevelScore","progressPercentage","personalityType","DashboardClient","userId","setUserId","useState","userData","setUserData","activityCounts","setActivityCounts","CREATE_CONTENT","PROVIDE_FEEDBACK","CONSUME_CONTENT","COMPLETE_QUIZ","scoreHistory","setScoreHistory","date","isLoading","setIsLoading","useEffect","storedUserId","localStorage","getItem","newUserId","uuidv4","setItem","fetchUserData","localScore","parseInt","localActivitiesStr","localActivities","JSON","parse","error","console","response","fetch","ok","Error","status","data","json","success","giverScore","Math","min","floor","length","counts","filter","a","activityType","stringify","toString","apiError","DashboardLayout","div","className","h1","p","ActivitySummary","createdMaterialsCount","earnedPoints","viewedMaterialsCount","GiverScoreDisplay","GiverScoreChart","height","ActivityPieChart","h2","FaChartLine","ul","li","span","TodoList","FaCalendarAlt"],"mappings":"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"}