{"version":3,"sources":["/Users/master/Local Sites/testcursor/src/lib/api.ts"],"sourcesContent":["import supabase, { Database } from './supabase';\nimport { PersonalityType, TypeTotals, Stats } from '@/types/quiz';\n\n// APIエンドポイントのベースパス\nexport const API_BASE = '/api';\n\n// ユーザープロファイル関連の型定義\nexport type UserProfile = Database['public']['Tables']['profiles']['Row'] & {\n  personality_type: PersonalityType | null;\n  giver_score: number;\n  points: number;\n};\n\n// ユーザー活動の種類\nexport type ActivityType = \n  | 'CREATE_CONTENT'\n  | 'PROVIDE_FEEDBACK' \n  | 'CONSUME_CONTENT'\n  | 'RECEIVE_FEEDBACK'\n  | 'SHARE_RESOURCE'\n  | 'ASK_QUESTION';\n\n// 活動ポイントの設定\nexport const ACTIVITY_POINTS = {\n  CREATE_CONTENT: 10,\n  PROVIDE_FEEDBACK: 3,\n  CONSUME_CONTENT: 1,\n  RECEIVE_FEEDBACK: 0,\n  SHARE_RESOURCE: 2,\n  ASK_QUESTION: 1,\n};\n\n// ユーザープロファイル関連の関数\nexport async function getProfile(userId: string): Promise<UserProfile | null> {\n  try {\n    // プロファイル情報を取得\n    const { data: profileData, error: profileError } = await supabase\n      .from('profiles')\n      .select('*')\n      .eq('user_id', userId)\n      .single();\n\n    if (profileError) {\n      console.error('プロファイル取得エラー:', profileError);\n      return null;\n    }\n\n    // ユーザー情報を取得\n    const { data: userData, error: userError } = await supabase\n      .from('users')\n      .select('personality_type, giver_score, points')\n      .eq('id', userId)\n      .single();\n\n    if (userError) {\n      console.error('ユーザー情報取得エラー:', userError);\n      return null;\n    }\n\n    // プロファイル情報とユーザー情報を結合\n    return {\n      ...profileData,\n      personality_type: userData.personality_type as PersonalityType | null,\n      giver_score: userData.giver_score,\n      points: userData.points,\n    };\n  } catch (error) {\n    console.error('プロファイル取得中にエラーが発生しました:', error);\n    return null;\n  }\n}\n\n// プロファイル作成・更新\nexport async function upsertProfile(\n  userId: string,\n  data: {\n    display_name: string;\n    avatar_url?: string;\n    bio?: string;\n    personality_type?: PersonalityType;\n  }\n): Promise<boolean> {\n  try {\n    // プロファイル情報を更新\n    const { error: profileError } = await supabase\n      .from('profiles')\n      .upsert({\n        user_id: userId,\n        display_name: data.display_name,\n        avatar_url: data.avatar_url || null,\n        bio: data.bio || null,\n      });\n\n    if (profileError) {\n      console.error('プロファイル更新エラー:', profileError);\n      return false;\n    }\n\n    // パーソナリティタイプが指定されている場合は、ユーザー情報も更新\n    if (data.personality_type) {\n      const { error: userError } = await supabase\n        .from('users')\n        .update({ personality_type: data.personality_type })\n        .eq('id', userId);\n\n      if (userError) {\n        console.error('ユーザー情報更新エラー:', userError);\n        return false;\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error('プロファイル更新中にエラーが発生しました:', error);\n    return false;\n  }\n}\n\n// 活動ログの記録\nexport async function logActivity(\n  userId: string,\n  activityType: ActivityType,\n  referenceId?: string\n): Promise<boolean> {\n  try {\n    const points = ACTIVITY_POINTS[activityType];\n\n    // 活動ログを記録\n    const { error: activityError } = await supabase.from('activities').insert({\n      user_id: userId,\n      activity_type: activityType,\n      reference_id: referenceId || null,\n      points,\n    });\n\n    if (activityError) {\n      console.error('活動ログ記録エラー:', activityError);\n      return false;\n    }\n\n    // ユーザーのポイントを更新\n    const { error: pointsError } = await supabase.rpc('increment_user_points', {\n      user_id: userId,\n      points_to_add: points,\n    });\n\n    if (pointsError) {\n      console.error('ポイント更新エラー:', pointsError);\n      return false;\n    }\n\n    // ギバースコアの更新（特定のアクティビティタイプの場合）\n    if (['CREATE_CONTENT', 'PROVIDE_FEEDBACK', 'SHARE_RESOURCE'].includes(activityType)) {\n      // ギバースコアを更新する仕組み（将来実装）\n      // 今はポイントの10%をギバースコアに加算する簡易的な実装\n      const giverScoreIncrement = Math.round(points * 0.1);\n      \n      const { error: giverScoreError } = await supabase.rpc('increment_giver_score', {\n        user_id: userId,\n        score_to_add: giverScoreIncrement,\n      });\n\n      if (giverScoreError) {\n        console.error('ギバースコア更新エラー:', giverScoreError);\n        // ギバースコアの更新に失敗しても、活動ログとポイントの記録は成功とみなす\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error('活動ログ記録中にエラーが発生しました:', error);\n    return false;\n  }\n}\n\n// ユーザーの活動ログを取得\nexport async function getUserActivities(userId: string, limit = 10) {\n  try {\n    const { data, error } = await supabase\n      .from('activities')\n      .select('*')\n      .eq('user_id', userId)\n      .order('created_at', { ascending: false })\n      .limit(limit);\n\n    if (error) {\n      console.error('活動ログ取得エラー:', error);\n      return [];\n    }\n\n    return data;\n  } catch (error) {\n    console.error('活動ログ取得中にエラーが発生しました:', error);\n    return [];\n  }\n} "],"names":["ACTIVITY_POINTS","API_BASE","getProfile","getUserActivities","logActivity","upsertProfile","CREATE_CONTENT","PROVIDE_FEEDBACK","CONSUME_CONTENT","RECEIVE_FEEDBACK","SHARE_RESOURCE","ASK_QUESTION","userId","data","profileData","error","profileError","supabase","from","select","eq","single","console","userData","userError","personality_type","giver_score","points","upsert","user_id","display_name","avatar_url","bio","update","activityType","referenceId","activityError","insert","activity_type","reference_id","pointsError","rpc","points_to_add","includes","giverScoreIncrement","Math","round","giverScoreError","score_to_add","limit","order","ascending"],"mappings":"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"}