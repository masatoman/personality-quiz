593b88197686c4b8b8d4961ddb558a57
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _react1 = require("@testing-library/react");
require("@testing-library/jest-dom");
const _TodoList = /*#__PURE__*/ _interop_require_default(require("../../features/todo/TodoList"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
/**
 * TodoListコンポーネントの単体テスト
 * テスト対象: タスク管理UIコンポーネントの機能と表示
 */ // モックデータ
const mockGiverScore = 15;
const mockGiverType = "matcher";
const mockActivityCounts = {
    CREATE_CONTENT: 1,
    PROVIDE_FEEDBACK: 2,
    CONSUME_CONTENT: 5,
    COMPLETE_QUIZ: 3
};
// localStorage のモック
const mockLocalStorage = {};
Object.defineProperty(window, "localStorage", {
    value: {
        getItem: jest.fn((key)=>mockLocalStorage[key] || null),
        setItem: jest.fn((key, value)=>{
            mockLocalStorage[key] = value.toString();
        }),
        removeItem: jest.fn((key)=>{
            delete mockLocalStorage[key];
        }),
        clear: jest.fn(()=>{
            Object.keys(mockLocalStorage).forEach((key)=>{
                delete mockLocalStorage[key];
            });
        })
    },
    writable: true
});
describe("TodoList コンポーネント", ()=>{
    beforeEach(()=>{
        // テスト前に localStorage をクリア
        window.localStorage.clear();
        jest.clearAllMocks();
    });
    test("コンポーネントが正しくレンダリングされる", ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_TodoList.default, {
            giverScore: mockGiverScore,
            giverType: mockGiverType,
            activityCounts: mockActivityCounts
        }));
        // ヘッダーが表示されていることを確認
        expect(_react1.screen.getByText("今日のタスク")).toBeInTheDocument();
        // 「タスク追加」ボタンが表示されていることを確認
        expect(_react1.screen.getByText("タスク追加")).toBeInTheDocument();
        // 初回表示時に推奨タスクが生成されていることを確認
        expect(window.localStorage.setItem).toHaveBeenCalled();
    });
    test("タスク追加フォームを表示/非表示できる", ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_TodoList.default, {}));
        // 初期状態ではフォームは非表示
        expect(_react1.screen.queryByPlaceholderText("新しいタスクを入力...")).not.toBeInTheDocument();
        // 「タスク追加」ボタンをクリック
        _react1.fireEvent.click(_react1.screen.getByText("タスク追加"));
        // フォームが表示される
        expect(_react1.screen.getByPlaceholderText("新しいタスクを入力...")).toBeInTheDocument();
        // 「キャンセル」ボタンをクリック
        _react1.fireEvent.click(_react1.screen.getByText("キャンセル"));
        // フォームが非表示になる
        expect(_react1.screen.queryByPlaceholderText("新しいタスクを入力...")).not.toBeInTheDocument();
    });
    test("新しいタスクを追加できる", async ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_TodoList.default, {}));
        // 「タスク追加」ボタンをクリック
        _react1.fireEvent.click(_react1.screen.getByText("タスク追加"));
        // 新しいタスクを入力
        const taskInput = _react1.screen.getByPlaceholderText("新しいタスクを入力...");
        _react1.fireEvent.change(taskInput, {
            target: {
                value: "新しいテストタスク"
            }
        });
        // 「追加」ボタンをクリック
        _react1.fireEvent.click(_react1.screen.getByText("追加"));
        // タスクが追加されたことを確認
        expect(_react1.screen.getByText("新しいテストタスク")).toBeInTheDocument();
        // localStorage に保存されたことを確認
        expect(window.localStorage.setItem).toHaveBeenCalled();
    });
    test("タスクの完了状態を切り替えられる", async ()=>{
        // localStorage にタスクデータをセット
        const mockTask = {
            id: "123",
            title: "テストタスク",
            completed: false,
            points: 5,
            type: "daily",
            createdAt: new Date().toISOString()
        };
        window.localStorage.setItem("shiftWithTasks", JSON.stringify([
            mockTask
        ]));
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_TodoList.default, {}));
        // 未完了状態のタスクが表示される
        const taskTitle = _react1.screen.getByText("テストタスク");
        expect(taskTitle).toBeInTheDocument();
        expect(taskTitle).not.toHaveClass("line-through");
        // 完了ボタンをクリック
        const completeButton = _react1.screen.getByRole("button", {
            name: ""
        });
        _react1.fireEvent.click(completeButton);
        // タスクが完了状態になることを確認
        await (0, _react1.waitFor)(()=>{
            expect(_react1.screen.getByText("テストタスク")).toHaveClass("line-through");
        });
        // localStorage が更新されたことを確認
        expect(window.localStorage.setItem).toHaveBeenCalledTimes(2); // 初期化と更新
    });
    test("カスタムタスクを削除できる", async ()=>{
        // localStorage にカスタムタスクデータをセット
        const mockTask = {
            id: "123",
            title: "カスタムタスク",
            completed: false,
            points: 0,
            type: "custom",
            createdAt: new Date().toISOString()
        };
        window.localStorage.setItem("shiftWithTasks", JSON.stringify([
            mockTask
        ]));
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_TodoList.default, {}));
        // カスタムタスクが表示される
        expect(_react1.screen.getByText("カスタムタスク")).toBeInTheDocument();
        // 削除ボタンをクリック
        const deleteButton = _react1.screen.getByRole("button", {
            name: ""
        });
        _react1.fireEvent.click(deleteButton);
        // タスクが削除されることを確認
        await (0, _react1.waitFor)(()=>{
            expect(_react1.screen.queryByText("カスタムタスク")).not.toBeInTheDocument();
        });
        // localStorage が更新されたことを確認
        expect(window.localStorage.setItem).toHaveBeenCalledTimes(2); // 初期化と更新
    });
    test("ギバータイプに基づいた推奨タスクが生成される", ()=>{
        // giverタイプでコンポーネントをレンダリング
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_TodoList.default, {
            giverScore: 70,
            giverType: "giver",
            activityCounts: {
                CREATE_CONTENT: 0,
                PROVIDE_FEEDBACK: 0,
                CONSUME_CONTENT: 0,
                COMPLETE_QUIZ: 0
            }
        }));
        // giverタイプ向けの推奨タスクが生成されることを確認
        expect(_react1.screen.getByText("教材を作成してみよう")).toBeInTheDocument();
        // クリーンアップして再テスト
        (0, _react1.cleanup)();
        window.localStorage.clear();
        // matcherタイプでコンポーネントをレンダリング
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_TodoList.default, {
            giverScore: 50,
            giverType: "matcher",
            activityCounts: {
                CREATE_CONTENT: 0,
                PROVIDE_FEEDBACK: 0,
                CONSUME_CONTENT: 0,
                COMPLETE_QUIZ: 0
            }
        }));
        // matcherタイプ向けの推奨タスクが生成されることを確認
        expect(_react1.screen.getByText("教材にフィードバックを提供する")).toBeInTheDocument();
    });
});

//# sourceMappingURL=data:application/json;base64,