{"version":3,"sources":["/Users/master/Local Sites/testcursor/src/utils/badgeEvaluator.ts"],"sourcesContent":["import { BadgeRequirement, BadgeType } from '@/types/badges';\nimport { ActivityType } from '@/types/learning';\n\n/**\n * バッジ評価ユーティリティクラス\n * 様々な条件に基づいてバッジ要件を評価するための拡張可能なクラス\n */\nexport class BadgeEvaluator {\n  /**\n   * 特定の要件が満たされているかどうかを評価\n   */\n  static evaluateRequirement(\n    requirement: BadgeRequirement, \n    activitySummary: Record<string, any>,\n    currentActivityType?: ActivityType\n  ): boolean {\n    if (!activitySummary) return false;\n\n    // アクティビティタイプに基づいたカウントを取得\n    const activityTypeKey = `${requirement.activityType}_count`;\n    const activityCount = activitySummary[activityTypeKey] || 0;\n\n    // 特殊条件の評価\n    if (this.hasSpecialCondition(requirement)) {\n      return this.evaluateSpecialCondition(requirement, activitySummary, currentActivityType);\n    }\n\n    // メタデータ条件の評価\n    if (requirement.metadata) {\n      return this.evaluateMetadataCondition(requirement, activitySummary, activityCount);\n    }\n\n    // 標準的なカウントベースの評価\n    return activityCount >= requirement.count;\n  }\n\n  /**\n   * 特殊条件を持つかどうかを確認\n   */\n  private static hasSpecialCondition(requirement: BadgeRequirement): boolean {\n    return !!requirement.condition;\n  }\n\n  /**\n   * 特殊条件を評価\n   */\n  private static evaluateSpecialCondition(\n    requirement: BadgeRequirement,\n    activitySummary: Record<string, any>,\n    currentActivityType?: ActivityType\n  ): boolean {\n    // 連続ログイン/アクティビティの評価\n    if (requirement.condition === 'consecutive' && requirement.activityType === 'daily_login') {\n      return (activitySummary.current_streak || 0) >= requirement.count;\n    }\n\n    // 他の特殊条件を追加可能\n    return false;\n  }\n\n  /**\n   * メタデータ条件を評価\n   */\n  private static evaluateMetadataCondition(\n    requirement: BadgeRequirement,\n    activitySummary: Record<string, any>,\n    activityCount: number\n  ): boolean {\n    const { metadata } = requirement;\n    \n    if (!metadata) return false;\n\n    // ユニークカテゴリ条件\n    if (metadata.unique_categories && requirement.activityType === 'complete_resource') {\n      const uniqueCategoriesCount = activitySummary.unique_categories_count || 0;\n      return uniqueCategoriesCount >= requirement.count;\n    }\n\n    // 時間制限付きのアクティビティ\n    if (metadata.time_limit && activitySummary.last_activity_time) {\n      const activityTime = activitySummary.last_activity_time;\n      return activityCount >= requirement.count && activityTime <= metadata.time_limit;\n    }\n\n    // スコア条件\n    if (metadata.score !== undefined && activitySummary.last_score) {\n      return activityCount >= requirement.count && activitySummary.last_score >= metadata.score;\n    }\n\n    // デフォルトはカウントベース\n    return activityCount >= requirement.count;\n  }\n\n  /**\n   * すべての要件が満たされているかチェック\n   */\n  static evaluateAllRequirements(\n    requirements: BadgeRequirement[],\n    activitySummary: Record<string, any>,\n    currentActivityType?: ActivityType\n  ): boolean {\n    return requirements.every(req => \n      this.evaluateRequirement(req, activitySummary, currentActivityType)\n    );\n  }\n} "],"names":["BadgeEvaluator","evaluateRequirement","requirement","activitySummary","currentActivityType","activityTypeKey","activityType","activityCount","hasSpecialCondition","evaluateSpecialCondition","metadata","evaluateMetadataCondition","count","condition","current_streak","unique_categories","uniqueCategoriesCount","unique_categories_count","time_limit","last_activity_time","activityTime","score","undefined","last_score","evaluateAllRequirements","requirements","every","req"],"mappings":";;;;+BAOaA;;;eAAAA;;;AAAN,MAAMA;IACX;;GAEC,GACD,OAAOC,oBACLC,WAA6B,EAC7BC,eAAoC,EACpCC,mBAAkC,EACzB;QACT,IAAI,CAACD,iBAAiB,OAAO;QAE7B,yBAAyB;QACzB,MAAME,kBAAkB,CAAC,EAAEH,YAAYI,YAAY,CAAC,MAAM,CAAC;QAC3D,MAAMC,gBAAgBJ,eAAe,CAACE,gBAAgB,IAAI;QAE1D,UAAU;QACV,IAAI,IAAI,CAACG,mBAAmB,CAACN,cAAc;YACzC,OAAO,IAAI,CAACO,wBAAwB,CAACP,aAAaC,iBAAiBC;QACrE;QAEA,aAAa;QACb,IAAIF,YAAYQ,QAAQ,EAAE;YACxB,OAAO,IAAI,CAACC,yBAAyB,CAACT,aAAaC,iBAAiBI;QACtE;QAEA,iBAAiB;QACjB,OAAOA,iBAAiBL,YAAYU,KAAK;IAC3C;IAEA;;GAEC,GACD,OAAeJ,oBAAoBN,WAA6B,EAAW;QACzE,OAAO,CAAC,CAACA,YAAYW,SAAS;IAChC;IAEA;;GAEC,GACD,OAAeJ,yBACbP,WAA6B,EAC7BC,eAAoC,EACpCC,mBAAkC,EACzB;QACT,oBAAoB;QACpB,IAAIF,YAAYW,SAAS,KAAK,iBAAiBX,YAAYI,YAAY,KAAK,eAAe;YACzF,OAAO,AAACH,CAAAA,gBAAgBW,cAAc,IAAI,CAAA,KAAMZ,YAAYU,KAAK;QACnE;QAEA,cAAc;QACd,OAAO;IACT;IAEA;;GAEC,GACD,OAAeD,0BACbT,WAA6B,EAC7BC,eAAoC,EACpCI,aAAqB,EACZ;QACT,MAAM,EAAEG,QAAQ,EAAE,GAAGR;QAErB,IAAI,CAACQ,UAAU,OAAO;QAEtB,aAAa;QACb,IAAIA,SAASK,iBAAiB,IAAIb,YAAYI,YAAY,KAAK,qBAAqB;YAClF,MAAMU,wBAAwBb,gBAAgBc,uBAAuB,IAAI;YACzE,OAAOD,yBAAyBd,YAAYU,KAAK;QACnD;QAEA,iBAAiB;QACjB,IAAIF,SAASQ,UAAU,IAAIf,gBAAgBgB,kBAAkB,EAAE;YAC7D,MAAMC,eAAejB,gBAAgBgB,kBAAkB;YACvD,OAAOZ,iBAAiBL,YAAYU,KAAK,IAAIQ,gBAAgBV,SAASQ,UAAU;QAClF;QAEA,QAAQ;QACR,IAAIR,SAASW,KAAK,KAAKC,aAAanB,gBAAgBoB,UAAU,EAAE;YAC9D,OAAOhB,iBAAiBL,YAAYU,KAAK,IAAIT,gBAAgBoB,UAAU,IAAIb,SAASW,KAAK;QAC3F;QAEA,gBAAgB;QAChB,OAAOd,iBAAiBL,YAAYU,KAAK;IAC3C;IAEA;;GAEC,GACD,OAAOY,wBACLC,YAAgC,EAChCtB,eAAoC,EACpCC,mBAAkC,EACzB;QACT,OAAOqB,aAAaC,KAAK,CAACC,CAAAA,MACxB,IAAI,CAAC1B,mBAAmB,CAAC0B,KAAKxB,iBAAiBC;IAEnD;AACF"}