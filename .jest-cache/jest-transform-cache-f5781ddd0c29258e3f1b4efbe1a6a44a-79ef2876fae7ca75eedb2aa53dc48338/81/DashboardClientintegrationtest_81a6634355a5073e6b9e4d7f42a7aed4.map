{"version":3,"sources":["/Users/master/Local Sites/testcursor/src/components/dashboard/__tests__/DashboardClient.integration.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, waitFor } from '@testing-library/react';\nimport '@testing-library/jest-dom';\nimport DashboardClient from '../DashboardClient';\n\n// コンポーネントをモック\njest.mock('../ActivitySummary', () => ({\n  __esModule: true,\n  default: ({ createdMaterialsCount, earnedPoints, viewedMaterialsCount }: any) => (\n    <div data-testid=\"activity-summary\">\n      <div>作成教材数: {createdMaterialsCount}</div>\n      <div>獲得ポイント: {earnedPoints}</div>\n      <div>閲覧教材数: {viewedMaterialsCount}</div>\n    </div>\n  ),\n}));\n\njest.mock('../DashboardLayout', () => ({\n  __esModule: true,\n  default: ({ children }: { children: React.ReactNode }) => (\n    <div data-testid=\"dashboard-layout\">{children}</div>\n  ),\n}));\n\njest.mock('../../features/todo/TodoList', () => ({\n  __esModule: true,\n  default: () => <div data-testid=\"todo-list\">ToDoリスト</div>\n}));\n\njest.mock('../../features/giver-score/GiverScoreDisplay', () => ({\n  __esModule: true,\n  default: ({ userData }: any) => (\n    <div data-testid=\"giver-score-display\">\n      <div>スコア: {userData.score}</div>\n      <div>レベル: {userData.level}</div>\n    </div>\n  ),\n}));\n\njest.mock('../GiverScoreChart', () => ({\n  __esModule: true,\n  default: ({ data }: any) => (\n    <div data-testid=\"giver-score-chart\">\n      <div>データポイント数: {data?.length || 0}</div>\n    </div>\n  ),\n}));\n\njest.mock('../ActivityPieChart', () => ({\n  __esModule: true,\n  default: ({ activityCounts }: any) => (\n    <div data-testid=\"activity-pie-chart\">\n      <div>教材作成: {activityCounts.CREATE_CONTENT}</div>\n      <div>フィードバック: {activityCounts.PROVIDE_FEEDBACK}</div>\n      <div>教材利用: {activityCounts.CONSUME_CONTENT}</div>\n      <div>クイズ完了: {activityCounts.COMPLETE_QUIZ}</div>\n    </div>\n  ),\n}));\n\n// localStorage モック\nconst localStorageMock = (() => {\n  let store: Record<string, string> = {};\n  return {\n    getItem: (key: string) => store[key] || null,\n    setItem: (key: string, value: string) => {\n      store[key] = value.toString();\n    },\n    clear: () => {\n      store = {};\n    }\n  };\n})();\n\nObject.defineProperty(window, 'localStorage', {\n  value: localStorageMock\n});\n\n// fetchのモック化\nbeforeEach(() => {\n  // @ts-ignore - fetchのモック\n  global.fetch = jest.fn().mockResolvedValue({\n    ok: false,\n    json: async () => ({}),\n  });\n});\n\ndescribe('DashboardClient', () => {\n  beforeEach(() => {\n    localStorageMock.clear();\n    jest.clearAllMocks();\n  });\n\n  it('renders loading state initially', () => {\n    render(<DashboardClient />);\n    \n    expect(screen.getByTestId('dashboard-layout')).toBeInTheDocument();\n    expect(screen.getByRole('status')).toBeInTheDocument(); // ローディングインジケータ\n  });\n\n  it('renders dashboard components after loading', async () => {\n    render(<DashboardClient />);\n    \n    // ローディング状態が終わるのを待つ\n    await waitFor(() => {\n      expect(screen.queryByRole('status')).not.toBeInTheDocument();\n    });\n    \n    // 各コンポーネントが表示されていることを確認\n    expect(screen.getByTestId('activity-summary')).toBeInTheDocument();\n    expect(screen.getByTestId('giver-score-display')).toBeInTheDocument();\n    expect(screen.getByTestId('giver-score-chart')).toBeInTheDocument();\n    expect(screen.getByTestId('activity-pie-chart')).toBeInTheDocument();\n    expect(screen.getByTestId('todo-list')).toBeInTheDocument();\n    \n    // 最近の活動と次のイベント情報も表示されていることを確認\n    expect(screen.getByText('最近の活動')).toBeInTheDocument();\n    expect(screen.getByText('次のイベント')).toBeInTheDocument();\n  });\n\n  it('uses localStorage data when fetch fails', async () => {\n    // ローカルストレージにダミーデータを設定\n    localStorageMock.setItem('giverScore', '30');\n    localStorageMock.setItem('activities', JSON.stringify([\n      { activityType: 'CREATE_CONTENT' },\n      { activityType: 'CONSUME_CONTENT' },\n      { activityType: 'CONSUME_CONTENT' }\n    ]));\n    \n    render(<DashboardClient />);\n    \n    // ローディング状態が終わるのを待つ\n    await waitFor(() => {\n      expect(screen.queryByRole('status')).not.toBeInTheDocument();\n    });\n    \n    // ローカルストレージのデータが正しく表示されているか確認\n    expect(screen.getByText('獲得ポイント: 30')).toBeInTheDocument();\n    expect(screen.getByText('教材作成: 1')).toBeInTheDocument();\n    expect(screen.getByText('教材利用: 2')).toBeInTheDocument();\n  });\n}); "],"names":["jest","mock","__esModule","default","createdMaterialsCount","earnedPoints","viewedMaterialsCount","div","data-testid","children","userData","score","level","data","length","activityCounts","CREATE_CONTENT","PROVIDE_FEEDBACK","CONSUME_CONTENT","COMPLETE_QUIZ","localStorageMock","store","getItem","key","setItem","value","toString","clear","Object","defineProperty","window","beforeEach","global","fetch","fn","mockResolvedValue","ok","json","describe","clearAllMocks","it","render","DashboardClient","expect","screen","getByTestId","toBeInTheDocument","getByRole","waitFor","queryByRole","not","getByText","JSON","stringify","activityType"],"mappings":"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"}