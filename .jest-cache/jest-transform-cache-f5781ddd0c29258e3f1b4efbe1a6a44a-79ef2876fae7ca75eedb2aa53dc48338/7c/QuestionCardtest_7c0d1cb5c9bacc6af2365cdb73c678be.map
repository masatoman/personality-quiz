{"version":3,"sources":["/Users/master/Local Sites/testcursor/src/components/__tests__/QuestionCard.test.tsx"],"sourcesContent":["import { render, screen, fireEvent } from '@testing-library/react';\nimport { QuestionCard } from '../QuestionCard';\n\n// モックデータ\nconst mockQuestion = {\n  id: 1,\n  text: '英語の授業で新しい単語を覚えるとき、どの方法が最も自然に感じますか？',\n  options: [\n    {\n      text: '単語の意味を他の人に説明しながら覚える',\n      score: { giver: 3, taker: 0, matcher: 1 }\n    },\n    {\n      text: '自分だけのオリジナルの例文を作って覚える',\n      score: { giver: 0, taker: 3, matcher: 1 }\n    },\n    {\n      text: '友達と例文を出し合って覚える',\n      score: { giver: 1, taker: 1, matcher: 3 }\n    }\n  ]\n};\n\ndescribe('QuestionCard', () => {\n  const mockOnAnswer = jest.fn();\n  const defaultProps = {\n    question: mockQuestion,\n    currentQuestion: 0,\n    totalQuestions: 10,\n    onAnswer: mockOnAnswer,\n    selectedOption: null,\n  };\n\n  beforeEach(() => {\n    mockOnAnswer.mockClear();\n  });\n\n  it('質問文とオプションが正しく表示される', () => {\n    render(<QuestionCard {...defaultProps} />);\n    \n    // 質問文の確認\n    expect(screen.getByText(mockQuestion.text)).toBeInTheDocument();\n    \n    // 選択肢の確認\n    mockQuestion.options.forEach((option) => {\n      expect(screen.getByText(option.text)).toBeInTheDocument();\n    });\n  });\n\n  it('進捗状況が正しく表示される', () => {\n    render(<QuestionCard {...defaultProps} />);\n    \n    expect(screen.getByText('質問 1 / 10')).toBeInTheDocument();\n    const progressBar = screen.getByRole('progressbar');\n    expect(progressBar).toHaveAttribute('aria-valuenow', '10');\n  });\n\n  it('オプションをクリックするとonAnswerが呼ばれる', () => {\n    render(<QuestionCard {...defaultProps} />);\n    \n    // 最初のオプションをクリック\n    fireEvent.click(screen.getByText(mockQuestion.options[0].text));\n    expect(mockOnAnswer).toHaveBeenCalledWith(0);\n  });\n\n  it('選択されたオプションに正しいスタイルが適用される', () => {\n    render(\n      <QuestionCard\n        {...defaultProps}\n        selectedOption={1}\n      />\n    );\n    \n    const selectedButton = screen.getByText(mockQuestion.options[1].text);\n    expect(selectedButton.closest('button')).toHaveClass('selected-option');\n  });\n\n  it('最後の質問で正しい進捗状況が表示される', () => {\n    render(\n      <QuestionCard\n        {...defaultProps}\n        currentQuestion={9}\n        totalQuestions={10}\n      />\n    );\n    \n    expect(screen.getByText('質問 10 / 10')).toBeInTheDocument();\n    const progressBar = screen.getByRole('progressbar');\n    expect(progressBar).toHaveAttribute('aria-valuenow', '100');\n  });\n\n  it('プログレスバーの色が正しく適用される', () => {\n    render(<QuestionCard {...defaultProps} />);\n    \n    const progressBarFill = screen.getByRole('progressbar');\n    expect(progressBarFill).toHaveClass('bg-primary');\n  });\n}); "],"names":["mockQuestion","id","text","options","score","giver","taker","matcher","describe","mockOnAnswer","jest","fn","defaultProps","question","currentQuestion","totalQuestions","onAnswer","selectedOption","beforeEach","mockClear","it","render","QuestionCard","expect","screen","getByText","toBeInTheDocument","forEach","option","progressBar","getByRole","toHaveAttribute","fireEvent","click","toHaveBeenCalledWith","selectedButton","closest","toHaveClass","progressBarFill"],"mappings":";;;;;uBAA0C;8BACb;AAE7B,SAAS;AACT,MAAMA,eAAe;IACnBC,IAAI;IACJC,MAAM;IACNC,SAAS;QACP;YACED,MAAM;YACNE,OAAO;gBAAEC,OAAO;gBAAGC,OAAO;gBAAGC,SAAS;YAAE;QAC1C;QACA;YACEL,MAAM;YACNE,OAAO;gBAAEC,OAAO;gBAAGC,OAAO;gBAAGC,SAAS;YAAE;QAC1C;QACA;YACEL,MAAM;YACNE,OAAO;gBAAEC,OAAO;gBAAGC,OAAO;gBAAGC,SAAS;YAAE;QAC1C;KACD;AACH;AAEAC,SAAS,gBAAgB;IACvB,MAAMC,eAAeC,KAAKC,EAAE;IAC5B,MAAMC,eAAe;QACnBC,UAAUb;QACVc,iBAAiB;QACjBC,gBAAgB;QAChBC,UAAUP;QACVQ,gBAAgB;IAClB;IAEAC,WAAW;QACTT,aAAaU,SAAS;IACxB;IAEAC,GAAG,sBAAsB;QACvBC,IAAAA,aAAM,gBAAC,qBAACC,0BAAY;YAAE,GAAGV,YAAY;;QAErC,SAAS;QACTW,OAAOC,aAAM,CAACC,SAAS,CAACzB,aAAaE,IAAI,GAAGwB,iBAAiB;QAE7D,SAAS;QACT1B,aAAaG,OAAO,CAACwB,OAAO,CAAC,CAACC;YAC5BL,OAAOC,aAAM,CAACC,SAAS,CAACG,OAAO1B,IAAI,GAAGwB,iBAAiB;QACzD;IACF;IAEAN,GAAG,iBAAiB;QAClBC,IAAAA,aAAM,gBAAC,qBAACC,0BAAY;YAAE,GAAGV,YAAY;;QAErCW,OAAOC,aAAM,CAACC,SAAS,CAAC,cAAcC,iBAAiB;QACvD,MAAMG,cAAcL,aAAM,CAACM,SAAS,CAAC;QACrCP,OAAOM,aAAaE,eAAe,CAAC,iBAAiB;IACvD;IAEAX,GAAG,8BAA8B;QAC/BC,IAAAA,aAAM,gBAAC,qBAACC,0BAAY;YAAE,GAAGV,YAAY;;QAErC,gBAAgB;QAChBoB,gBAAS,CAACC,KAAK,CAACT,aAAM,CAACC,SAAS,CAACzB,aAAaG,OAAO,CAAC,EAAE,CAACD,IAAI;QAC7DqB,OAAOd,cAAcyB,oBAAoB,CAAC;IAC5C;IAEAd,GAAG,4BAA4B;QAC7BC,IAAAA,aAAM,gBACJ,qBAACC,0BAAY;YACV,GAAGV,YAAY;YAChBK,gBAAgB;;QAIpB,MAAMkB,iBAAiBX,aAAM,CAACC,SAAS,CAACzB,aAAaG,OAAO,CAAC,EAAE,CAACD,IAAI;QACpEqB,OAAOY,eAAeC,OAAO,CAAC,WAAWC,WAAW,CAAC;IACvD;IAEAjB,GAAG,uBAAuB;QACxBC,IAAAA,aAAM,gBACJ,qBAACC,0BAAY;YACV,GAAGV,YAAY;YAChBE,iBAAiB;YACjBC,gBAAgB;;QAIpBQ,OAAOC,aAAM,CAACC,SAAS,CAAC,eAAeC,iBAAiB;QACxD,MAAMG,cAAcL,aAAM,CAACM,SAAS,CAAC;QACrCP,OAAOM,aAAaE,eAAe,CAAC,iBAAiB;IACvD;IAEAX,GAAG,sBAAsB;QACvBC,IAAAA,aAAM,gBAAC,qBAACC,0BAAY;YAAE,GAAGV,YAAY;;QAErC,MAAM0B,kBAAkBd,aAAM,CAACM,SAAS,CAAC;QACzCP,OAAOe,iBAAiBD,WAAW,CAAC;IACtC;AACF"}