13f3a30dfd07bd0ee49a7cf927aed1b9
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _recharts = require("recharts");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
// ギバースコア推移グラフコンポーネント
const GiverScoreChart = ({ userId })=>{
    const [scoreHistory, setScoreHistory] = (0, _react.useState)([]);
    const [timeSpan, setTimeSpan] = (0, _react.useState)("1ヶ月");
    const [loading, setLoading] = (0, _react.useState)(true);
    const [error, setError] = (0, _react.useState)(null);
    // 現在の日付から指定された期間分の過去の日付を取得
    const getDateBefore = (span)=>{
        const now = new Date();
        switch(span){
            case "1週間":
                return new Date(now.setDate(now.getDate() - 7));
            case "1ヶ月":
                return new Date(now.setMonth(now.getMonth() - 1));
            case "3ヶ月":
                return new Date(now.setMonth(now.getMonth() - 3));
            case "6ヶ月":
                return new Date(now.setMonth(now.getMonth() - 6));
            case "1年":
                return new Date(now.setFullYear(now.getFullYear() - 1));
            default:
                return new Date(now.setMonth(now.getMonth() - 1));
        }
    };
    // データ取得
    (0, _react.useEffect)(()=>{
        const fetchScoreHistory = async ()=>{
            try {
                setLoading(true);
                setError(null);
                const startDate = getDateBefore(timeSpan);
                const response = await fetch(`/api/user/giver-score-history?userId=${userId}&startDate=${startDate.toISOString()}`);
                if (!response.ok) {
                    throw new Error(`データの取得に失敗しました: ${response.status}`);
                }
                const data = await response.json();
                // データの形式を整える（日付でソート）
                const sortedData = data.history.sort((a, b)=>{
                    return new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime();
                });
                setScoreHistory(sortedData);
            } catch (error) {
                console.error("スコア履歴の取得に失敗しました:", error);
                setError("スコア履歴の取得中にエラーが発生しました。");
                // 開発用のモックデータ
                setScoreHistory(generateMockData(timeSpan));
            } finally{
                setLoading(false);
            }
        };
        fetchScoreHistory();
    }, [
        userId,
        timeSpan
    ]);
    // モックデータ生成関数（開発用）
    const generateMockData = (span)=>{
        const data = [];
        const now = new Date();
        const startDate = getDateBefore(span);
        let currentDate = new Date(startDate);
        // 基準となるスコア値
        let baseScore = 65;
        // 日付の間隔を決定
        let interval = 1; // デフォルトは1日ごと
        if (span === "3ヶ月" || span === "6ヶ月") {
            interval = 3; // 3日ごと
        } else if (span === "1年") {
            interval = 7; // 1週間ごと
        }
        // データ生成
        while(currentDate <= now){
            // ランダムな変動を加える（-3〜+5の範囲）
            const randomChange = Math.floor(Math.random() * 9) - 3;
            // 全体的に右肩上がりになるように調整
            const daysPassed = Math.floor((currentDate.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24));
            const trendIncrease = daysPassed * 0.05; // 日数が経つほどわずかに上昇
            // 最終スコアを計算（0〜100の範囲内に収める）
            baseScore = Math.min(100, Math.max(0, baseScore + randomChange + trendIncrease));
            data.push({
                userId,
                score: Math.round(baseScore),
                timestamp: new Date(currentDate)
            });
            // 次の日付に進む
            currentDate.setDate(currentDate.getDate() + interval);
        }
        return data;
    };
    // グラフ用にデータをフォーマット
    const formatDataForChart = ()=>{
        return scoreHistory.map((item)=>({
                date: new Date(item.timestamp).toLocaleDateString("ja-JP", {
                    month: "short",
                    day: "numeric"
                }),
                score: item.score
            }));
    };
    // 期間選択ハンドラ
    const handleTimeSpanChange = (span)=>{
        setTimeSpan(span);
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: "bg-white rounded-lg shadow-md p-6",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "flex justify-between items-center mb-6",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("h2", {
                        className: "text-xl font-bold",
                        children: "ギバースコア推移"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "flex space-x-2",
                        children: [
                            "1週間",
                            "1ヶ月",
                            "3ヶ月",
                            "6ヶ月",
                            "1年"
                        ].map((span)=>/*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                onClick: ()=>handleTimeSpanChange(span),
                                className: `px-3 py-1 text-sm rounded-full transition-colors ${timeSpan === span ? "bg-blue-600 text-white" : "bg-gray-100 text-gray-700 hover:bg-gray-200"}`,
                                children: span
                            }, span))
                    })
                ]
            }),
            loading ? /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "flex justify-center items-center h-64",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    className: "animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"
                })
            }) : error ? /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "flex justify-center items-center h-64 text-red-500",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                    children: error
                })
            }) : /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "h-64",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.ResponsiveContainer, {
                    width: "100%",
                    height: "100%",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_recharts.LineChart, {
                        data: formatDataForChart(),
                        margin: {
                            top: 5,
                            right: 30,
                            left: 20,
                            bottom: 5
                        },
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.CartesianGrid, {
                                strokeDasharray: "3 3"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.XAxis, {
                                dataKey: "date",
                                padding: {
                                    left: 10,
                                    right: 10
                                }
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.YAxis, {
                                domain: [
                                    0,
                                    100
                                ],
                                ticks: [
                                    0,
                                    25,
                                    50,
                                    75,
                                    100
                                ],
                                label: {
                                    value: "スコア",
                                    angle: -90,
                                    position: "insideLeft"
                                }
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.Tooltip, {
                                formatter: (value)=>[
                                        `${value}ポイント`,
                                        "ギバースコア"
                                    ],
                                labelFormatter: (label)=>`日付: ${label}`
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.Legend, {}),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.Line, {
                                type: "monotone",
                                dataKey: "score",
                                name: "ギバースコア",
                                stroke: "#6246EA",
                                strokeWidth: 2,
                                activeDot: {
                                    r: 8
                                }
                            })
                        ]
                    })
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "mt-4 text-sm text-gray-500",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                    children: "※ ギバースコアはギバー行動（教材作成、フィードバック提供など）に基づいて計算されます。"
                })
            })
        ]
    });
};
const _default = GiverScoreChart;

//# sourceMappingURL=data:application/json;base64,