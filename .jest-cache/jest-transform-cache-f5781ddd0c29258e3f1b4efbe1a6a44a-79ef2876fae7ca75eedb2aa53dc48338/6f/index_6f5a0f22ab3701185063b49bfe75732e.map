{"version":3,"sources":["/Users/master/Local Sites/testcursor/src/utils/giver-score/index.ts"],"sourcesContent":["import { ActivityType, ScoreChange, PersonalityType, MaterialType } from '@/types/quiz';\n\n// 活動タイプによるギバースコアへの影響度\nconst SCORE_WEIGHTS: Record<ActivityType, ScoreChange> = {\n  CREATE_CONTENT: {\n    giver: 5,\n    taker: 0,\n    matcher: 2\n  },\n  PROVIDE_FEEDBACK: {\n    giver: 3,\n    taker: 0,\n    matcher: 1\n  },\n  CONSUME_CONTENT: {\n    giver: 0,\n    taker: 2,\n    matcher: 1\n  },\n  RECEIVE_FEEDBACK: {\n    giver: 0,\n    taker: 1,\n    matcher: 1\n  },\n  SHARE_RESOURCE: {\n    giver: 2,\n    taker: 0,\n    matcher: 1\n  },\n  ASK_QUESTION: {\n    giver: 0,\n    taker: 1,\n    matcher: 1\n  }\n};\n\n// 教材タイプによる重み付け係数\nconst MATERIAL_TYPE_MULTIPLIERS: Record<MaterialType, number> = {\n  ARTICLE: 1.0,      // 記事は基本値\n  VIDEO: 1.2,        // 動画は高い制作コストを反映\n  QUIZ: 1.5,         // クイズは高いインタラクティブ性を反映\n  FLASHCARD: 1.3,    // フラッシュカードはインタラクティブ性を反映\n  EXERCISE: 1.4,     // 練習問題は高い教育効果を反映\n  EBOOK: 1.1,        // eBookは長いコンテンツを反映\n  AUDIO: 1.1,        // オーディオは聴覚学習を反映\n  OTHER: 1.0         // その他は基本値\n};\n\n// 時間経過による減衰係数\n// 日数に基づく減衰率を計算（30日で50%減衰するような指数関数）\nexport const calculateTimeDecay = (daysSinceActivity: number): number => {\n  // 指数減衰パラメータ（30日で約50%の減衰）\n  const decayParameter = 0.693 / 30;\n  return Math.exp(-decayParameter * daysSinceActivity);\n};\n\n// 活動タイプに基づくスコア変化を計算\nexport const calculateScoreChange = (\n  activityType: ActivityType, \n  materialType: MaterialType = 'OTHER', \n  daysSinceActivity: number = 0\n): ScoreChange => {\n  const baseScores = SCORE_WEIGHTS[activityType];\n  const typeMultiplier = MATERIAL_TYPE_MULTIPLIERS[materialType];\n  const timeDecay = calculateTimeDecay(daysSinceActivity);\n  \n  // 各スコアに重み付けと時間減衰を適用\n  return {\n    giver: Math.round(baseScores.giver * typeMultiplier * timeDecay),\n    taker: Math.round(baseScores.taker * typeMultiplier * timeDecay),\n    matcher: Math.round(baseScores.matcher * typeMultiplier * timeDecay)\n  };\n};\n\n// 過去の履歴に基づくギバースコアの再計算\nexport const recalculateScores = (\n  activities: Array<{\n    activityType: ActivityType;\n    materialType?: MaterialType; \n    timestamp: Date;\n  }>\n): ScoreChange => {\n  const now = new Date();\n  const totalScores: ScoreChange = { giver: 0, taker: 0, matcher: 0 };\n  \n  activities.forEach(activity => {\n    // アクティビティからの経過日数を計算\n    const daysSince = Math.floor((now.getTime() - activity.timestamp.getTime()) / (1000 * 60 * 60 * 24));\n    \n    // スコア変化を計算\n    const scoreChange = calculateScoreChange(\n      activity.activityType, \n      activity.materialType || 'OTHER', \n      daysSince\n    );\n    \n    // 合計スコアに加算\n    totalScores.giver += scoreChange.giver;\n    totalScores.taker += scoreChange.taker;\n    totalScores.matcher += scoreChange.matcher;\n  });\n  \n  return totalScores;\n};\n\n// 最高のパーソナリティタイプを決定する\nexport const determinePersonalityType = (\n  giverScore: number,\n  takerScore: number,\n  matcherScore: number\n): PersonalityType => {\n  const scores: Record<PersonalityType, number> = {\n    giver: giverScore,\n    taker: takerScore,\n    matcher: matcherScore\n  };\n\n  let maxType: PersonalityType = 'matcher';\n  let maxScore = -Infinity;\n\n  (Object.entries(scores) as [PersonalityType, number][]).forEach(([type, score]) => {\n    if (score > maxScore) {\n      maxType = type;\n      maxScore = score;\n    }\n  });\n\n  return maxType;\n};\n\n// ギバースコアのレベルを計算（1-10のスケール）\nexport const calculateGiverLevel = (giverScore: number): number => {\n  // スコアに基づくレベル（例：100ポイントごとに1レベルアップ、最大レベル10）\n  const level = Math.floor(giverScore / 100) + 1;\n  return Math.min(Math.max(level, 1), 10); // 1-10の範囲に制限\n};\n\nexport const calculateProgress = (\n  currentScores: ScoreChange,\n  targetType: PersonalityType\n): number => {\n  const totalScore = Object.values(currentScores).reduce((a, b) => a + b, 0);\n  const targetScore = currentScores[targetType];\n  \n  return totalScore === 0 ? 0 : (targetScore / totalScore) * 100;\n}; "],"names":["calculateGiverLevel","calculateProgress","calculateScoreChange","calculateTimeDecay","determinePersonalityType","recalculateScores","SCORE_WEIGHTS","CREATE_CONTENT","giver","taker","matcher","PROVIDE_FEEDBACK","CONSUME_CONTENT","RECEIVE_FEEDBACK","SHARE_RESOURCE","ASK_QUESTION","MATERIAL_TYPE_MULTIPLIERS","ARTICLE","VIDEO","QUIZ","FLASHCARD","EXERCISE","EBOOK","AUDIO","OTHER","daysSinceActivity","decayParameter","Math","exp","activityType","materialType","baseScores","typeMultiplier","timeDecay","round","activities","now","Date","totalScores","forEach","activity","daysSince","floor","getTime","timestamp","scoreChange","giverScore","takerScore","matcherScore","scores","maxType","maxScore","Infinity","Object","entries","type","score","level","min","max","currentScores","targetType","totalScore","values","reduce","a","b","targetScore"],"mappings":"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"}