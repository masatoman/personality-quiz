{"version":3,"sources":["/Users/master/Local Sites/testcursor/src/app/__tests__/page.test.tsx"],"sourcesContent":["/// <reference types=\"@testing-library/jest-dom\" />\nimport '@testing-library/jest-dom';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport userEvent from '@testing-library/user-event';\nimport { act } from 'react-dom/test-utils';\nimport Home from '../page';\nimport { useRouter } from 'next/navigation';\nimport { test, expect } from '@playwright/test';\n\n// useRouterのモック\njest.mock('next/navigation', () => ({\n  useRouter: jest.fn(() => ({\n    push: jest.fn(),\n    replace: jest.fn(),\n    prefetch: jest.fn(),\n  })),\n}));\n\n// window.openのモック\nconst mockOpen = jest.fn();\nwindow.open = mockOpen;\n\n// fetchのモック\nconst mockFetch = jest.fn(() =>\n  Promise.resolve({\n    ok: true,\n    status: 200,\n    headers: new Headers(),\n    json: () => Promise.resolve({ \n      stats: {\n        giver: { count: 4, percentage: 23.5 },\n        taker: { count: 6, percentage: 35.3 },\n        matcher: { count: 7, percentage: 41.2 }\n      }\n    })\n  } as Response)\n);\n\nglobal.fetch = mockFetch;\n\ndescribe('Home', () => {\n  const mockRouter = {\n    push: jest.fn(),\n    replace: jest.fn(),\n  };\n\n  beforeEach(() => {\n    (useRouter as jest.Mock).mockReturnValue(mockRouter);\n    jest.spyOn(window, 'open').mockImplementation(jest.fn());\n    // 各テストの前にモックをリセット\n    jest.clearAllMocks();\n  });\n\n  afterEach(() => {\n    jest.clearAllMocks();\n  });\n\n  const startDiagnosis = async () => {\n    const startButton = screen.getByText('診断を始める');\n    await act(async () => {\n      await userEvent.click(startButton);\n    });\n  };\n\n  it('最初の質問が表示される', async () => {\n    render(<Home />);\n    await startDiagnosis();\n    \n    const questionText = screen.getByText((content, element) => {\n      return element?.textContent === '質問 1 / 10';\n    });\n    \n    expect(questionText).toBeInTheDocument();\n    expect(screen.getByText('英語の授業で新しい単語を覚えるとき、どの方法が最も自然に感じますか？')).toBeInTheDocument();\n  });\n\n  it('質問に回答すると次の質問に進む', async () => {\n    render(<Home />);\n    await startDiagnosis();\n    \n    const firstOption = screen.getByText('単語の意味を他の人に説明しながら覚える');\n    await act(async () => {\n      await userEvent.click(firstOption);\n    });\n\n    // 選択後すぐには次の質問に進まないことを確認\n    expect(screen.getByText('質問 1 / 10')).toBeInTheDocument();\n\n    // 次へボタンをクリック\n    const nextButton = screen.getByText('次へ');\n    await act(async () => {\n      await userEvent.click(nextButton);\n    });\n\n    const questionText = screen.getByText((content, element) => {\n      return element?.textContent === '質問 2 / 10';\n    });\n    \n    expect(questionText).toBeInTheDocument();\n  });\n\n  it('すべての質問に回答すると結果が表示される', async () => {\n    render(<Home />);\n    await startDiagnosis();\n    \n    // すべての質問に回答\n    for (let i = 0; i < 10; i++) {\n      const options = screen.getAllByRole('button').filter(button => \n        !button.textContent?.includes('診断を始める') &&\n        !button.textContent?.includes('もう一度テストを受ける') &&\n        !button.textContent?.includes('次へ')\n      );\n      await act(async () => {\n        await userEvent.click(options[0]);\n      });\n      \n      // 次へボタンをクリック（最後の質問以外）\n      if (i < 9) {\n        const nextButton = screen.getByText('次へ');\n        await act(async () => {\n          await userEvent.click(nextButton);\n        });\n      }\n    }\n\n    // 結果が表示されることを確認\n    expect(screen.getByText('あなたの結果')).toBeInTheDocument();\n    expect(screen.getByText('あなたへのアドバイス')).toBeInTheDocument();\n  });\n\n  it('「もう一度テストを受ける」ボタンをクリックすると最初に戻る', async () => {\n    render(<Home />);\n    await startDiagnosis();\n    \n    // すべての質問に回答\n    for (let i = 0; i < 10; i++) {\n      const options = screen.getAllByRole('button').filter(button => \n        !button.textContent?.includes('診断を始める') &&\n        !button.textContent?.includes('もう一度テストを受ける') &&\n        !button.textContent?.includes('次へ')\n      );\n      await act(async () => {\n        await userEvent.click(options[0]);\n      });\n      \n      // 次へボタンをクリック（最後の質問以外）\n      if (i < 9) {\n        const nextButton = screen.getByText('次へ');\n        await act(async () => {\n          await userEvent.click(nextButton);\n        });\n      }\n    }\n\n    // もう一度テストを受けるボタンをクリック\n    const resetButton = screen.getByText('もう一度テストを受ける');\n    await act(async () => {\n      await userEvent.click(resetButton);\n    });\n\n    // 最初の画面が表示されることを確認\n    expect(screen.getByText('英語学習スタイル診断')).toBeInTheDocument();\n    expect(screen.getByText('診断を始める')).toBeInTheDocument();\n  });\n\n  it('進捗バーが正しく更新される', async () => {\n    render(<Home />);\n    await startDiagnosis();\n\n    const progressBar = screen.getByRole('progressbar');\n    expect(progressBar).toHaveAttribute('aria-valuenow', '10');\n\n    // 最初の質問に回答\n    const firstOption = screen.getByText('単語の意味を他の人に説明しながら覚える');\n    await act(async () => {\n      await userEvent.click(firstOption);\n    });\n\n    // 次へボタンをクリック\n    const nextButton = screen.getByText('次へ');\n    await act(async () => {\n      await userEvent.click(nextButton);\n    });\n\n    expect(progressBar).toHaveAttribute('aria-valuenow', '20');\n  });\n\n  it('SNSシェアボタンが正しく機能する', async () => {\n    mockOpen.mockClear();\n    render(<Home />);\n    await startDiagnosis();\n    \n    // すべての質問に回答\n    for (let i = 0; i < 10; i++) {\n      const options = screen.getAllByRole('button').filter(button => \n        !button.textContent?.includes('診断を始める') &&\n        !button.textContent?.includes('もう一度テストを受ける') &&\n        !button.textContent?.includes('次へ')\n      );\n      await act(async () => {\n        await userEvent.click(options[0]);\n      });\n      \n      // 次へボタンをクリック（最後の質問以外）\n      if (i < 9) {\n        const nextButton = screen.getByText('次へ');\n        await act(async () => {\n          await userEvent.click(nextButton);\n        });\n      }\n    }\n\n    // SNSシェアボタンをクリック\n    const twitterButton = screen.getByText('X (Twitter)');\n    await userEvent.click(twitterButton);\n    \n    expect(mockOpen).toHaveBeenCalledTimes(1);\n    expect(mockOpen).toHaveBeenCalledWith(expect.stringContaining('twitter.com/intent/tweet'), '_blank');\n  });\n\n  it('選択したオプションに正しいスタイルが適用される', async () => {\n    render(<Home />);\n    await startDiagnosis();\n\n    const firstOption = screen.getByText('単語の意味を他の人に説明しながら覚える');\n    await act(async () => {\n      await userEvent.click(firstOption);\n    });\n\n    expect(firstOption.closest('button')).toHaveClass('selected-option');\n  });\n\n  it('renders progress bar with correct accessibility attributes', () => {\n    render(<Home />);\n    const progressBar = screen.getByRole('progressbar');\n    \n    expect(progressBar).toBeInTheDocument();\n    expect(progressBar).toHaveAttribute('aria-valuemin', '0');\n    expect(progressBar).toHaveAttribute('aria-valuemax', '100');\n    expect(progressBar).toHaveAttribute('aria-valuenow', '10'); // 最初の質問は10%\n  });\n\n  it('プログレスバーが適切なアクセシビリティ属性を持っている', () => {\n    render(<Home />);\n    const progressBar = screen.getByRole('progressbar');\n    \n    expect(progressBar).toBeInTheDocument();\n    expect(progressBar).toHaveAttribute('aria-valuemin', '0');\n    expect(progressBar).toHaveAttribute('aria-valuemax', '100');\n    expect(progressBar).toHaveAttribute('aria-valuenow');\n  });\n}); "],"names":["jest","mock","useRouter","fn","push","replace","prefetch","mockOpen","window","open","mockFetch","Promise","resolve","ok","status","headers","Headers","json","stats","giver","count","percentage","taker","matcher","global","fetch","describe","mockRouter","beforeEach","mockReturnValue","spyOn","mockImplementation","clearAllMocks","afterEach","startDiagnosis","startButton","screen","getByText","act","userEvent","click","it","render","Home","questionText","content","element","textContent","expect","toBeInTheDocument","firstOption","nextButton","i","options","getAllByRole","filter","button","includes","resetButton","progressBar","getByRole","toHaveAttribute","mockClear","twitterButton","toHaveBeenCalledTimes","toHaveBeenCalledWith","stringContaining","closest","toHaveClass"],"mappings":"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"}