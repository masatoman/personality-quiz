services:
  # PostgreSQL データベース
  supabase-db:
    platform: linux/amd64
    image: supabase/postgres:14.1.0
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /var/lib/postgresql/data/pgdata
      # パフォーマンス最適化設定（M1 Mac 8GB向け）
      POSTGRES_MAX_CONNECTIONS: 50
      POSTGRES_SHARED_BUFFERS: 128MB
      POSTGRES_WORK_MEM: 8MB
      POSTGRES_MAINTENANCE_WORK_MEM: 64MB
      POSTGRES_EFFECTIVE_CACHE_SIZE: 512MB
    volumes:
      - supabase-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  # Supabase認証サービス
  supabase-auth:
    platform: linux/amd64
    image: supabase/gotrue:v2.132.3
    depends_on:
      - supabase-db
    environment:
      GOTRUE_JWT_SECRET: ${SUPABASE_JWT_SECRET}
      GOTRUE_JWT_EXP: ${GOTRUE_JWT_EXP}
      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_HOST: supabase-db
      GOTRUE_DB_PORT: 5432
      GOTRUE_DB_USER: ${POSTGRES_USER}
      GOTRUE_DB_PASSWORD: ${POSTGRES_PASSWORD}
      GOTRUE_DB_NAME: ${POSTGRES_DB}
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_SITE_URL: ${GOTRUE_SITE_URL}
      GOTRUE_MAILER_AUTOCONFIRM: ${GOTRUE_MAILER_AUTOCONFIRM}
      # コネクションプール設定（軽量化）
      GOTRUE_DB_MAX_CONNS: 20
      GOTRUE_DB_IDLE_CONNS: 5
    ports:
      - "${SUPABASE_AUTH_PORT}:9999"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9999/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

  # Supabase REST API
  supabase-rest:
    platform: linux/amd64
    image: postgrest/postgrest:v11.2.0
    depends_on:
      supabase-db:
        condition: service_healthy
    restart: always
    environment:
      PGRST_DB_URI: postgres://postgres:postgres@supabase-db:5432/postgres
      PGRST_DB_SCHEMA: public,auth
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: "your-super-secret-jwt-token-with-at-least-32-characters"
      PGRST_DB_USE_LEGACY_GUCS: "false"
    ports:
      - "3001:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

  # Supabase Realtime
  supabase-realtime:
    platform: linux/amd64
    image: supabase/realtime:v2.25.8
    depends_on:
      - supabase-db
    environment:
      DB_HOST: supabase-db
      DB_PORT: 5432
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
      PORT: ${SUPABASE_REALTIME_PORT}
      JWT_SECRET: ${SUPABASE_JWT_SECRET}
      # パフォーマンス設定（軽量化）
      SUBSCRIPTION_MAX_TIMEOUT: 30000
      SUBSCRIPTION_MAX_COUNT: 50
    ports:
      - "${SUPABASE_REALTIME_PORT}:4000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

volumes:
  supabase-db-data:
    driver: local

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.24.0.0/16 